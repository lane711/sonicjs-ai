{"version":3,"sources":["../src/schemas/index.ts","../src/routes/api-content-crud.ts","../src/routes/api.ts","../src/routes/api-media.ts","../src/routes/api-system.ts","../../../node_modules/@hono/zod-validator/dist/index.js","../src/routes/admin-api.ts","../src/templates/components/alert.template.ts","../src/templates/pages/auth-login.template.ts","../src/templates/pages/auth-register.template.ts","../src/services/auth-validation.ts","../src/routes/auth.ts","../src/templates/components/logo.template.ts","../src/templates/layouts/admin-layout-catalyst.template.ts","../src/templates/components/dynamic-field.template.ts","../src/templates/components/confirmation-dialog.template.ts","../src/templates/pages/admin-content-form.template.ts","../src/templates/components/table.template.ts","../src/templates/components/pagination.template.ts","../src/templates/pages/admin-content-list.template.ts","../src/templates/components/version-history.template.ts","../src/routes/admin-content.ts","../src/routes/index.ts"],"names":["Hono","z","error","options","escapeHtml","db","collection","formData","html"],"mappings":"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","file":"chunk-5XKH6PBR.js","sourcesContent":["/**\n * Schema Definitions\n *\n * Placeholder for schema definitions - to be populated as needed\n */\n\nexport interface SchemaDefinition {\n  name: string\n  fields: any[]\n}\n\n// Empty array for now - schemas will be migrated incrementally\nexport const schemaDefinitions: SchemaDefinition[] = []\n","import { Hono } from 'hono'\nimport { requireAuth } from '../middleware'\nimport { getCacheService, CACHE_CONFIGS } from '../services'\nimport type { Bindings, Variables } from '../app'\n\nconst apiContentCrudRoutes = new Hono<{ Bindings: Bindings; Variables: Variables }>()\n\n// GET /api/content/:id - Get single content item by ID\napiContentCrudRoutes.get('/:id', async (c) => {\n  try {\n    const id = c.req.param('id')\n    const db = c.env.DB\n\n    const stmt = db.prepare('SELECT * FROM content WHERE id = ?')\n    const content = await stmt.bind(id).first()\n\n    if (!content) {\n      return c.json({ error: 'Content not found' }, 404)\n    }\n\n    const transformedContent = {\n      id: (content as any).id,\n      title: (content as any).title,\n      slug: (content as any).slug,\n      status: (content as any).status,\n      collectionId: (content as any).collection_id,\n      data: (content as any).data ? JSON.parse((content as any).data) : {},\n      created_at: (content as any).created_at,\n      updated_at: (content as any).updated_at\n    }\n\n    return c.json({ data: transformedContent })\n  } catch (error) {\n    console.error('Error fetching content:', error)\n    return c.json({\n      error: 'Failed to fetch content',\n      details: error instanceof Error ? error.message : String(error)\n    }, 500)\n  }\n})\n\n// POST /api/content - Create new content (requires authentication)\napiContentCrudRoutes.post('/', requireAuth(), async (c) => {\n  try {\n    const db = c.env.DB\n    const user = c.get('user')\n    const body = await c.req.json()\n\n    const { collectionId, title, slug, status, data } = body\n\n    // Validate required fields\n    if (!collectionId) {\n      return c.json({ error: 'collectionId is required' }, 400)\n    }\n\n    if (!title) {\n      return c.json({ error: 'title is required' }, 400)\n    }\n\n    // Generate slug from title if not provided\n    let finalSlug = slug || title\n    finalSlug = finalSlug.toLowerCase()\n      .replace(/[^a-z0-9\\s-]/g, '')\n      .replace(/\\s+/g, '-')\n      .replace(/-+/g, '-')\n      .trim()\n\n    // Check for duplicate slug within the same collection\n    const duplicateCheck = db.prepare(\n      'SELECT id FROM content WHERE collection_id = ? AND slug = ?'\n    )\n    const existing = await duplicateCheck.bind(collectionId, finalSlug).first()\n\n    if (existing) {\n      return c.json({ error: 'A content item with this slug already exists in this collection' }, 409)\n    }\n\n    // Create new content\n    const contentId = crypto.randomUUID()\n    const now = Date.now()\n\n    const insertStmt = db.prepare(`\n      INSERT INTO content (\n        id, collection_id, slug, title, data, status,\n        author_id, created_at, updated_at\n      )\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `)\n\n    await insertStmt.bind(\n      contentId,\n      collectionId,\n      finalSlug,\n      title,\n      JSON.stringify(data || {}),\n      status || 'draft',\n      user?.userId || 'unknown',\n      now,\n      now\n    ).run()\n\n    // Invalidate cache\n    const cache = getCacheService(CACHE_CONFIGS.api!)\n    await cache.invalidate(`content:list:${collectionId}:*`)\n    await cache.invalidate('content-filtered:*')\n\n    // Get the created content\n    const getStmt = db.prepare('SELECT * FROM content WHERE id = ?')\n    const createdContent = await getStmt.bind(contentId).first() as any\n\n    return c.json({\n      data: {\n        id: createdContent.id,\n        title: createdContent.title,\n        slug: createdContent.slug,\n        status: createdContent.status,\n        collectionId: createdContent.collection_id,\n        data: createdContent.data ? JSON.parse(createdContent.data) : {},\n        created_at: createdContent.created_at,\n        updated_at: createdContent.updated_at\n      }\n    }, 201)\n  } catch (error) {\n    console.error('Error creating content:', error)\n    return c.json({\n      error: 'Failed to create content',\n      details: error instanceof Error ? error.message : String(error)\n    }, 500)\n  }\n})\n\n// PUT /api/content/:id - Update content (requires authentication)\napiContentCrudRoutes.put('/:id', requireAuth(), async (c) => {\n  try {\n    const id = c.req.param('id')\n    const db = c.env.DB\n    const body = await c.req.json()\n\n    // Check if content exists\n    const existingStmt = db.prepare('SELECT * FROM content WHERE id = ?')\n    const existing = await existingStmt.bind(id).first() as any\n\n    if (!existing) {\n      return c.json({ error: 'Content not found' }, 404)\n    }\n\n    // Build update fields dynamically\n    const updates: string[] = []\n    const params: any[] = []\n\n    if (body.title !== undefined) {\n      updates.push('title = ?')\n      params.push(body.title)\n    }\n\n    if (body.slug !== undefined) {\n      let finalSlug = body.slug.toLowerCase()\n        .replace(/[^a-z0-9\\s-]/g, '')\n        .replace(/\\s+/g, '-')\n        .replace(/-+/g, '-')\n        .trim()\n      updates.push('slug = ?')\n      params.push(finalSlug)\n    }\n\n    if (body.status !== undefined) {\n      updates.push('status = ?')\n      params.push(body.status)\n    }\n\n    if (body.data !== undefined) {\n      updates.push('data = ?')\n      params.push(JSON.stringify(body.data))\n    }\n\n    // Always update updated_at\n    const now = Date.now()\n    updates.push('updated_at = ?')\n    params.push(now)\n\n    // Add id to params for WHERE clause\n    params.push(id)\n\n    // Execute update\n    const updateStmt = db.prepare(`\n      UPDATE content SET ${updates.join(', ')}\n      WHERE id = ?\n    `)\n\n    await updateStmt.bind(...params).run()\n\n    // Invalidate cache\n    const cache = getCacheService(CACHE_CONFIGS.api!)\n    await cache.delete(cache.generateKey('content', id))\n    await cache.invalidate(`content:list:${existing.collection_id}:*`)\n    await cache.invalidate('content-filtered:*')\n\n    // Get updated content\n    const getStmt = db.prepare('SELECT * FROM content WHERE id = ?')\n    const updatedContent = await getStmt.bind(id).first() as any\n\n    return c.json({\n      data: {\n        id: updatedContent.id,\n        title: updatedContent.title,\n        slug: updatedContent.slug,\n        status: updatedContent.status,\n        collectionId: updatedContent.collection_id,\n        data: updatedContent.data ? JSON.parse(updatedContent.data) : {},\n        created_at: updatedContent.created_at,\n        updated_at: updatedContent.updated_at\n      }\n    })\n  } catch (error) {\n    console.error('Error updating content:', error)\n    return c.json({\n      error: 'Failed to update content',\n      details: error instanceof Error ? error.message : String(error)\n    }, 500)\n  }\n})\n\n// DELETE /api/content/:id - Delete content (requires authentication)\napiContentCrudRoutes.delete('/:id', requireAuth(), async (c) => {\n  try {\n    const id = c.req.param('id')\n    const db = c.env.DB\n\n    // Check if content exists\n    const existingStmt = db.prepare('SELECT collection_id FROM content WHERE id = ?')\n    const existing = await existingStmt.bind(id).first() as any\n\n    if (!existing) {\n      return c.json({ error: 'Content not found' }, 404)\n    }\n\n    // Delete the content (hard delete for API, soft delete happens in admin routes)\n    const deleteStmt = db.prepare('DELETE FROM content WHERE id = ?')\n    await deleteStmt.bind(id).run()\n\n    // Invalidate cache\n    const cache = getCacheService(CACHE_CONFIGS.api!)\n    await cache.delete(cache.generateKey('content', id))\n    await cache.invalidate(`content:list:${existing.collection_id}:*`)\n    await cache.invalidate('content-filtered:*')\n\n    return c.json({ success: true })\n  } catch (error) {\n    console.error('Error deleting content:', error)\n    return c.json({\n      error: 'Failed to delete content',\n      details: error instanceof Error ? error.message : String(error)\n    }, 500)\n  }\n})\n\nexport default apiContentCrudRoutes\n","import { Hono } from 'hono'\nimport { cors } from 'hono/cors'\nimport { schemaDefinitions } from '../schemas'\nimport { getCacheService, CACHE_CONFIGS } from '../services'\nimport { QueryFilterBuilder, QueryFilter } from '../utils'\nimport { isPluginActive } from '../middleware'\nimport apiContentCrudRoutes from './api-content-crud'\nimport type { Bindings, Variables as AppVariables } from '../app'\n\n// Extend Variables with API-specific fields\ninterface Variables extends AppVariables {\n  startTime: number\n  cacheEnabled?: boolean\n}\n\nconst apiRoutes = new Hono<{ Bindings: Bindings; Variables: Variables }>()\n\n// Add timing middleware\napiRoutes.use('*', async (c, next) => {\n  const startTime = Date.now()\n  c.set('startTime', startTime)\n  await next()\n  const totalTime = Date.now() - startTime\n  c.header('X-Response-Time', `${totalTime}ms`)\n})\n\n// Check if cache plugin is active\napiRoutes.use('*', async (c, next) => {\n  const cacheEnabled = await isPluginActive(c.env.DB, 'core-cache')\n  c.set('cacheEnabled', cacheEnabled)\n  await next()\n})\n\n// Add CORS middleware\napiRoutes.use('*', cors({\n  origin: '*',\n  allowMethods: ['GET', 'POST', 'PUT', 'DELETE', 'OPTIONS'],\n  allowHeaders: ['Content-Type', 'Authorization']\n}))\n\n// Helper function to add timing metadata\nfunction addTimingMeta(c: any, meta: any = {}, executionStartTime?: number) {\n  const totalTime = Date.now() - c.get('startTime')\n  const executionTime = executionStartTime ? Date.now() - executionStartTime : undefined\n\n  return {\n    ...meta,\n    timing: {\n      total: totalTime,\n      execution: executionTime,\n      unit: 'ms'\n    }\n  }\n}\n\n// Root endpoint - API info\napiRoutes.get('/', (c) => {\n  return c.json({\n    name: 'SonicJS API',\n    version: '2.0.0',\n    description: 'RESTful API for SonicJS headless CMS',\n    endpoints: {\n      health: '/api/health',\n      collections: '/api/collections',\n      content: '/api/content',\n      contentById: '/api/content/:id',\n      collectionContent: '/api/collections/:collection/content'\n    },\n    documentation: '/docs'\n  })\n})\n\n// Health check endpoint\napiRoutes.get('/health', (c) => {\n  return c.json({\n    status: 'healthy',\n    timestamp: new Date().toISOString(),\n    schemas: schemaDefinitions.map(s => s.name)\n  })\n})\n\n// Basic collections endpoint\napiRoutes.get('/collections', async (c) => {\n  const executionStart = Date.now()\n\n  try {\n    const db = c.env.DB\n    const cacheEnabled = c.get('cacheEnabled')\n    const cache = getCacheService(CACHE_CONFIGS.api!)\n    const cacheKey = cache.generateKey('collections', 'all')\n\n    // Use cache only if cache plugin is active\n    if (cacheEnabled) {\n      const cacheResult = await cache.getWithSource<any>(cacheKey)\n      if (cacheResult.hit && cacheResult.data) {\n        // Add cache headers\n        c.header('X-Cache-Status', 'HIT')\n        c.header('X-Cache-Source', cacheResult.source)\n        if (cacheResult.ttl) {\n          c.header('X-Cache-TTL', Math.floor(cacheResult.ttl).toString())\n        }\n\n        // Add cache info and timing to meta\n        const dataWithMeta = {\n          ...cacheResult.data,\n          meta: addTimingMeta(c, {\n            ...cacheResult.data.meta,\n            cache: {\n              hit: true,\n              source: cacheResult.source,\n              ttl: cacheResult.ttl ? Math.floor(cacheResult.ttl) : undefined\n            }\n          }, executionStart)\n        }\n\n        return c.json(dataWithMeta)\n      }\n    }\n\n    // Cache miss - fetch from database\n    c.header('X-Cache-Status', 'MISS')\n    c.header('X-Cache-Source', 'database')\n\n    const stmt = db.prepare('SELECT * FROM collections WHERE is_active = 1')\n    const { results } = await stmt.all()\n\n    // Parse schema and format results\n    const transformedResults = results.map((row: any) => ({\n      ...row,\n      schema: row.schema ? JSON.parse(row.schema) : {},\n      is_active: row.is_active // Keep as number (1 or 0)\n    }))\n\n    const responseData = {\n      data: transformedResults,\n      meta: addTimingMeta(c, {\n        count: results.length,\n        timestamp: new Date().toISOString(),\n        cache: {\n          hit: false,\n          source: 'database'\n        }\n      }, executionStart)\n    }\n\n    // Cache the response only if cache plugin is enabled\n    if (cacheEnabled) {\n      await cache.set(cacheKey, responseData)\n    }\n\n    return c.json(responseData)\n  } catch (error) {\n    console.error('Error fetching collections:', error)\n    return c.json({ error: 'Failed to fetch collections' }, 500)\n  }\n})\n\n// Basic content endpoint with advanced filtering\napiRoutes.get('/content', async (c) => {\n  const executionStart = Date.now()\n\n  try {\n    const db = c.env.DB\n    const queryParams = c.req.query()\n\n    // Handle collection parameter - convert collection name to collection_id\n    if (queryParams.collection) {\n      const collectionName = queryParams.collection\n      const collectionStmt = db.prepare('SELECT id FROM collections WHERE name = ? AND is_active = 1')\n      const collectionResult = await collectionStmt.bind(collectionName).first()\n\n      if (collectionResult) {\n        // Replace 'collection' param with 'collection_id' for the filter builder\n        queryParams.collection_id = (collectionResult as any).id\n        delete queryParams.collection\n      } else {\n        // Collection not found - return empty result\n        return c.json({\n          data: [],\n          meta: addTimingMeta(c, {\n            count: 0,\n            timestamp: new Date().toISOString(),\n            message: `Collection '${collectionName}' not found`\n          }, executionStart)\n        })\n      }\n    }\n\n    // Parse filter from query parameters\n    const filter: QueryFilter = QueryFilterBuilder.parseFromQuery(queryParams)\n\n    // Set default limit if not provided\n    if (!filter.limit) {\n      filter.limit = 50\n    }\n    filter.limit = Math.min(filter.limit, 1000) // Max 1000\n\n    // Build SQL query from filter\n    const builder = new QueryFilterBuilder()\n    const queryResult = builder.build('content', filter)\n\n    // Check for query building errors\n    if (queryResult.errors.length > 0) {\n      return c.json({\n        error: 'Invalid filter parameters',\n        details: queryResult.errors\n      }, 400)\n    }\n\n    // Only use cache if cache plugin is active\n    const cacheEnabled = c.get('cacheEnabled')\n    const cache = getCacheService(CACHE_CONFIGS.api!)\n    const cacheKey = cache.generateKey('content-filtered', JSON.stringify({ filter, query: queryResult.sql }))\n\n    if (cacheEnabled) {\n      const cacheResult = await cache.getWithSource<any>(cacheKey)\n      if (cacheResult.hit && cacheResult.data) {\n        // Add cache headers\n        c.header('X-Cache-Status', 'HIT')\n        c.header('X-Cache-Source', cacheResult.source)\n        if (cacheResult.ttl) {\n          c.header('X-Cache-TTL', Math.floor(cacheResult.ttl).toString())\n        }\n\n        // Add cache info and timing to meta\n        const dataWithMeta = {\n          ...cacheResult.data,\n          meta: addTimingMeta(c, {\n            ...cacheResult.data.meta,\n            cache: {\n              hit: true,\n              source: cacheResult.source,\n              ttl: cacheResult.ttl ? Math.floor(cacheResult.ttl) : undefined\n            }\n          }, executionStart)\n        }\n\n        return c.json(dataWithMeta)\n      }\n    }\n\n    // Cache miss - fetch from database\n    c.header('X-Cache-Status', 'MISS')\n    c.header('X-Cache-Source', 'database')\n\n    // Execute query with parameters\n    const stmt = db.prepare(queryResult.sql)\n    const boundStmt = queryResult.params.length > 0\n      ? stmt.bind(...queryResult.params)\n      : stmt\n\n    const { results } = await boundStmt.all()\n\n    // Transform results to match API spec (camelCase)\n    const transformedResults = results.map((row: any) => ({\n      id: row.id,\n      title: row.title,\n      slug: row.slug,\n      status: row.status,\n      collectionId: row.collection_id,\n      data: row.data ? JSON.parse(row.data) : {},\n      created_at: row.created_at,\n      updated_at: row.updated_at\n    }))\n\n    const responseData = {\n      data: transformedResults,\n      meta: addTimingMeta(c, {\n        count: results.length,\n        timestamp: new Date().toISOString(),\n        filter: filter,\n        query: {\n          sql: queryResult.sql,\n          params: queryResult.params\n        },\n        cache: {\n          hit: false,\n          source: 'database'\n        }\n      }, executionStart)\n    }\n\n    // Cache the response only if cache is enabled\n    if (cacheEnabled) {\n      await cache.set(cacheKey, responseData)\n    }\n\n    return c.json(responseData)\n  } catch (error) {\n    console.error('Error fetching content:', error)\n    return c.json({\n      error: 'Failed to fetch content',\n      details: error instanceof Error ? error.message : String(error)\n    }, 500)\n  }\n})\n\n// Collection-specific routes with advanced filtering\napiRoutes.get('/collections/:collection/content', async (c) => {\n  const executionStart = Date.now()\n\n  try {\n    const collection = c.req.param('collection')\n    const db = c.env.DB\n    const queryParams = c.req.query()\n\n    // First check if collection exists\n    const collectionStmt = db.prepare('SELECT * FROM collections WHERE name = ? AND is_active = 1')\n    const collectionResult = await collectionStmt.bind(collection).first()\n\n    if (!collectionResult) {\n      return c.json({ error: 'Collection not found' }, 404)\n    }\n\n    // Parse filter from query parameters\n    const filter: QueryFilter = QueryFilterBuilder.parseFromQuery(queryParams)\n\n    // Add collection_id filter to where clause\n    if (!filter.where) {\n      filter.where = { and: [] }\n    }\n\n    if (!filter.where.and) {\n      filter.where.and = []\n    }\n\n    // Add collection filter\n    filter.where.and.push({\n      field: 'collection_id',\n      operator: 'equals',\n      value: (collectionResult as any).id\n    })\n\n    // Set default limit if not provided\n    if (!filter.limit) {\n      filter.limit = 50\n    }\n    filter.limit = Math.min(filter.limit, 1000)\n\n    // Build SQL query from filter\n    const builder = new QueryFilterBuilder()\n    const queryResult = builder.build('content', filter)\n\n    // Check for query building errors\n    if (queryResult.errors.length > 0) {\n      return c.json({\n        error: 'Invalid filter parameters',\n        details: queryResult.errors\n      }, 400)\n    }\n\n    // Generate cache key\n    const cacheEnabled = c.get('cacheEnabled')\n    const cache = getCacheService(CACHE_CONFIGS.api!)\n    const cacheKey = cache.generateKey('collection-content-filtered', `${collection}:${JSON.stringify({ filter, query: queryResult.sql })}`)\n\n    // Only check cache if plugin is enabled\n    if (cacheEnabled) {\n      const cacheResult = await cache.getWithSource<any>(cacheKey)\n      if (cacheResult.hit && cacheResult.data) {\n        // Add cache headers\n        c.header('X-Cache-Status', 'HIT')\n        c.header('X-Cache-Source', cacheResult.source)\n        if (cacheResult.ttl) {\n          c.header('X-Cache-TTL', Math.floor(cacheResult.ttl).toString())\n        }\n\n        // Add cache info and timing to meta\n        const dataWithMeta = {\n          ...cacheResult.data,\n          meta: addTimingMeta(c, {\n            ...cacheResult.data.meta,\n            cache: {\n              hit: true,\n              source: cacheResult.source,\n              ttl: cacheResult.ttl ? Math.floor(cacheResult.ttl) : undefined\n            }\n          }, executionStart)\n        }\n\n        return c.json(dataWithMeta)\n      }\n    }\n\n    // Cache miss - fetch from database\n    c.header('X-Cache-Status', 'MISS')\n    c.header('X-Cache-Source', 'database')\n\n    // Execute query with parameters\n    const stmt = db.prepare(queryResult.sql)\n    const boundStmt = queryResult.params.length > 0\n      ? stmt.bind(...queryResult.params)\n      : stmt\n\n    const { results } = await boundStmt.all()\n\n    // Transform results to match API spec (camelCase)\n    const transformedResults = results.map((row: any) => ({\n      id: row.id,\n      title: row.title,\n      slug: row.slug,\n      status: row.status,\n      collectionId: row.collection_id,\n      data: row.data ? JSON.parse(row.data) : {},\n      created_at: row.created_at,\n      updated_at: row.updated_at\n    }))\n\n    const responseData = {\n      data: transformedResults,\n      meta: addTimingMeta(c, {\n        collection: {\n          ...(collectionResult as any),\n          schema: (collectionResult as any).schema ? JSON.parse((collectionResult as any).schema) : {}\n        },\n        count: results.length,\n        timestamp: new Date().toISOString(),\n        filter: filter,\n        query: {\n          sql: queryResult.sql,\n          params: queryResult.params\n        },\n        cache: {\n          hit: false,\n          source: 'database'\n        }\n      }, executionStart)\n    }\n\n    // Cache the response only if cache plugin is enabled\n    if (cacheEnabled) {\n      await cache.set(cacheKey, responseData)\n    }\n\n    return c.json(responseData)\n  } catch (error) {\n    console.error('Error fetching content:', error)\n    return c.json({\n      error: 'Failed to fetch content',\n      details: error instanceof Error ? error.message : String(error)\n    }, 500)\n  }\n})\n\n// Mount CRUD routes for content\napiRoutes.route('/content', apiContentCrudRoutes)\n\nexport default apiRoutes\n","import { Hono } from 'hono'\nimport { z } from 'zod'\nimport { requireAuth } from '../middleware'\nimport type { Bindings, Variables } from '../app'\n\n// Helper function to generate short IDs (replacement for nanoid)\nfunction generateId(): string {\n  return crypto.randomUUID().replace(/-/g, '').substring(0, 21)\n}\n\n// Helper function for emitting events (simplified for core package)\nasync function emitEvent(eventName: string, data: any) {\n  console.log(`[Event] ${eventName}:`, data)\n  // TODO: Implement proper event system when plugin architecture is ready\n}\n\n// File validation schema\nconst fileValidationSchema = z.object({\n  name: z.string().min(1).max(255),\n  type: z.string().refine(\n    (type) => {\n      const allowedTypes = [\n        // Images\n        'image/jpeg', 'image/jpg', 'image/png', 'image/gif', 'image/webp', 'image/svg+xml',\n        // Documents\n        'application/pdf', 'text/plain', 'application/msword', \n        'application/vnd.openxmlformats-officedocument.wordprocessingml.document',\n        // Videos\n        'video/mp4', 'video/webm', 'video/ogg', 'video/avi', 'video/mov',\n        // Audio\n        'audio/mp3', 'audio/wav', 'audio/ogg', 'audio/m4a'\n      ]\n      return allowedTypes.includes(type)\n    },\n    { message: 'Unsupported file type' }\n  ),\n  size: z.number().min(1).max(50 * 1024 * 1024) // 50MB max\n})\n\nexport const apiMediaRoutes = new Hono<{ Bindings: Bindings; Variables: Variables }>()\n\n// Apply auth middleware to all routes\napiMediaRoutes.use('*', requireAuth())\n\n// Upload single file\napiMediaRoutes.post('/upload', async (c) => {\n  try {\n    const user = c.get('user')\n    const formData = await c.req.formData()\n    const file = formData.get('file') as File\n    \n    if (!file) {\n      return c.json({ error: 'No file provided' }, 400)\n    }\n\n    // Validate file\n    const validation = fileValidationSchema.safeParse({\n      name: file.name,\n      type: file.type,\n      size: file.size\n    })\n\n    if (!validation.success) {\n      return c.json({ \n        error: 'File validation failed', \n        details: validation.error.issues \n      }, 400)\n    }\n\n    // Generate unique filename and R2 key\n    const fileId = generateId()\n    const fileExtension = file.name.split('.').pop() || ''\n    const filename = `${fileId}.${fileExtension}`\n    const folder = formData.get('folder') as string || 'uploads'\n    const r2Key = `${folder}/${filename}`\n\n    // Upload to R2\n    const arrayBuffer = await file.arrayBuffer()\n    const uploadResult = await c.env.MEDIA_BUCKET.put(r2Key, arrayBuffer, {\n      httpMetadata: {\n        contentType: file.type,\n        contentDisposition: `inline; filename=\"${file.name}\"`\n      },\n      customMetadata: {\n        originalName: file.name,\n        uploadedBy: user.userId,\n        uploadedAt: new Date().toISOString()\n      }\n    })\n\n    if (!uploadResult) {\n      return c.json({ error: 'Failed to upload file to storage' }, 500)\n    }\n\n    // Generate public URL using environment variable for bucket name\n    const bucketName = c.env.BUCKET_NAME || 'sonicjs-media-dev'\n    const publicUrl = `https://pub-${bucketName}.r2.dev/${r2Key}`\n    \n    // Extract image dimensions if it's an image\n    let width: number | undefined\n    let height: number | undefined\n    \n    if (file.type.startsWith('image/') && !file.type.includes('svg')) {\n      try {\n        const dimensions = await getImageDimensions(arrayBuffer)\n        width = dimensions.width\n        height = dimensions.height\n      } catch (error) {\n        console.warn('Failed to extract image dimensions:', error)\n      }\n    }\n\n    // Generate thumbnail URL for images\n    let thumbnailUrl: string | undefined\n    if (file.type.startsWith('image/') && c.env.IMAGES_ACCOUNT_ID) {\n      thumbnailUrl = `https://imagedelivery.net/${c.env.IMAGES_ACCOUNT_ID}/${r2Key}/thumbnail`\n    }\n\n    // Save to database\n    const mediaRecord = {\n      id: fileId,\n      filename: filename,\n      original_name: file.name,\n      mime_type: file.type,\n      size: file.size,\n      width,\n      height,\n      folder,\n      r2_key: r2Key,\n      public_url: publicUrl,\n      thumbnail_url: thumbnailUrl,\n      uploaded_by: user.userId,\n      uploaded_at: Math.floor(Date.now() / 1000),\n      created_at: Math.floor(Date.now() / 1000)\n    }\n\n    const stmt = c.env.DB.prepare(`\n      INSERT INTO media (\n        id, filename, original_name, mime_type, size, width, height, \n        folder, r2_key, public_url, thumbnail_url, uploaded_by, uploaded_at\n      ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `)\n    \n    await stmt.bind(\n      mediaRecord.id,\n      mediaRecord.filename,\n      mediaRecord.original_name,\n      mediaRecord.mime_type,\n      mediaRecord.size,\n      mediaRecord.width ?? null,\n      mediaRecord.height ?? null,\n      mediaRecord.folder,\n      mediaRecord.r2_key,\n      mediaRecord.public_url,\n      mediaRecord.thumbnail_url ?? null,\n      mediaRecord.uploaded_by,\n      mediaRecord.uploaded_at\n    ).run()\n\n    // Emit media upload event\n    await emitEvent('media.upload', { id: mediaRecord.id, filename: mediaRecord.filename })\n\n    return c.json({\n      success: true,\n      file: {\n        id: mediaRecord.id,\n        filename: mediaRecord.filename,\n        originalName: mediaRecord.original_name,\n        mimeType: mediaRecord.mime_type,\n        size: mediaRecord.size,\n        width: mediaRecord.width,\n        height: mediaRecord.height,\n        publicUrl: mediaRecord.public_url,\n        thumbnailUrl: mediaRecord.thumbnail_url,\n        uploadedAt: new Date(mediaRecord.uploaded_at * 1000).toISOString()\n      }\n    })\n  } catch (error) {\n    console.error('Upload error:', error)\n    return c.json({ error: 'Upload failed' }, 500)\n  }\n})\n\n// Upload multiple files\napiMediaRoutes.post('/upload-multiple', async (c) => {\n  try {\n    const user = c.get('user')\n    const formData = await c.req.formData()\n    const files = formData.getAll('files') as File[]\n    \n    if (!files || files.length === 0) {\n      return c.json({ error: 'No files provided' }, 400)\n    }\n\n    const uploadResults = []\n    const errors = []\n\n    for (const file of files) {\n      try {\n        // Validate file\n        const validation = fileValidationSchema.safeParse({\n          name: file.name,\n          type: file.type,\n          size: file.size\n        })\n\n        if (!validation.success) {\n          errors.push({\n            filename: file.name,\n            error: 'Validation failed',\n            details: validation.error.issues\n          })\n          continue\n        }\n\n        // Generate unique filename and R2 key\n        const fileId = generateId()\n        const fileExtension = file.name.split('.').pop() || ''\n        const filename = `${fileId}.${fileExtension}`\n        const folder = formData.get('folder') as string || 'uploads'\n        const r2Key = `${folder}/${filename}`\n\n        // Upload to R2\n        const arrayBuffer = await file.arrayBuffer()\n        const uploadResult = await c.env.MEDIA_BUCKET.put(r2Key, arrayBuffer, {\n          httpMetadata: {\n            contentType: file.type,\n            contentDisposition: `inline; filename=\"${file.name}\"`\n          },\n          customMetadata: {\n            originalName: file.name,\n            uploadedBy: user.userId,\n            uploadedAt: new Date().toISOString()\n          }\n        })\n\n        if (!uploadResult) {\n          errors.push({\n            filename: file.name,\n            error: 'Failed to upload to storage'\n          })\n          continue\n        }\n\n        // Generate public URL using environment variable for bucket name\n        const bucketName = c.env.BUCKET_NAME || 'sonicjs-media-dev'\n        const publicUrl = `https://pub-${bucketName}.r2.dev/${r2Key}`\n        \n        // Extract image dimensions if it's an image\n        let width: number | undefined\n        let height: number | undefined\n        \n        if (file.type.startsWith('image/') && !file.type.includes('svg')) {\n          try {\n            const dimensions = await getImageDimensions(arrayBuffer)\n            width = dimensions.width\n            height = dimensions.height\n          } catch (error) {\n            console.warn('Failed to extract image dimensions:', error)\n          }\n        }\n\n        // Generate thumbnail URL for images\n        let thumbnailUrl: string | undefined\n        if (file.type.startsWith('image/') && c.env.IMAGES_ACCOUNT_ID) {\n          thumbnailUrl = `https://imagedelivery.net/${c.env.IMAGES_ACCOUNT_ID}/${r2Key}/thumbnail`\n        }\n\n        // Save to database\n        const mediaRecord = {\n          id: fileId,\n          filename: filename,\n          original_name: file.name,\n          mime_type: file.type,\n          size: file.size,\n          width,\n          height,\n          folder,\n          r2_key: r2Key,\n          public_url: publicUrl,\n          thumbnail_url: thumbnailUrl,\n          uploaded_by: user.userId,\n          uploaded_at: Math.floor(Date.now() / 1000)\n        }\n\n        const stmt = c.env.DB.prepare(`\n          INSERT INTO media (\n            id, filename, original_name, mime_type, size, width, height, \n            folder, r2_key, public_url, thumbnail_url, uploaded_by, uploaded_at\n          ) VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n        `)\n        \n        await stmt.bind(\n          mediaRecord.id,\n          mediaRecord.filename,\n          mediaRecord.original_name,\n          mediaRecord.mime_type,\n          mediaRecord.size,\n          mediaRecord.width ?? null,\n          mediaRecord.height ?? null,\n          mediaRecord.folder,\n          mediaRecord.r2_key,\n          mediaRecord.public_url,\n          mediaRecord.thumbnail_url ?? null,\n          mediaRecord.uploaded_by,\n          mediaRecord.uploaded_at\n        ).run()\n\n        uploadResults.push({\n          id: mediaRecord.id,\n          filename: mediaRecord.filename,\n          originalName: mediaRecord.original_name,\n          mimeType: mediaRecord.mime_type,\n          size: mediaRecord.size,\n          width: mediaRecord.width,\n          height: mediaRecord.height,\n          publicUrl: mediaRecord.public_url,\n          thumbnailUrl: mediaRecord.thumbnail_url,\n          uploadedAt: new Date(mediaRecord.uploaded_at * 1000).toISOString()\n        })\n      } catch (error) {\n        errors.push({\n          filename: file.name,\n          error: 'Upload failed',\n          details: error instanceof Error ? error.message : 'Unknown error'\n        })\n      }\n    }\n\n    // Emit media upload event if any uploads succeeded\n    if (uploadResults.length > 0) {\n      await emitEvent('media.upload', { count: uploadResults.length })\n    }\n\n    return c.json({\n      success: uploadResults.length > 0,\n      uploaded: uploadResults,\n      errors: errors,\n      summary: {\n        total: files.length,\n        successful: uploadResults.length,\n        failed: errors.length\n      }\n    })\n  } catch (error) {\n    console.error('Multiple upload error:', error)\n    return c.json({ error: 'Upload failed' }, 500)\n  }\n})\n\n// Bulk delete files\napiMediaRoutes.post('/bulk-delete', async (c) => {\n  try {\n    const user = c.get('user')\n    const body = await c.req.json()\n    const fileIds = body.fileIds as string[]\n    \n    if (!fileIds || !Array.isArray(fileIds) || fileIds.length === 0) {\n      return c.json({ error: 'No file IDs provided' }, 400)\n    }\n\n    // Limit bulk operations to prevent abuse\n    if (fileIds.length > 50) {\n      return c.json({ error: 'Too many files selected. Maximum 50 files per operation.' }, 400)\n    }\n\n    const results = []\n    const errors = []\n\n    for (const fileId of fileIds) {\n      try {\n        // Get file record (including already deleted files to check if they exist at all)\n        const stmt = c.env.DB.prepare('SELECT * FROM media WHERE id = ?')\n        const fileRecord = await stmt.bind(fileId).first() as any\n\n        if (!fileRecord) {\n          errors.push({ fileId, error: 'File not found' })\n          continue\n        }\n\n        // Skip if already deleted (treat as success)\n        if (fileRecord.deleted_at !== null) {\n          console.log(`File ${fileId} already deleted, skipping`)\n          results.push({\n            fileId,\n            filename: fileRecord.original_name,\n            success: true,\n            alreadyDeleted: true\n          })\n          continue\n        }\n\n        // Check permissions (only allow deletion by uploader or admin)\n        if (fileRecord.uploaded_by !== user.userId && user.role !== 'admin') {\n          errors.push({ fileId, error: 'Permission denied' })\n          continue\n        }\n\n        // Delete from R2\n        try {\n          await c.env.MEDIA_BUCKET.delete(fileRecord.r2_key)\n        } catch (error) {\n          console.warn(`Failed to delete from R2 for file ${fileId}:`, error)\n          // Continue with database deletion even if R2 deletion fails\n        }\n\n        // Soft delete in database\n        const deleteStmt = c.env.DB.prepare('UPDATE media SET deleted_at = ? WHERE id = ?')\n        await deleteStmt.bind(Math.floor(Date.now() / 1000), fileId).run()\n\n        results.push({\n          fileId,\n          filename: fileRecord.original_name,\n          success: true\n        })\n      } catch (error) {\n        errors.push({\n          fileId,\n          error: 'Delete failed',\n          details: error instanceof Error ? error.message : 'Unknown error'\n        })\n      }\n    }\n\n    // Emit media delete event if any deletes succeeded\n    if (results.length > 0) {\n      await emitEvent('media.delete', { count: results.length, ids: fileIds })\n    }\n\n    return c.json({\n      success: results.length > 0,\n      deleted: results,\n      errors: errors,\n      summary: {\n        total: fileIds.length,\n        successful: results.length,\n        failed: errors.length\n      }\n    })\n  } catch (error) {\n    console.error('Bulk delete error:', error)\n    return c.json({ error: 'Bulk delete failed' }, 500)\n  }\n})\n\n// Create folder\napiMediaRoutes.post('/create-folder', async (c) => {\n  try {\n    const user = c.get('user')\n    const body = await c.req.json()\n    const folderName = body.folderName as string\n\n    if (!folderName || typeof folderName !== 'string') {\n      return c.json({ success: false, error: 'No folder name provided' }, 400)\n    }\n\n    // Validate folder name format\n    const folderPattern = /^[a-z0-9-_]+$/\n    if (!folderPattern.test(folderName)) {\n      return c.json({\n        success: false,\n        error: 'Folder name can only contain lowercase letters, numbers, hyphens, and underscores'\n      }, 400)\n    }\n\n    // Check if folder already exists in the database\n    const checkStmt = c.env.DB.prepare('SELECT COUNT(*) as count FROM media WHERE folder = ? AND deleted_at IS NULL')\n    const existingFolder = await checkStmt.bind(folderName).first() as any\n\n    // Note: We allow folder creation even if it exists, as R2 folders are virtual\n    // The folder will be created when files are uploaded to it\n\n    return c.json({\n      success: true,\n      message: `Folder \"${folderName}\" created successfully`,\n      folder: folderName\n    })\n  } catch (error) {\n    console.error('Create folder error:', error)\n    return c.json({ success: false, error: 'Failed to create folder' }, 500)\n  }\n})\n\n// Bulk move files to folder\napiMediaRoutes.post('/bulk-move', async (c) => {\n  try {\n    const user = c.get('user')\n    const body = await c.req.json()\n    const fileIds = body.fileIds as string[]\n    const targetFolder = body.folder as string\n\n    if (!fileIds || !Array.isArray(fileIds) || fileIds.length === 0) {\n      return c.json({ error: 'No file IDs provided' }, 400)\n    }\n\n    if (!targetFolder || typeof targetFolder !== 'string') {\n      return c.json({ error: 'No target folder provided' }, 400)\n    }\n\n    // Limit bulk operations to prevent abuse\n    if (fileIds.length > 50) {\n      return c.json({ error: 'Too many files selected. Maximum 50 files per operation.' }, 400)\n    }\n\n    const results = []\n    const errors = []\n\n    for (const fileId of fileIds) {\n      try {\n        // Get file record\n        const stmt = c.env.DB.prepare('SELECT * FROM media WHERE id = ? AND deleted_at IS NULL')\n        const fileRecord = await stmt.bind(fileId).first() as any\n\n        if (!fileRecord) {\n          errors.push({ fileId, error: 'File not found' })\n          continue\n        }\n\n        // Check permissions (only allow move by uploader or admin)\n        if (fileRecord.uploaded_by !== user.userId && user.role !== 'admin') {\n          errors.push({ fileId, error: 'Permission denied' })\n          continue\n        }\n\n        // Skip if already in target folder\n        if (fileRecord.folder === targetFolder) {\n          results.push({\n            fileId,\n            filename: fileRecord.original_name,\n            success: true,\n            skipped: true\n          })\n          continue\n        }\n\n        // Generate new R2 key with new folder\n        const oldR2Key = fileRecord.r2_key\n        const filename = oldR2Key.split('/').pop() || fileRecord.filename\n        const newR2Key = `${targetFolder}/${filename}`\n\n        // Copy file to new location in R2\n        try {\n          const object = await c.env.MEDIA_BUCKET.get(oldR2Key)\n          if (!object) {\n            errors.push({ fileId, error: 'File not found in storage' })\n            continue\n          }\n\n          await c.env.MEDIA_BUCKET.put(newR2Key, object.body, {\n            httpMetadata: object.httpMetadata,\n            customMetadata: {\n              ...object.customMetadata,\n              movedBy: user.userId,\n              movedAt: new Date().toISOString()\n            }\n          })\n\n          // Delete old file from R2\n          await c.env.MEDIA_BUCKET.delete(oldR2Key)\n        } catch (error) {\n          console.warn(`Failed to move file in R2 for file ${fileId}:`, error)\n          errors.push({ fileId, error: 'Failed to move file in storage' })\n          continue\n        }\n\n        // Update database with new folder and R2 key\n        const bucketName = c.env.BUCKET_NAME || 'sonicjs-media-dev'\n        const newPublicUrl = `https://pub-${bucketName}.r2.dev/${newR2Key}`\n\n        const updateStmt = c.env.DB.prepare(`\n          UPDATE media\n          SET folder = ?, r2_key = ?, public_url = ?, updated_at = ?\n          WHERE id = ?\n        `)\n        await updateStmt.bind(\n          targetFolder,\n          newR2Key,\n          newPublicUrl,\n          Math.floor(Date.now() / 1000),\n          fileId\n        ).run()\n\n        results.push({\n          fileId,\n          filename: fileRecord.original_name,\n          success: true,\n          skipped: false\n        })\n      } catch (error) {\n        errors.push({\n          fileId,\n          error: 'Move failed',\n          details: error instanceof Error ? error.message : 'Unknown error'\n        })\n      }\n    }\n\n    // Emit media move event if any moves succeeded\n    if (results.length > 0) {\n      await emitEvent('media.move', { count: results.length, targetFolder, ids: fileIds })\n    }\n\n    return c.json({\n      success: results.length > 0,\n      moved: results,\n      errors: errors,\n      summary: {\n        total: fileIds.length,\n        successful: results.length,\n        failed: errors.length\n      }\n    })\n  } catch (error) {\n    console.error('Bulk move error:', error)\n    return c.json({ error: 'Bulk move failed' }, 500)\n  }\n})\n\n// Delete file\napiMediaRoutes.delete('/:id', async (c) => {\n  try {\n    const user = c.get('user')\n    const fileId = c.req.param('id')\n    \n    // Get file record\n    const stmt = c.env.DB.prepare('SELECT * FROM media WHERE id = ? AND deleted_at IS NULL')\n    const fileRecord = await stmt.bind(fileId).first() as any\n    \n    if (!fileRecord) {\n      return c.json({ error: 'File not found' }, 404)\n    }\n\n    // Check permissions (only allow deletion by uploader or admin)\n    if (fileRecord.uploaded_by !== user.userId && user.role !== 'admin') {\n      return c.json({ error: 'Permission denied' }, 403)\n    }\n\n    // Delete from R2\n    try {\n      await c.env.MEDIA_BUCKET.delete(fileRecord.r2_key)\n    } catch (error) {\n      console.warn('Failed to delete from R2:', error)\n      // Continue with database deletion even if R2 deletion fails\n    }\n\n    // Soft delete in database\n    const deleteStmt = c.env.DB.prepare('UPDATE media SET deleted_at = ? WHERE id = ?')\n    await deleteStmt.bind(Math.floor(Date.now() / 1000), fileId).run()\n\n    // Emit media delete event\n    await emitEvent('media.delete', { id: fileId })\n\n    return c.json({ success: true, message: 'File deleted successfully' })\n  } catch (error) {\n    console.error('Delete error:', error)\n    return c.json({ error: 'Delete failed' }, 500)\n  }\n})\n\n// Update file metadata\napiMediaRoutes.patch('/:id', async (c) => {\n  try {\n    const user = c.get('user')\n    const fileId = c.req.param('id')\n    const body = await c.req.json()\n    \n    // Get file record\n    const stmt = c.env.DB.prepare('SELECT * FROM media WHERE id = ? AND deleted_at IS NULL')\n    const fileRecord = await stmt.bind(fileId).first() as any\n    \n    if (!fileRecord) {\n      return c.json({ error: 'File not found' }, 404)\n    }\n\n    // Check permissions (only allow updates by uploader or admin)\n    if (fileRecord.uploaded_by !== user.userId && user.role !== 'admin') {\n      return c.json({ error: 'Permission denied' }, 403)\n    }\n\n    // Update allowed fields\n    const allowedFields = ['alt', 'caption', 'tags', 'folder']\n    const updates = []\n    const values = []\n    \n    for (const [key, value] of Object.entries(body)) {\n      if (allowedFields.includes(key)) {\n        updates.push(`${key} = ?`)\n        values.push(key === 'tags' ? JSON.stringify(value) : value)\n      }\n    }\n\n    if (updates.length === 0) {\n      return c.json({ error: 'No valid fields to update' }, 400)\n    }\n\n    updates.push('updated_at = ?')\n    values.push(Math.floor(Date.now() / 1000))\n    values.push(fileId)\n\n    const updateStmt = c.env.DB.prepare(`\n      UPDATE media SET ${updates.join(', ')} WHERE id = ?\n    `)\n    await updateStmt.bind(...values).run()\n\n    // Emit media update event\n    await emitEvent('media.update', { id: fileId })\n\n    return c.json({ success: true, message: 'File updated successfully' })\n  } catch (error) {\n    console.error('Update error:', error)\n    return c.json({ error: 'Update failed' }, 500)\n  }\n})\n\n// Helper function to extract image dimensions\nasync function getImageDimensions(arrayBuffer: ArrayBuffer): Promise<{ width: number; height: number }> {\n  // This is a simplified implementation\n  // In a real-world scenario, you'd use a proper image processing library\n  const uint8Array = new Uint8Array(arrayBuffer)\n  \n  // Check for JPEG\n  if (uint8Array[0] === 0xFF && uint8Array[1] === 0xD8) {\n    return getJPEGDimensions(uint8Array)\n  }\n  \n  // Check for PNG\n  if (uint8Array[0] === 0x89 && uint8Array[1] === 0x50 && uint8Array[2] === 0x4E && uint8Array[3] === 0x47) {\n    return getPNGDimensions(uint8Array)\n  }\n  \n  // Default fallback\n  return { width: 0, height: 0 }\n}\n\nfunction getJPEGDimensions(uint8Array: Uint8Array): { width: number; height: number } {\n  let i = 2\n  while (i < uint8Array.length) {\n    if (i + 8 >= uint8Array.length) break\n    if (uint8Array[i] === 0xFF && uint8Array[i + 1] === 0xC0) {\n      if (i + 8 < uint8Array.length) {\n        return {\n          height: (uint8Array[i + 5]! << 8) | uint8Array[i + 6]!,\n          width: (uint8Array[i + 7]! << 8) | uint8Array[i + 8]!\n        }\n      }\n    }\n    if (i + 3 < uint8Array.length) {\n      i += 2 + ((uint8Array[i + 2]! << 8) | uint8Array[i + 3]!)\n    } else {\n      break\n    }\n  }\n  return { width: 0, height: 0 }\n}\n\nfunction getPNGDimensions(uint8Array: Uint8Array): { width: number; height: number } {\n  if (uint8Array.length < 24) {\n    return { width: 0, height: 0 }\n  }\n  return {\n    width: (uint8Array[16]! << 24) | (uint8Array[17]! << 16) | (uint8Array[18]! << 8) | uint8Array[19]!,\n    height: (uint8Array[20]! << 24) | (uint8Array[21]! << 16) | (uint8Array[22]! << 8) | uint8Array[23]!\n  }\n}\n\nexport default apiMediaRoutes","/**\n * API System Routes\n *\n * Provides system health, status, and metadata endpoints\n * These are lightweight routes without heavy dependencies\n */\n\nimport { Hono } from 'hono'\nimport type { Bindings, Variables } from '../app'\n\nexport const apiSystemRoutes = new Hono<{ Bindings: Bindings; Variables: Variables }>()\n\n/**\n * System health check\n * GET /api/system/health\n */\napiSystemRoutes.get('/health', async (c) => {\n  try {\n    const startTime = Date.now()\n\n    // Check database connectivity\n    let dbStatus = 'unknown'\n    let dbLatency = 0\n\n    try {\n      const dbStart = Date.now()\n      await c.env.DB.prepare('SELECT 1').first()\n      dbLatency = Date.now() - dbStart\n      dbStatus = 'healthy'\n    } catch (error) {\n      console.error('Database health check failed:', error)\n      dbStatus = 'unhealthy'\n    }\n\n    // Check KV connectivity (if available)\n    let kvStatus = 'not_configured'\n    let kvLatency = 0\n\n    if (c.env.CACHE_KV) {\n      try {\n        const kvStart = Date.now()\n        await c.env.CACHE_KV.get('__health_check__')\n        kvLatency = Date.now() - kvStart\n        kvStatus = 'healthy'\n      } catch (error) {\n        console.error('KV health check failed:', error)\n        kvStatus = 'unhealthy'\n      }\n    }\n\n    // Check R2 connectivity (if available)\n    let r2Status = 'not_configured'\n\n    if (c.env.MEDIA_BUCKET) {\n      try {\n        await c.env.MEDIA_BUCKET.head('__health_check__')\n        r2Status = 'healthy'\n      } catch (error) {\n        // R2 head on non-existent key returns null, not an error\n        // This is expected, so we consider it healthy\n        r2Status = 'healthy'\n      }\n    }\n\n    const totalLatency = Date.now() - startTime\n    const overall = dbStatus === 'healthy' ? 'healthy' : 'degraded'\n\n    return c.json({\n      status: overall,\n      timestamp: new Date().toISOString(),\n      uptime: totalLatency,\n      checks: {\n        database: {\n          status: dbStatus,\n          latency: dbLatency\n        },\n        cache: {\n          status: kvStatus,\n          latency: kvLatency\n        },\n        storage: {\n          status: r2Status\n        }\n      },\n      environment: c.env.ENVIRONMENT || 'production'\n    })\n  } catch (error) {\n    console.error('Health check failed:', error)\n    return c.json({\n      status: 'unhealthy',\n      timestamp: new Date().toISOString(),\n      error: 'Health check failed'\n    }, 503)\n  }\n})\n\n/**\n * System information\n * GET /api/system/info\n */\napiSystemRoutes.get('/info', (c) => {\n  const appVersion = c.get('appVersion') || '1.0.0'\n\n  return c.json({\n    name: 'SonicJS',\n    version: appVersion,\n    description: 'Modern headless CMS built on Cloudflare Workers',\n    endpoints: {\n      api: '/api',\n      auth: '/auth',\n      health: '/api/system/health',\n      docs: '/docs'\n    },\n    features: {\n      content: true,\n      media: true,\n      auth: true,\n      collections: true,\n      caching: !!c.env.CACHE_KV,\n      storage: !!c.env.MEDIA_BUCKET\n    },\n    timestamp: new Date().toISOString()\n  })\n})\n\n/**\n * System stats\n * GET /api/system/stats\n */\napiSystemRoutes.get('/stats', async (c) => {\n  try {\n    const db = c.env.DB\n\n    // Get content statistics\n    const contentStats = await db.prepare(`\n      SELECT COUNT(*) as total_content\n      FROM content\n      WHERE deleted_at IS NULL\n    `).first() as any\n\n    // Get media statistics\n    const mediaStats = await db.prepare(`\n      SELECT\n        COUNT(*) as total_files,\n        SUM(size) as total_size\n      FROM media\n      WHERE deleted_at IS NULL\n    `).first() as any\n\n    // Get user statistics\n    const userStats = await db.prepare(`\n      SELECT COUNT(*) as total_users\n      FROM users\n    `).first() as any\n\n    return c.json({\n      content: {\n        total: contentStats?.total_content || 0\n      },\n      media: {\n        total_files: mediaStats?.total_files || 0,\n        total_size_bytes: mediaStats?.total_size || 0,\n        total_size_mb: Math.round((mediaStats?.total_size || 0) / 1024 / 1024 * 100) / 100\n      },\n      users: {\n        total: userStats?.total_users || 0\n      },\n      timestamp: new Date().toISOString()\n    })\n  } catch (error) {\n    console.error('Stats query failed:', error)\n    return c.json({ error: 'Failed to fetch system statistics' }, 500)\n  }\n})\n\n/**\n * Database ping\n * GET /api/system/ping\n */\napiSystemRoutes.get('/ping', async (c) => {\n  try {\n    const start = Date.now()\n    await c.env.DB.prepare('SELECT 1').first()\n    const latency = Date.now() - start\n\n    return c.json({\n      pong: true,\n      latency,\n      timestamp: new Date().toISOString()\n    })\n  } catch (error) {\n    console.error('Ping failed:', error)\n    return c.json({\n      pong: false,\n      error: 'Database connection failed'\n    }, 503)\n  }\n})\n\n/**\n * Environment check\n * GET /api/system/env\n */\napiSystemRoutes.get('/env', (c) => {\n  return c.json({\n    environment: c.env.ENVIRONMENT || 'production',\n    features: {\n      database: !!c.env.DB,\n      cache: !!c.env.CACHE_KV,\n      media_bucket: !!c.env.MEDIA_BUCKET,\n      email_queue: !!c.env.EMAIL_QUEUE,\n      sendgrid: !!c.env.SENDGRID_API_KEY,\n      cloudflare_images: !!(c.env.IMAGES_ACCOUNT_ID && c.env.IMAGES_API_TOKEN)\n    },\n    timestamp: new Date().toISOString()\n  })\n})\n\nexport default apiSystemRoutes\n","// src/index.ts\nimport { validator } from \"hono/validator\";\nvar zValidator = (target, schema, hook, options) => (\n  // @ts-expect-error not typed well\n  validator(target, async (value, c) => {\n    let validatorValue = value;\n    if (target === \"header\" && \"_def\" in schema || target === \"header\" && \"_zod\" in schema) {\n      const schemaKeys = Object.keys(schema.shape);\n      const caseInsensitiveKeymap = Object.fromEntries(\n        schemaKeys.map((key) => [key.toLowerCase(), key])\n      );\n      validatorValue = Object.fromEntries(\n        Object.entries(value).map(([key, value2]) => [caseInsensitiveKeymap[key] || key, value2])\n      );\n    }\n    const result = options && options.validationFunction ? await options.validationFunction(schema, validatorValue) : (\n      // @ts-expect-error z4.$ZodType has safeParseAsync\n      await schema.safeParseAsync(validatorValue)\n    );\n    if (hook) {\n      const hookResult = await hook({ data: validatorValue, ...result, target }, c);\n      if (hookResult) {\n        if (hookResult instanceof Response) {\n          return hookResult;\n        }\n        if (\"response\" in hookResult) {\n          return hookResult.response;\n        }\n      }\n    }\n    if (!result.success) {\n      return c.json(result, 400);\n    }\n    return result.data;\n  })\n);\nexport {\n  zValidator\n};\n","/**\n * Admin API Routes\n *\n * Provides JSON API endpoints for admin operations\n * These routes complement the admin UI and can be used programmatically\n */\n\nimport { Hono } from 'hono'\nimport { z } from 'zod'\nimport { zValidator } from '@hono/zod-validator'\nimport { requireAuth, requireRole } from '../middleware'\nimport type { Bindings, Variables } from '../app'\n\nexport const adminApiRoutes = new Hono<{ Bindings: Bindings; Variables: Variables }>()\n\n// Apply auth middleware to all admin routes\nadminApiRoutes.use('*', requireAuth())\nadminApiRoutes.use('*', requireRole(['admin', 'editor']))\n\n/**\n * Get dashboard statistics\n * GET /admin/api/stats\n */\nadminApiRoutes.get('/stats', async (c) => {\n  try {\n    const db = c.env.DB\n\n    // Get collections count\n    let collectionsCount = 0\n    try {\n      const collectionsStmt = db.prepare('SELECT COUNT(*) as count FROM collections WHERE is_active = 1')\n      const collectionsResult = await collectionsStmt.first()\n      collectionsCount = (collectionsResult as any)?.count || 0\n    } catch (error) {\n      console.error('Error fetching collections count:', error)\n    }\n\n    // Get content count\n    let contentCount = 0\n    try {\n      const contentStmt = db.prepare('SELECT COUNT(*) as count FROM content WHERE deleted_at IS NULL')\n      const contentResult = await contentStmt.first()\n      contentCount = (contentResult as any)?.count || 0\n    } catch (error) {\n      console.error('Error fetching content count:', error)\n    }\n\n    // Get media count and total size\n    let mediaCount = 0\n    let mediaSize = 0\n    try {\n      const mediaStmt = db.prepare('SELECT COUNT(*) as count, COALESCE(SUM(size), 0) as total_size FROM media WHERE deleted_at IS NULL')\n      const mediaResult = await mediaStmt.first()\n      mediaCount = (mediaResult as any)?.count || 0\n      mediaSize = (mediaResult as any)?.total_size || 0\n    } catch (error) {\n      console.error('Error fetching media count:', error)\n    }\n\n    // Get users count\n    let usersCount = 0\n    try {\n      const usersStmt = db.prepare('SELECT COUNT(*) as count FROM users WHERE is_active = 1')\n      const usersResult = await usersStmt.first()\n      usersCount = (usersResult as any)?.count || 0\n    } catch (error) {\n      console.error('Error fetching users count:', error)\n    }\n\n    return c.json({\n      collections: collectionsCount,\n      contentItems: contentCount,\n      mediaFiles: mediaCount,\n      mediaSize: mediaSize,\n      users: usersCount,\n      timestamp: new Date().toISOString()\n    })\n  } catch (error) {\n    console.error('Error fetching stats:', error)\n    return c.json({ error: 'Failed to fetch statistics' }, 500)\n  }\n})\n\n/**\n * Get storage usage\n * GET /admin/api/storage\n */\nadminApiRoutes.get('/storage', async (c) => {\n  try {\n    const db = c.env.DB\n\n    // Get database size from D1 metadata\n    let databaseSize = 0\n    try {\n      const result = await db.prepare('SELECT 1').run()\n      databaseSize = (result as any)?.meta?.size_after || 0\n    } catch (error) {\n      console.error('Error fetching database size:', error)\n    }\n\n    // Get media total size\n    let mediaSize = 0\n    try {\n      const mediaStmt = db.prepare('SELECT COALESCE(SUM(size), 0) as total_size FROM media WHERE deleted_at IS NULL')\n      const mediaResult = await mediaStmt.first()\n      mediaSize = (mediaResult as any)?.total_size || 0\n    } catch (error) {\n      console.error('Error fetching media size:', error)\n    }\n\n    return c.json({\n      databaseSize,\n      mediaSize,\n      totalSize: databaseSize + mediaSize,\n      timestamp: new Date().toISOString()\n    })\n  } catch (error) {\n    console.error('Error fetching storage usage:', error)\n    return c.json({ error: 'Failed to fetch storage usage' }, 500)\n  }\n})\n\n/**\n * Get recent activity\n * GET /admin/api/activity\n */\nadminApiRoutes.get('/activity', async (c) => {\n  try {\n    const db = c.env.DB\n    const limit = parseInt(c.req.query('limit') || '10')\n\n    // Get recent activities from activity_logs table\n    const activityStmt = db.prepare(`\n      SELECT\n        a.id,\n        a.action,\n        a.resource_type,\n        a.resource_id,\n        a.details,\n        a.created_at,\n        u.email,\n        u.first_name,\n        u.last_name\n      FROM activity_logs a\n      LEFT JOIN users u ON a.user_id = u.id\n      WHERE a.resource_type IN ('content', 'collections', 'users', 'media')\n      ORDER BY a.created_at DESC\n      LIMIT ?\n    `)\n\n    const { results } = await activityStmt.bind(limit).all()\n\n    const recentActivity = (results || []).map((row: any) => {\n      const userName = row.first_name && row.last_name\n        ? `${row.first_name} ${row.last_name}`\n        : row.email || 'System'\n\n      let details: any = {}\n      try {\n        details = row.details ? JSON.parse(row.details) : {}\n      } catch (e) {\n        console.error('Error parsing activity details:', e)\n      }\n\n      return {\n        id: row.id,\n        type: row.resource_type,\n        action: row.action,\n        resource_id: row.resource_id,\n        details,\n        timestamp: new Date(Number(row.created_at)).toISOString(),\n        user: userName\n      }\n    })\n\n    return c.json({\n      data: recentActivity,\n      count: recentActivity.length,\n      timestamp: new Date().toISOString()\n    })\n  } catch (error) {\n    console.error('Error fetching recent activity:', error)\n    return c.json({ error: 'Failed to fetch recent activity' }, 500)\n  }\n})\n\n/**\n * Collection management schema\n */\nconst createCollectionSchema = z.object({\n  name: z.string().min(1).max(255).regex(/^[a-z0-9_]+$/, 'Must contain only lowercase letters, numbers, and underscores'),\n  display_name: z.string().min(1).max(255),\n  description: z.string().optional()\n})\n\nconst updateCollectionSchema = z.object({\n  display_name: z.string().min(1).max(255).optional(),\n  description: z.string().optional(),\n  is_active: z.boolean().optional()\n})\n\n/**\n * Get all collections\n * GET /admin/api/collections\n */\nadminApiRoutes.get('/collections', async (c) => {\n  try {\n    const db = c.env.DB\n    const search = c.req.query('search') || ''\n    const includeInactive = c.req.query('includeInactive') === 'true'\n\n    let stmt\n    let results\n\n    if (search) {\n      stmt = db.prepare(`\n        SELECT id, name, display_name, description, created_at, updated_at, is_active, managed\n        FROM collections\n        WHERE ${includeInactive ? '1=1' : 'is_active = 1'}\n        AND (name LIKE ? OR display_name LIKE ? OR description LIKE ?)\n        ORDER BY created_at DESC\n      `)\n      const searchParam = `%${search}%`\n      const queryResults = await stmt.bind(searchParam, searchParam, searchParam).all()\n      results = queryResults.results\n    } else {\n      stmt = db.prepare(`\n        SELECT id, name, display_name, description, created_at, updated_at, is_active, managed\n        FROM collections\n        ${includeInactive ? '' : 'WHERE is_active = 1'}\n        ORDER BY created_at DESC\n      `)\n      const queryResults = await stmt.all()\n      results = queryResults.results\n    }\n\n    // Get field counts\n    const fieldCountStmt = db.prepare('SELECT collection_id, COUNT(*) as count FROM content_fields GROUP BY collection_id')\n    const { results: fieldCountResults } = await fieldCountStmt.all()\n    const fieldCounts = new Map((fieldCountResults || []).map((row: any) => [String(row.collection_id), Number(row.count)]))\n\n    const collections = (results || []).map((row: any) => ({\n      id: row.id,\n      name: row.name,\n      display_name: row.display_name,\n      description: row.description,\n      created_at: Number(row.created_at),\n      updated_at: Number(row.updated_at),\n      is_active: row.is_active === 1,\n      managed: row.managed === 1,\n      field_count: fieldCounts.get(String(row.id)) || 0\n    }))\n\n    return c.json({\n      data: collections,\n      count: collections.length,\n      timestamp: new Date().toISOString()\n    })\n  } catch (error) {\n    console.error('Error fetching collections:', error)\n    return c.json({ error: 'Failed to fetch collections' }, 500)\n  }\n})\n\n/**\n * Get single collection\n * GET /admin/api/collections/:id\n */\nadminApiRoutes.get('/collections/:id', async (c) => {\n  try {\n    const id = c.req.param('id')\n    const db = c.env.DB\n\n    const stmt = db.prepare('SELECT * FROM collections WHERE id = ?')\n    const collection = await stmt.bind(id).first() as any\n\n    if (!collection) {\n      return c.json({ error: 'Collection not found' }, 404)\n    }\n\n    // Get collection fields\n    const fieldsStmt = db.prepare(`\n      SELECT * FROM content_fields\n      WHERE collection_id = ?\n      ORDER BY field_order ASC\n    `)\n    const { results: fieldsResults } = await fieldsStmt.bind(id).all()\n\n    const fields = (fieldsResults || []).map((row: any) => ({\n      id: row.id,\n      field_name: row.field_name,\n      field_type: row.field_type,\n      field_label: row.field_label,\n      field_options: row.field_options ? JSON.parse(row.field_options) : {},\n      field_order: row.field_order,\n      is_required: row.is_required === 1,\n      is_searchable: row.is_searchable === 1,\n      created_at: Number(row.created_at),\n      updated_at: Number(row.updated_at)\n    }))\n\n    return c.json({\n      data: {\n        ...collection,\n        is_active: collection.is_active === 1,\n        managed: collection.managed === 1,\n        schema: collection.schema ? JSON.parse(collection.schema) : null,\n        created_at: Number(collection.created_at),\n        updated_at: Number(collection.updated_at),\n        fields\n      }\n    })\n  } catch (error) {\n    console.error('Error fetching collection:', error)\n    return c.json({ error: 'Failed to fetch collection' }, 500)\n  }\n})\n\n/**\n * Create collection\n * POST /admin/api/collections\n */\nadminApiRoutes.post('/collections',\n  zValidator('json', createCollectionSchema),\n  async (c) => {\n    try {\n      const validatedData = c.req.valid('json')\n      const db = c.env.DB\n      const user = c.get('user')\n\n      // Check if collection already exists\n      const existingStmt = db.prepare('SELECT id FROM collections WHERE name = ?')\n      const existing = await existingStmt.bind(validatedData.name).first()\n\n      if (existing) {\n        return c.json({ error: 'A collection with this name already exists' }, 400)\n      }\n\n      // Create basic schema\n      const basicSchema = {\n        type: \"object\",\n        properties: {\n          title: {\n            type: \"string\",\n            title: \"Title\",\n            required: true\n          },\n          content: {\n            type: \"string\",\n            title: \"Content\",\n            format: \"richtext\"\n          },\n          status: {\n            type: \"string\",\n            title: \"Status\",\n            enum: [\"draft\", \"published\", \"archived\"],\n            default: \"draft\"\n          }\n        },\n        required: [\"title\"]\n      }\n\n      const collectionId = crypto.randomUUID()\n      const now = Date.now()\n\n      const insertStmt = db.prepare(`\n        INSERT INTO collections (id, name, display_name, description, schema, is_active, created_at, updated_at)\n        VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n      `)\n\n      await insertStmt.bind(\n        collectionId,\n        validatedData.name,\n        validatedData.display_name,\n        validatedData.description || null,\n        JSON.stringify(basicSchema),\n        1, // is_active\n        now,\n        now\n      ).run()\n\n      // Clear cache\n      try {\n        await c.env.CACHE_KV.delete('cache:collections:all')\n        await c.env.CACHE_KV.delete(`cache:collection:${validatedData.name}`)\n      } catch (e) {\n        console.error('Error clearing cache:', e)\n      }\n\n      return c.json({\n        data: {\n          id: collectionId,\n          name: validatedData.name,\n          display_name: validatedData.display_name,\n          description: validatedData.description,\n          created_at: now\n        }\n      }, 201)\n    } catch (error) {\n      console.error('Error creating collection:', error)\n      return c.json({ error: 'Failed to create collection' }, 500)\n    }\n  }\n)\n\n/**\n * Update collection\n * PATCH /admin/api/collections/:id\n */\nadminApiRoutes.patch('/collections/:id',\n  zValidator('json', updateCollectionSchema),\n  async (c) => {\n    try {\n      const id = c.req.param('id')\n      const validatedData = c.req.valid('json')\n      const db = c.env.DB\n\n      // Check if collection exists\n      const checkStmt = db.prepare('SELECT * FROM collections WHERE id = ?')\n      const existing = await checkStmt.bind(id).first() as any\n\n      if (!existing) {\n        return c.json({ error: 'Collection not found' }, 404)\n      }\n\n      // Build update query\n      const updateFields: string[] = []\n      const updateParams: any[] = []\n\n      if (validatedData.display_name !== undefined) {\n        updateFields.push('display_name = ?')\n        updateParams.push(validatedData.display_name)\n      }\n\n      if (validatedData.description !== undefined) {\n        updateFields.push('description = ?')\n        updateParams.push(validatedData.description)\n      }\n\n      if (validatedData.is_active !== undefined) {\n        updateFields.push('is_active = ?')\n        updateParams.push(validatedData.is_active ? 1 : 0)\n      }\n\n      if (updateFields.length === 0) {\n        return c.json({ error: 'No fields to update' }, 400)\n      }\n\n      updateFields.push('updated_at = ?')\n      updateParams.push(Date.now())\n      updateParams.push(id)\n\n      const updateStmt = db.prepare(`\n        UPDATE collections\n        SET ${updateFields.join(', ')}\n        WHERE id = ?\n      `)\n\n      await updateStmt.bind(...updateParams).run()\n\n      // Clear cache\n      try {\n        await c.env.CACHE_KV.delete('cache:collections:all')\n        await c.env.CACHE_KV.delete(`cache:collection:${existing.name}`)\n      } catch (e) {\n        console.error('Error clearing cache:', e)\n      }\n\n      return c.json({ message: 'Collection updated successfully' })\n    } catch (error) {\n      console.error('Error updating collection:', error)\n      return c.json({ error: 'Failed to update collection' }, 500)\n    }\n  }\n)\n\n/**\n * Delete collection\n * DELETE /admin/api/collections/:id\n */\nadminApiRoutes.delete('/collections/:id', async (c) => {\n  try {\n    const id = c.req.param('id')\n    const db = c.env.DB\n\n    // Check if collection has content\n    const contentStmt = db.prepare('SELECT COUNT(*) as count FROM content WHERE collection_id = ?')\n    const contentResult = await contentStmt.bind(id).first() as any\n\n    if (contentResult && contentResult.count > 0) {\n      return c.json({\n        error: `Cannot delete collection: it contains ${contentResult.count} content item(s). Delete all content first.`\n      }, 400)\n    }\n\n    // Get collection name for cache clearing\n    const collectionStmt = db.prepare('SELECT name FROM collections WHERE id = ?')\n    const collection = await collectionStmt.bind(id).first() as any\n\n    // Delete collection fields first\n    const deleteFieldsStmt = db.prepare('DELETE FROM content_fields WHERE collection_id = ?')\n    await deleteFieldsStmt.bind(id).run()\n\n    // Delete collection\n    const deleteStmt = db.prepare('DELETE FROM collections WHERE id = ?')\n    await deleteStmt.bind(id).run()\n\n    // Clear cache\n    try {\n      await c.env.CACHE_KV.delete('cache:collections:all')\n      if (collection) {\n        await c.env.CACHE_KV.delete(`cache:collection:${collection.name}`)\n      }\n    } catch (e) {\n      console.error('Error clearing cache:', e)\n    }\n\n    return c.json({ message: 'Collection deleted successfully' })\n  } catch (error) {\n    console.error('Error deleting collection:', error)\n    return c.json({ error: 'Failed to delete collection' }, 500)\n  }\n})\n\nexport default adminApiRoutes\n","export type AlertType = 'success' | 'error' | 'warning' | 'info'\n\nexport interface AlertData {\n  type: AlertType\n  title?: string\n  message: string\n  dismissible?: boolean\n  className?: string\n  icon?: boolean\n}\n\nexport function renderAlert(data: AlertData): string {\n  const typeClasses = {\n    success: 'bg-green-50 dark:bg-green-500/10 border border-green-600/20 dark:border-green-500/20',\n    error: 'bg-error/10 border border-red-600/20 dark:border-red-500/20',\n    warning: 'bg-amber-50 dark:bg-amber-500/10 border border-amber-600/20 dark:border-amber-500/20',\n    info: 'bg-blue-50 dark:bg-blue-500/10 border border-blue-600/20 dark:border-blue-500/20'\n  }\n\n  const iconClasses = {\n    success: 'text-green-600 dark:text-green-400',\n    error: 'text-red-600 dark:text-red-400',\n    warning: 'text-amber-600 dark:text-amber-400',\n    info: 'text-blue-600 dark:text-blue-400'\n  }\n\n  const textClasses = {\n    success: 'text-green-900 dark:text-green-300',\n    error: 'text-red-900 dark:text-red-300',\n    warning: 'text-amber-900 dark:text-amber-300',\n    info: 'text-blue-900 dark:text-blue-300'\n  }\n\n  const messageTextClasses = {\n    success: 'text-green-700 dark:text-green-400',\n    error: 'text-red-700 dark:text-red-400',\n    warning: 'text-amber-700 dark:text-amber-400',\n    info: 'text-blue-700 dark:text-blue-400'\n  }\n\n  const icons = {\n    success: `<path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zm3.707-9.293a1 1 0 00-1.414-1.414L9 10.586 7.707 9.293a1 1 0 00-1.414 1.414l2 2a1 1 0 001.414 0l4-4z\" clip-rule=\"evenodd\" />`,\n    error: `<path fill-rule=\"evenodd\" d=\"M10 18a8 8 0 100-16 8 8 0 000 16zM8.707 7.293a1 1 0 00-1.414 1.414L8.586 10l-1.293 1.293a1 1 0 101.414 1.414L10 11.414l1.293 1.293a1 1 0 001.414-1.414L11.414 10l1.293-1.293a1 1 0 00-1.414-1.414L10 8.586 8.707 7.293z\" clip-rule=\"evenodd\" />`,\n    warning: `<path fill-rule=\"evenodd\" d=\"M8.257 3.099c.765-1.36 2.722-1.36 3.486 0l5.58 9.92c.75 1.334-.213 2.98-1.742 2.98H4.42c-1.53 0-2.493-1.646-1.743-2.98l5.58-9.92zM11 13a1 1 0 11-2 0 1 1 0 012 0zm-1-8a1 1 0 00-1 1v3a1 1 0 002 0V6a1 1 0 00-1-1z\" clip-rule=\"evenodd\" />`,\n    info: `<path fill-rule=\"evenodd\" d=\"M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-7-4a1 1 0 11-2 0 1 1 0 012 0zM9 9a1 1 0 000 2v3a1 1 0 001 1h1a1 1 0 100-2v-3a1 1 0 00-1-1H9z\" clip-rule=\"evenodd\" />`\n  }\n\n  return `\n    <div class=\"rounded-lg p-4 ${typeClasses[data.type]} ${data.className || ''}\" ${data.dismissible ? 'id=\"dismissible-alert\"' : ''}>\n      <div class=\"flex\">\n        ${data.icon !== false ? `\n          <div class=\"flex-shrink-0\">\n            <svg class=\"h-5 w-5 ${iconClasses[data.type]}\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              ${icons[data.type]}\n            </svg>\n          </div>\n        ` : ''}\n        <div class=\"${data.icon !== false ? 'ml-3' : ''}\">\n          ${data.title ? `\n            <h3 class=\"text-sm font-semibold ${textClasses[data.type]}\">\n              ${data.title}\n            </h3>\n          ` : ''}\n          <div class=\"${data.title ? 'mt-1 text-sm' : 'text-sm'} ${messageTextClasses[data.type]}\">\n            <p>${data.message}</p>\n          </div>\n        </div>\n        ${data.dismissible ? `\n          <div class=\"ml-auto pl-3\">\n            <div class=\"-mx-1.5 -my-1.5\">\n              <button\n                type=\"button\"\n                class=\"inline-flex rounded-md p-1.5 ${iconClasses[data.type]} hover:bg-opacity-20 focus:outline-none focus:ring-2 focus:ring-offset-2\"\n                onclick=\"document.getElementById('dismissible-alert').remove()\"\n              >\n                <span class=\"sr-only\">Dismiss</span>\n                <svg class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                  <path fill-rule=\"evenodd\" d=\"M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                </svg>\n              </button>\n            </div>\n          </div>\n        ` : ''}\n      </div>\n    </div>\n  `\n}\n\nexport function renderSuccessAlert(message: string, title?: string): string {\n  return renderAlert({ type: 'success', message, title })\n}\n\nexport function renderErrorAlert(message: string, title?: string): string {\n  return renderAlert({ type: 'error', message, title })\n}\n\nexport function renderWarningAlert(message: string, title?: string): string {\n  return renderAlert({ type: 'warning', message, title })\n}\n\nexport function renderInfoAlert(message: string, title?: string): string {\n  return renderAlert({ type: 'info', message, title })\n}\n","import { renderAlert } from '../components/alert.template'\n\nexport interface LoginPageData {\n  error?: string\n  message?: string\n  version?: string\n}\n\nexport function renderLoginPage(data: LoginPageData, demoLoginActive: boolean = false): string {\n  return `\n    <!DOCTYPE html>\n    <html lang=\"en\" class=\"h-full dark\">\n    <head>\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <title>Login - SonicJS AI</title>\n      <link rel=\"icon\" type=\"image/x-icon\" href=\"https://demo.sonicjs.com/images/favicon.ico\">\n      <script src=\"https://unpkg.com/htmx.org@2.0.3\"></script>\n      <script src=\"https://cdn.tailwindcss.com\"></script>\n      <script>\n        tailwind.config = {\n          darkMode: 'class',\n          theme: {\n            extend: {\n              colors: {\n                error: '#ef4444'\n              }\n            }\n          }\n        }\n      </script>\n      <style>\n        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');\n\n        body {\n          font-family: 'Inter', system-ui, -apple-system, sans-serif;\n        }\n      </style>\n    </head>\n    <body class=\"h-full bg-zinc-950\">\n      <div class=\"flex min-h-full flex-col justify-center py-12 sm:px-6 lg:px-8\">\n        <!-- Logo Section -->\n        <div class=\"sm:mx-auto sm:w-full sm:max-w-md text-center\">\n          <div class=\"mx-auto w-64 mb-8\">\n            <svg class=\"w-full h-auto\" viewBox=\"380 1300 2250 400\" aria-hidden=\"true\">\n              <path fill=\"#F1F2F2\" d=\"M476.851,1404.673h168.536c4.714,0,8.695-1.618,11.944-4.866c3.241-3.241,4.866-7.222,4.866-11.943    c0-2.357-0.443-4.569-1.327-6.636c-0.885-2.06-2.067-3.829-3.539-5.308c-1.479-1.472-3.249-2.654-5.308-3.538    c-2.067-0.885-4.279-1.327-6.635-1.327H476.851c-20.057,0-37.158,7.154-51.313,21.454c-14.155,14.308-21.233,31.483-21.233,51.534    c0,20.058,7.078,37.234,21.233,51.534c14.155,14.308,31.255,21.454,51.313,21.454h112.357c10.907,0,20.196,3.837,27.868,11.502    c7.666,7.672,11.502,16.885,11.502,27.646c0,10.769-3.836,19.982-11.502,27.647c-7.672,7.673-16.961,11.502-27.868,11.502H421.115    c-4.721,0-8.702,1.624-11.944,4.865c-3.248,3.249-4.866,7.23-4.866,11.944c0,3.248,0.733,6.123,2.212,8.626    c1.472,2.509,3.462,4.499,5.971,5.972c2.502,1.472,5.378,2.212,8.626,2.212h168.094c20.052,0,37.227-7.078,51.534-21.234    c14.3-14.155,21.454-31.331,21.454-51.534c0-20.196-7.154-37.379-21.454-51.534c-14.308-14.156-31.483-21.234-51.534-21.234    H476.851c-10.616,0-19.76-3.905-27.426-11.721c-7.672-7.811-11.501-17.101-11.501-27.87c0-10.761,3.829-19.975,11.501-27.647    C457.091,1408.508,466.235,1404.673,476.851,1404.673z\"></path>\n              <path fill=\"#F1F2F2\" d=\"M974.78,1398.211c-5.016,6.574-10.034,13.146-15.048,19.721c-1.828,2.398-3.657,4.796-5.487,7.194    c1.994,1.719,3.958,3.51,5.873,5.424c18.724,18.731,28.089,41.216,28.089,67.459c0,26.251-9.366,48.658-28.089,67.237    c-18.731,18.579-41.215,27.868-67.459,27.868c-9.848,0-19.156-1.308-27.923-3.923l-4.185,3.354    c-8.587,6.885-17.154,13.796-25.725,20.702c17.52,8.967,36.86,13.487,58.054,13.487c35.533,0,65.91-12.608,91.124-37.821    c25.214-25.215,37.821-55.584,37.821-91.125c0-35.534-12.607-65.911-37.821-91.126    C981.004,1403.663,977.926,1400.854,974.78,1398.211z\"></path>\n              <path fill=\"#F1F2F2\" d=\"M1364.644,1439.619c-4.72,0-8.702,1.624-11.943,4.865c-3.249,3.249-4.866,7.23-4.866,11.944v138.014    l-167.651-211.003c-0.297-0.586-0.74-1.03-1.327-1.326c-4.721-4.714-10.249-7.742-16.588-9.069    c-6.346-1.326-12.608-0.732-18.801,1.77c-6.192,2.509-11.059,6.49-14.598,11.944c-3.539,5.46-5.308,11.577-5.308,18.357v208.348    c0,4.721,1.618,8.703,4.866,11.944c3.241,3.241,7.222,4.865,11.943,4.865c2.945,0,5.751-0.738,8.405-2.211    c2.654-1.472,4.713-3.463,6.193-5.971c1.473-2.503,2.212-5.378,2.212-8.627v-205.251l166.325,209.675    c2.06,2.654,4.423,4.865,7.078,6.635c5.308,3.829,11.349,5.75,18.137,5.75c5.308,0,10.464-1.182,15.482-3.538    c3.539-1.769,6.56-4.127,9.069-7.078c2.502-2.945,4.491-6.338,5.971-10.175c1.473-3.829,2.212-7.664,2.212-11.501v-141.552    c0-4.714-1.624-8.695-4.865-11.944C1373.339,1441.243,1369.359,1439.619,1364.644,1439.619z\"></path>\n              <path fill=\"#F1F2F2\" d=\"M1508.406,1432.983c-2.654-1.472-5.46-2.212-8.404-2.212c-4.721,0-8.703,1.7-11.944,5.087    c-3.249,3.395-4.865,7.3-4.865,11.723v163.228c0,4.721,1.616,8.702,4.865,11.943c3.241,3.249,7.223,4.866,11.944,4.866    c2.944,0,5.751-0.732,8.404-2.212c2.655-1.472,4.714-3.539,6.193-6.194c1.473-2.654,2.213-5.453,2.213-8.404V1447.58    c0-2.945-0.74-5.75-2.213-8.405C1513.12,1436.522,1511.06,1434.462,1508.406,1432.983z\"></path>\n              <path fill=\"#F1F2F2\" d=\"M1499.78,1367.957c-4.575,0-8.481,1.625-11.722,4.866c-3.249,3.249-4.865,7.23-4.865,11.943    c0,2.951,0.732,5.75,2.212,8.405c1.472,2.654,3.463,4.721,5.971,6.193c2.503,1.479,5.378,2.212,8.627,2.212    c4.423,0,8.328-1.618,11.721-4.865c3.387-3.243,5.088-7.224,5.088-11.944c0-4.713-1.701-8.694-5.088-11.943    C1508.33,1369.582,1504.349,1367.957,1499.78,1367.957z\"></path>\n              <path fill=\"#F1F2F2\" d=\"M1859.627,1369.727H1747.27c-35.388,0-65.69,12.607-90.904,37.821    c-25.213,25.215-37.82,55.591-37.82,91.125c0,35.54,12.607,65.911,37.82,91.125c25.215,25.215,55.516,37.821,90.904,37.821h56.178    c4.714,0,8.695-1.618,11.944-4.866c3.241-3.241,4.865-7.222,4.865-11.943c0-4.714-1.624-8.695-4.865-11.943    c-3.249-3.243-7.23-4.866-11.944-4.866h-56.178c-26.251,0-48.659-9.359-67.237-28.09c-18.579-18.723-27.868-41.207-27.868-67.459    c0-26.243,9.29-48.659,27.868-67.237c18.579-18.579,40.987-27.868,67.237-27.868h112.357c4.714,0,8.696-1.693,11.944-5.087    c3.241-3.387,4.865-7.368,4.865-11.943c0-4.569-1.624-8.475-4.865-11.723C1868.322,1371.351,1864.341,1369.727,1859.627,1369.727z    \"></path>\n              <path fill=\"#06b6d4\" d=\"M2219.256,1371.054h-112.357c-4.423,0-8.336,1.624-11.723,4.865c-3.393,3.249-5.087,7.23-5.087,11.944    c0,4.721,1.694,8.702,5.087,11.943c3.387,3.249,7.3,4.866,11.723,4.866h95.547v95.105c0,26.251-9.365,48.659-28.088,67.237    c-18.731,18.579-41.215,27.868-67.459,27.868c-26.251,0-48.659-9.289-67.237-27.868c-18.579-18.579-27.868-40.987-27.868-67.237    c0-4.713-1.701-8.771-5.088-12.165c-3.393-3.387-7.374-5.087-11.943-5.087c-4.575,0-8.481,1.7-11.722,5.087    c-3.249,3.393-4.865,7.451-4.865,12.165c0,35.388,12.607,65.69,37.82,90.904c25.215,25.213,55.584,37.82,91.126,37.82    c35.532,0,65.91-12.607,91.125-37.82c25.214-25.215,37.82-55.516,37.82-90.904v-111.915c0-4.714-1.624-8.695-4.865-11.944    C2227.951,1372.678,2223.971,1371.054,2219.256,1371.054z\"></path>\n              <path fill=\"#06b6d4\" d=\"M2574.24,1502.875c-14.306-14.156-31.483-21.234-51.533-21.234H2410.35    c-10.617,0-19.762-3.829-27.426-11.501c-7.672-7.664-11.501-16.954-11.501-27.868c0-10.907,3.829-20.196,11.501-27.868    c7.664-7.664,16.809-11.501,27.426-11.501h112.357c4.714,0,8.695-1.617,11.944-4.866c3.241-3.241,4.865-7.222,4.865-11.943    c0-4.714-1.624-8.695-4.865-11.944c-3.249-3.241-7.23-4.865-11.944-4.865H2410.35c-20.058,0-37.158,7.154-51.313,21.454    c-14.156,14.308-21.232,31.483-21.232,51.534c0,20.058,7.077,37.234,21.232,51.534c14.156,14.308,31.255,21.454,51.313,21.454    h112.357c7.078,0,13.637,1.77,19.684,5.308c6.042,3.539,10.838,8.336,14.377,14.377c3.538,6.047,5.307,12.607,5.307,19.685    c0,10.616-3.835,19.76-11.501,27.425c-7.672,7.673-16.961,11.502-27.868,11.502h-168.094c-4.721,0-8.703,1.7-11.944,5.087    c-3.249,3.393-4.865,7.374-4.865,11.943c0,4.576,1.616,8.481,4.865,11.723c3.241,3.249,7.223,4.866,11.944,4.866h168.094    c20.051,0,37.227-7.078,51.533-21.234c14.302-14.155,21.454-31.331,21.454-51.534    C2595.695,1534.213,2588.542,1517.03,2574.24,1502.875z\"></path>\n              <path fill=\"#06b6d4\" d=\"M854.024,1585.195l20.001-16.028c16.616-13.507,33.04-27.265,50.086-40.251    c1.13-0.861,2.9-1.686,2.003-3.516c-0.843-1.716-2.481-2.302-4.484-2.123c-8.514,0.765-17.016-0.538-25.537-0.353    c-1.124,0.024-2.768,0.221-3.163-1.25c-0.371-1.369,1.088-2.063,1.919-2.894c6.26-6.242,12.574-12.43,18.816-18.691    c9.303-9.327,18.565-18.714,27.851-28.066c1.848-1.859,3.701-3.713,5.549-5.572c2.655-2.661,5.309-5.315,7.958-7.982    c0.574-0.579,1.259-1.141,1.246-1.94c-0.004-0.257-0.078-0.538-0.254-0.853c-0.556-0.981-1.441-1.1-2.469-0.957    c-0.658,0.096-1.315,0.185-1.973,0.275c-3.844,0.538-7.689,1.076-11.533,1.608c-3.641,0.505-7.281,1.02-10.922,1.529    c-4.162,0.582-8.324,1.158-12.486,1.748c-1.142,0.161-2.409,1.662-3.354,0.508c-0.419-0.508-0.431-1.028-0.251-1.531    c0.269-0.741,0.957-1.441,1.387-2.021c3.414-4.58,6.882-9.124,10.356-13.662c1.74-2.272,3.48-4.544,5.214-6.822    c4.682-6.141,9.369-12.281,14.051-18.422c0.09-0.119,0.181-0.237,0.271-0.355c6.848-8.98,13.7-17.958,20.553-26.936    c0.488-0.64,0.977-1.28,1.465-1.92c2.159-2.828,4.315-5.658,6.476-8.486c4.197-5.501,8.454-10.954,12.67-16.442    c0.263-0.347,0.538-0.718,0.717-1.106c0.269-0.586,0.299-1.196-0.335-1.776c-0.825-0.753-1.8-0.15-2.595,0.419    c-0.67,0.472-1.333,0.957-1.955,1.489c-2.206,1.889-4.401,3.797-6.595,5.698c-3.958,3.438-7.922,6.876-11.976,10.194    c-2.443,2.003-4.865,4.028-7.301,6.038c-18.689-10.581-39.53-15.906-62.549-15.906c-35.54,0-65.911,12.607-91.125,37.82    c-25.214,25.215-37.821,55.592-37.821,91.126c0,35.54,12.607,65.91,37.821,91.125c4.146,4.146,8.445,7.916,12.87,11.381    c-9.015,11.14-18.036,22.277-27.034,33.429c-1.208,1.489-3.755,3.151-2.745,4.891c0.078,0.144,0.173,0.281,0.305,0.425    c1.321,1.429,3.492-1.303,4.933-2.457c6.673-5.333,13.333-10.685,19.982-16.042c3.707-2.984,7.417-5.965,11.124-8.952    c1.474-1.188,2.951-2.373,4.425-3.561c6.41-5.164,12.816-10.333,19.238-15.481L854.024,1585.195z M797.552,1498.009    c0-26.243,9.29-48.728,27.868-67.459c18.579-18.723,40.987-28.089,67.238-28.089c12.273,0,23.712,2.075,34.34,6.171    c-3.37,2.905-6.734,5.816-10.069,8.762c-6.075,5.351-12.365,10.469-18.667,15.564c-4.179,3.378-8.371,6.744-12.514,10.164    c-7.54,6.23-15.037,12.52-22.529,18.804c-7.091,5.955-14.182,11.904-21.19,17.949c-1.136,0.974-3.055,1.907-2.135,3.94    c0.831,1.836,2.774,1.417,4.341,1.578l12.145-0.599l14.151-0.698c1.031-0.102,2.192-0.257,2.89,0.632    c0.034,0.044,0.073,0.078,0.106,0.127c1.017,1.561-0.67,2.105-1.387,2.942c-6.308,7.318-12.616,14.637-18.978,21.907    c-8.161,9.339-16.353,18.649-24.544,27.958c-2.146,2.433-4.275,4.879-6.422,7.312c-1.034,1.172-2.129,2.272-1.238,3.922    c0.933,1.728,2.685,1.752,4.323,1.602c4.134-0.367,8.263-0.489,12.396-0.492c0.242,0,0.485-0.005,0.728-0.004    c2.711,0.009,5.422,0.068,8.134,0.145c2.582,0.074,5.166,0.165,7.752,0.249c0.275,1.62-0.879,2.356-1.62,3.259    c-1.333,1.626-2.667,3.247-4,4.867c-4.315,5.252-8.62,10.514-12.928,15.772c-3.562-2.725-7.007-5.733-10.324-9.051    C806.842,1546.667,797.552,1524.26,797.552,1498.009z\"></path>\n            </svg>\n          </div>\n          <h2 class=\"mt-6 text-xl font-medium text-white\">Welcome Back</h2>\n          <p class=\"mt-2 text-sm text-zinc-400\">Sign in to your account to continue</p>\n        </div>\n\n        <!-- Form Container -->\n        <div class=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n          <div class=\"bg-zinc-900 shadow-sm ring-1 ring-white/10 rounded-xl px-6 py-8 sm:px-10\">\n            <!-- Alerts -->\n            ${data.error ? `<div class=\"mb-6\">${renderAlert({ type: 'error', message: data.error })}</div>` : ''}\n            ${data.message ? `<div class=\"mb-6\">${renderAlert({ type: 'success', message: data.message })}</div>` : ''}\n\n            <!-- Form Response (HTMX target) -->\n            <div id=\"form-response\" class=\"mb-6\"></div>\n\n            <!-- Form -->\n            <form\n              id=\"login-form\"\n              hx-post=\"/auth/login/form\"\n              hx-target=\"#form-response\"\n              hx-swap=\"innerHTML\"\n              class=\"space-y-6\"\n            >\n              <!-- Email -->\n              <div>\n                <label for=\"email\" class=\"block text-sm font-medium text-white mb-2\">\n                  Email Address\n                </label>\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autocomplete=\"email\"\n                  required\n                  class=\"w-full rounded-lg bg-zinc-800 px-3 py-2 text-sm text-white shadow-sm ring-1 ring-inset ring-white/10 placeholder:text-zinc-500 focus:outline-none focus:ring-2 focus:ring-white transition-shadow\"\n                  placeholder=\"Enter your email\"\n                >\n              </div>\n\n              <!-- Password -->\n              <div>\n                <label for=\"password\" class=\"block text-sm font-medium text-white mb-2\">\n                  Password\n                </label>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  autocomplete=\"current-password\"\n                  required\n                  class=\"w-full rounded-lg bg-zinc-800 px-3 py-2 text-sm text-white shadow-sm ring-1 ring-inset ring-white/10 placeholder:text-zinc-500 focus:outline-none focus:ring-2 focus:ring-white transition-shadow\"\n                  placeholder=\"Enter your password\"\n                >\n              </div>\n\n              <!-- Submit Button -->\n              <button\n                type=\"submit\"\n                class=\"w-full rounded-lg bg-white px-4 py-2.5 text-sm font-semibold text-zinc-950 hover:bg-zinc-100 focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-zinc-900 transition-colors\"\n              >\n                Sign In\n              </button>\n            </form>\n\n            <!-- Links -->\n            <div class=\"mt-6 text-center\">\n              <p class=\"text-sm text-zinc-400\">\n                Don't have an account?\n                <a href=\"/auth/register\" class=\"font-semibold text-white hover:text-zinc-300 transition-colors\">Create one here</a>\n              </p>\n            </div>\n          </div>\n\n          <!-- Version -->\n          <div class=\"mt-6 text-center\">\n            <span class=\"inline-flex items-center rounded-md px-2.5 py-1 text-xs font-medium bg-cyan-500/10 text-cyan-400 ring-1 ring-inset ring-cyan-500/20\">\n              v${data.version || '0.1.0'}\n            </span>\n          </div>\n        </div>\n      </div>\n\n      ${demoLoginActive ? `\n      <script>\n        // Demo Login Prefill Script\n        (function() {\n          'use strict';\n\n          function prefillLoginForm() {\n            const emailInput = document.getElementById('email');\n            const passwordInput = document.getElementById('password');\n\n            if (emailInput && passwordInput) {\n              emailInput.value = 'admin@sonicjs.com';\n              passwordInput.value = 'admin123';\n\n              // Add visual indication that form is prefilled (only if not already present)\n              const form = emailInput.closest('form');\n              if (form && !form.querySelector('.demo-mode-notice')) {\n                const notice = document.createElement('div');\n                notice.className = 'demo-mode-notice mb-6 rounded-lg bg-blue-500/10 p-4 ring-1 ring-blue-500/20';\n                notice.innerHTML = '<div class=\"flex items-start gap-x-3\"><svg class=\"h-5 w-5 text-blue-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\"><path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 16h-1v-4h-1m1-4h.01M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"/></svg><div><h3 class=\"text-sm font-semibold text-blue-300\">Demo Mode</h3><p class=\"mt-1 text-sm text-blue-400\">Login form prefilled with demo credentials</p></div></div>';\n                form.insertBefore(notice, form.firstChild);\n              }\n            }\n          }\n\n          // Prefill on page load\n          if (document.readyState === 'loading') {\n            document.addEventListener('DOMContentLoaded', prefillLoginForm);\n          } else {\n            prefillLoginForm();\n          }\n\n          // Also handle HTMX page changes (for SPA-like navigation)\n          document.addEventListener('htmx:afterSwap', function(event) {\n            if (event.detail.target.id === 'main-content' ||\n                document.getElementById('email')) {\n              setTimeout(prefillLoginForm, 100);\n            }\n          });\n        })();\n      </script>\n      ` : ''}\n    </body>\n    </html>\n  `\n}","import { renderAlert } from '../components/alert.template'\n\nexport interface RegisterPageData {\n  error?: string\n}\n\nexport function renderRegisterPage(data: RegisterPageData): string {\n  return `\n    <!DOCTYPE html>\n    <html lang=\"en\" class=\"h-full dark\">\n    <head>\n      <meta charset=\"UTF-8\">\n      <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n      <title>Register - SonicJS AI</title>\n      <link rel=\"icon\" type=\"image/x-icon\" href=\"https://demo.sonicjs.com/images/favicon.ico\">\n      <script src=\"https://unpkg.com/htmx.org@2.0.3\"></script>\n      <script src=\"https://cdn.tailwindcss.com\"></script>\n      <script>\n        tailwind.config = {\n          darkMode: 'class',\n          theme: {\n            extend: {}\n          }\n        }\n      </script>\n      <style>\n        @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');\n\n        body {\n          font-family: 'Inter', system-ui, -apple-system, sans-serif;\n        }\n      </style>\n    </head>\n    <body class=\"h-full bg-zinc-950\">\n      <div class=\"flex min-h-full flex-col justify-center py-12 sm:px-6 lg:px-8\">\n        <!-- Logo Section -->\n        <div class=\"sm:mx-auto sm:w-full sm:max-w-md text-center\">\n          <div class=\"mx-auto flex h-12 w-12 items-center justify-center rounded-lg bg-white\">\n            <svg class=\"h-7 w-7 text-zinc-950\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M13 10V3L4 14h7v7l9-11h-7z\"/>\n            </svg>\n          </div>\n          <h1 class=\"mt-6 text-3xl font-semibold tracking-tight text-white\">SonicJS AI</h1>\n          <p class=\"mt-2 text-sm text-zinc-400\">Create your account and get started</p>\n        </div>\n\n        <!-- Form Container -->\n        <div class=\"mt-8 sm:mx-auto sm:w-full sm:max-w-md\">\n          <div class=\"bg-zinc-900 shadow-sm ring-1 ring-white/10 rounded-xl px-6 py-8 sm:px-10\">\n            <!-- Alerts -->\n            ${data.error ? `<div class=\"mb-6\">${renderAlert({ type: 'error', message: data.error })}</div>` : ''}\n\n            <!-- Form -->\n            <form\n              id=\"register-form\"\n              hx-post=\"/auth/register/form\"\n              hx-target=\"#form-response\"\n              hx-swap=\"innerHTML\"\n              class=\"space-y-6\"\n            >\n              <!-- First and Last Name -->\n              <div class=\"grid grid-cols-1 sm:grid-cols-2 gap-4\">\n                <div>\n                  <label for=\"firstName\" class=\"block text-sm font-medium text-white mb-2\">\n                    First Name\n                  </label>\n                  <input\n                    id=\"firstName\"\n                    name=\"firstName\"\n                    type=\"text\"\n                    required\n                    class=\"w-full rounded-lg bg-zinc-800 px-3 py-2 text-sm text-white shadow-sm ring-1 ring-inset ring-white/10 placeholder:text-zinc-500 focus:outline-none focus:ring-2 focus:ring-white transition-shadow\"\n                    placeholder=\"First name\"\n                  >\n                </div>\n                <div>\n                  <label for=\"lastName\" class=\"block text-sm font-medium text-white mb-2\">\n                    Last Name\n                  </label>\n                  <input\n                    id=\"lastName\"\n                    name=\"lastName\"\n                    type=\"text\"\n                    required\n                    class=\"w-full rounded-lg bg-zinc-800 px-3 py-2 text-sm text-white shadow-sm ring-1 ring-inset ring-white/10 placeholder:text-zinc-500 focus:outline-none focus:ring-2 focus:ring-white transition-shadow\"\n                    placeholder=\"Last name\"\n                  >\n                </div>\n              </div>\n\n              <!-- Username -->\n              <div>\n                <label for=\"username\" class=\"block text-sm font-medium text-white mb-2\">\n                  Username\n                </label>\n                <input\n                  id=\"username\"\n                  name=\"username\"\n                  type=\"text\"\n                  required\n                  class=\"w-full rounded-lg bg-zinc-800 px-3 py-2 text-sm text-white shadow-sm ring-1 ring-inset ring-white/10 placeholder:text-zinc-500 focus:outline-none focus:ring-2 focus:ring-white transition-shadow\"\n                  placeholder=\"Choose a username\"\n                >\n              </div>\n\n              <!-- Email -->\n              <div>\n                <label for=\"email\" class=\"block text-sm font-medium text-white mb-2\">\n                  Email Address\n                </label>\n                <input\n                  id=\"email\"\n                  name=\"email\"\n                  type=\"email\"\n                  autocomplete=\"email\"\n                  required\n                  class=\"w-full rounded-lg bg-zinc-800 px-3 py-2 text-sm text-white shadow-sm ring-1 ring-inset ring-white/10 placeholder:text-zinc-500 focus:outline-none focus:ring-2 focus:ring-white transition-shadow\"\n                  placeholder=\"Enter your email\"\n                >\n              </div>\n\n              <!-- Password -->\n              <div>\n                <label for=\"password\" class=\"block text-sm font-medium text-white mb-2\">\n                  Password\n                </label>\n                <input\n                  id=\"password\"\n                  name=\"password\"\n                  type=\"password\"\n                  autocomplete=\"new-password\"\n                  required\n                  minlength=\"8\"\n                  class=\"w-full rounded-lg bg-zinc-800 px-3 py-2 text-sm text-white shadow-sm ring-1 ring-inset ring-white/10 placeholder:text-zinc-500 focus:outline-none focus:ring-2 focus:ring-white transition-shadow\"\n                  placeholder=\"Create a password (min. 8 characters)\"\n                >\n              </div>\n\n              <!-- Submit Button -->\n              <button\n                type=\"submit\"\n                class=\"w-full rounded-lg bg-white px-4 py-2.5 text-sm font-semibold text-zinc-950 hover:bg-zinc-100 focus:outline-none focus:ring-2 focus:ring-white focus:ring-offset-2 focus:ring-offset-zinc-900 transition-colors\"\n              >\n                Create Account\n              </button>\n            </form>\n\n            <!-- Links -->\n            <div class=\"mt-6 text-center\">\n              <p class=\"text-sm text-zinc-400\">\n                Already have an account?\n                <a href=\"/auth/login\" class=\"font-semibold text-white hover:text-zinc-300 transition-colors\">Sign in here</a>\n              </p>\n            </div>\n\n            <div id=\"form-response\"></div>\n          </div>\n        </div>\n      </div>\n    </body>\n    </html>\n  `\n}","import { z } from 'zod'\nimport type { D1Database } from '@cloudflare/workers-types'\n\nexport interface FieldConfig {\n  required: boolean\n  minLength: number\n  label: string\n  type: string\n}\n\nexport interface AuthSettings {\n  requiredFields: {\n    email: FieldConfig\n    password: FieldConfig\n    username: FieldConfig\n    firstName: FieldConfig\n    lastName: FieldConfig\n  }\n  validation: {\n    emailFormat: boolean\n    allowDuplicateUsernames: boolean\n    passwordRequirements: {\n      requireUppercase: boolean\n      requireLowercase: boolean\n      requireNumbers: boolean\n      requireSpecialChars: boolean\n    }\n  }\n  registration: {\n    enabled: boolean\n    requireEmailVerification: boolean\n    defaultRole: string\n  }\n}\n\nexport class AuthValidationService {\n  private static instance: AuthValidationService\n  private cachedSettings: AuthSettings | null = null\n  private cacheExpiry: number = 0\n  private readonly CACHE_TTL = 5 * 60 * 1000 // 5 minutes\n\n  static getInstance(): AuthValidationService {\n    if (!AuthValidationService.instance) {\n      AuthValidationService.instance = new AuthValidationService()\n    }\n    return AuthValidationService.instance\n  }\n\n  /**\n   * Get authentication settings from core-auth plugin\n   */\n  async getAuthSettings(db: D1Database): Promise<AuthSettings> {\n    // Return cached settings if still valid\n    if (this.cachedSettings && Date.now() < this.cacheExpiry) {\n      return this.cachedSettings\n    }\n\n    try {\n      const plugin = await db\n        .prepare('SELECT settings FROM plugins WHERE id = ? AND status = ?')\n        .bind('core-auth', 'active')\n        .first() as any\n\n      if (!plugin || !plugin.settings) {\n        console.warn('[AuthValidation] Core-auth plugin not found or not active, using defaults')\n        return this.getDefaultSettings()\n      }\n\n      const settings = typeof plugin.settings === 'string'\n        ? JSON.parse(plugin.settings)\n        : plugin.settings\n\n      // Cache the settings\n      this.cachedSettings = settings\n      this.cacheExpiry = Date.now() + this.CACHE_TTL\n\n      return settings\n    } catch (error) {\n      console.error('[AuthValidation] Error loading auth settings:', error)\n      return this.getDefaultSettings()\n    }\n  }\n\n  /**\n   * Get default authentication settings\n   */\n  private getDefaultSettings(): AuthSettings {\n    return {\n      requiredFields: {\n        email: { required: true, minLength: 5, label: 'Email', type: 'email' },\n        password: { required: true, minLength: 8, label: 'Password', type: 'password' },\n        username: { required: true, minLength: 3, label: 'Username', type: 'text' },\n        firstName: { required: true, minLength: 1, label: 'First Name', type: 'text' },\n        lastName: { required: true, minLength: 1, label: 'Last Name', type: 'text' },\n      },\n      validation: {\n        emailFormat: true,\n        allowDuplicateUsernames: false,\n        passwordRequirements: {\n          requireUppercase: false,\n          requireLowercase: false,\n          requireNumbers: false,\n          requireSpecialChars: false,\n        },\n      },\n      registration: {\n        enabled: true,\n        requireEmailVerification: false,\n        defaultRole: 'viewer',\n      },\n    }\n  }\n\n  /**\n   * Build dynamic Zod schema based on settings\n   */\n  async buildRegistrationSchema(db: D1Database): Promise<z.ZodObject<any>> {\n    const settings = await this.getAuthSettings(db)\n    const fields = settings.requiredFields\n    const validation = settings.validation\n\n    const schemaFields: Record<string, z.ZodTypeAny> = {}\n\n    // Email field\n    if (fields.email.required) {\n      let emailSchema = z.string()\n\n      if (validation.emailFormat) {\n        emailSchema = emailSchema.email('Valid email is required')\n      }\n\n      if (fields.email.minLength > 0) {\n        emailSchema = emailSchema.min(\n          fields.email.minLength,\n          `Email must be at least ${fields.email.minLength} characters`\n        )\n      }\n\n      schemaFields.email = emailSchema\n    } else {\n      schemaFields.email = z.string().email().optional()\n    }\n\n    // Password field\n    if (fields.password.required) {\n      let passwordSchema = z.string().min(\n        fields.password.minLength,\n        `Password must be at least ${fields.password.minLength} characters`\n      )\n\n      // Add password requirements validation\n      if (validation.passwordRequirements.requireUppercase) {\n        passwordSchema = passwordSchema.regex(\n          /[A-Z]/,\n          'Password must contain at least one uppercase letter'\n        )\n      }\n\n      if (validation.passwordRequirements.requireLowercase) {\n        passwordSchema = passwordSchema.regex(\n          /[a-z]/,\n          'Password must contain at least one lowercase letter'\n        )\n      }\n\n      if (validation.passwordRequirements.requireNumbers) {\n        passwordSchema = passwordSchema.regex(\n          /[0-9]/,\n          'Password must contain at least one number'\n        )\n      }\n\n      if (validation.passwordRequirements.requireSpecialChars) {\n        passwordSchema = passwordSchema.regex(\n          /[!@#$%^&*(),.?\":{}|<>]/,\n          'Password must contain at least one special character'\n        )\n      }\n\n      schemaFields.password = passwordSchema\n    } else {\n      schemaFields.password = z.string().min(fields.password.minLength).optional()\n    }\n\n    // Username field\n    if (fields.username.required) {\n      schemaFields.username = z.string().min(\n        fields.username.minLength,\n        `Username must be at least ${fields.username.minLength} characters`\n      )\n    } else {\n      schemaFields.username = z.string().min(fields.username.minLength).optional()\n    }\n\n    // First name field\n    if (fields.firstName.required) {\n      schemaFields.firstName = z.string().min(\n        fields.firstName.minLength,\n        `First name must be at least ${fields.firstName.minLength} characters`\n      )\n    } else {\n      schemaFields.firstName = z.string().optional()\n    }\n\n    // Last name field\n    if (fields.lastName.required) {\n      schemaFields.lastName = z.string().min(\n        fields.lastName.minLength,\n        `Last name must be at least ${fields.lastName.minLength} characters`\n      )\n    } else {\n      schemaFields.lastName = z.string().optional()\n    }\n\n    return z.object(schemaFields)\n  }\n\n  /**\n   * Validate registration data against settings\n   */\n  async validateRegistration(db: D1Database, data: any): Promise<{ valid: boolean; errors: string[] }> {\n    try {\n      const schema = await this.buildRegistrationSchema(db)\n      await schema.parseAsync(data)\n      return { valid: true, errors: [] }\n    } catch (error) {\n      if (error instanceof z.ZodError) {\n        return {\n          valid: false,\n          errors: error.errors.map(e => e.message),\n        }\n      }\n      return {\n        valid: false,\n        errors: ['Validation failed'],\n      }\n    }\n  }\n\n  /**\n   * Clear cached settings (call after updating plugin settings)\n   */\n  clearCache(): void {\n    this.cachedSettings = null\n    this.cacheExpiry = 0\n  }\n\n  /**\n   * Get required field names for database insertion\n   */\n  async getRequiredFieldNames(db: D1Database): Promise<string[]> {\n    const settings = await this.getAuthSettings(db)\n    const requiredFields: string[] = []\n\n    Object.entries(settings.requiredFields).forEach(([key, config]) => {\n      if (config.required) {\n        requiredFields.push(key)\n      }\n    })\n\n    return requiredFields\n  }\n\n  /**\n   * Generate auto-fill values for optional fields\n   */\n  generateDefaultValue(fieldName: string, data: any): string {\n    switch (fieldName) {\n      case 'username':\n        // Generate username from email if not provided\n        return data.email ? data.email.split('@')[0] : `user_${Date.now()}`\n      case 'firstName':\n        return data.firstName || 'User'\n      case 'lastName':\n        return data.lastName || ''\n      default:\n        return ''\n    }\n  }\n}\n\n// Export singleton instance\nexport const authValidationService = AuthValidationService.getInstance()\n","import { Hono } from 'hono'\nimport { zValidator } from '@hono/zod-validator'\nimport { z } from 'zod'\nimport { setCookie } from 'hono/cookie'\nimport { html } from 'hono/html'\nimport { AuthManager, requireAuth } from '../middleware'\nimport { renderLoginPage, LoginPageData } from '../templates/pages/auth-login.template'\nimport { renderRegisterPage, RegisterPageData } from '../templates/pages/auth-register.template'\nimport { getCacheService, CACHE_CONFIGS } from '../services'\nimport { authValidationService } from '../services/auth-validation'\nimport type { Bindings, Variables } from '../app'\n\nconst authRoutes = new Hono<{ Bindings: Bindings; Variables: Variables }>()\n\n// Login page (HTML form)\nauthRoutes.get('/login', async (c) => {\n  const error = c.req.query('error')\n  const message = c.req.query('message')\n  \n  const pageData: LoginPageData = {\n    error: error || undefined,\n    message: message || undefined,\n    version: c.get('appVersion')\n  }\n  \n  // Check if demo login plugin is active\n  const db = c.env.DB\n  let demoLoginActive = false\n  try {\n    const plugin = await db.prepare('SELECT * FROM plugins WHERE id = ? AND status = ?')\n      .bind('demo-login-prefill', 'active')\n      .first()\n    demoLoginActive = !!plugin\n  } catch (error) {\n    // Ignore database errors - plugin system might not be initialized\n  }\n  \n  return c.html(renderLoginPage(pageData, demoLoginActive))\n})\n\n// Registration page (HTML form)\nauthRoutes.get('/register', (c) => {\n  const error = c.req.query('error')\n  \n  const pageData: RegisterPageData = {\n    error: error || undefined\n  }\n  \n  return c.html(renderRegisterPage(pageData))\n})\n\n// Login schema\nconst loginSchema = z.object({\n  email: z.string().email('Valid email is required'),\n  password: z.string().min(1, 'Password is required')\n})\n\n// Register new user\nauthRoutes.post('/register',\n  async (c) => {\n    try {\n      const db = c.env.DB\n      const requestData = await c.req.json()\n\n      // Build and validate using dynamic schema\n      const validationSchema = await authValidationService.buildRegistrationSchema(db)\n      const validationResult = await validationSchema.safeParseAsync(requestData)\n\n      if (!validationResult.success) {\n        return c.json({\n          error: 'Validation failed',\n          details: validationResult.error.errors.map(e => e.message)\n        }, 400)\n      }\n\n      const validatedData = validationResult.data\n\n      // Extract fields with defaults for optional ones\n      const email = validatedData.email\n      const password = validatedData.password\n      const username = validatedData.username || authValidationService.generateDefaultValue('username', validatedData)\n      const firstName = validatedData.firstName || authValidationService.generateDefaultValue('firstName', validatedData)\n      const lastName = validatedData.lastName || authValidationService.generateDefaultValue('lastName', validatedData)\n      \n      // Normalize email to lowercase\n      const normalizedEmail = email.toLowerCase()\n      \n      // Check if user already exists\n      const existingUser = await db.prepare('SELECT id FROM users WHERE email = ? OR username = ?')\n        .bind(normalizedEmail, username)\n        .first()\n      \n      if (existingUser) {\n        return c.json({ error: 'User with this email or username already exists' }, 400)\n      }\n      \n      // Hash password\n      const passwordHash = await AuthManager.hashPassword(password)\n      \n      // Create user\n      const userId = crypto.randomUUID()\n      const now = new Date()\n      \n      await db.prepare(`\n        INSERT INTO users (id, email, username, first_name, last_name, password_hash, role, is_active, created_at, updated_at)\n        VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n      `).bind(\n        userId,\n        normalizedEmail,\n        username,\n        firstName,\n        lastName,\n        passwordHash,\n        'viewer', // Default role\n        1, // is_active\n        now.getTime(),\n        now.getTime()\n      ).run()\n      \n      // Generate JWT token\n      const token = await AuthManager.generateToken(userId, normalizedEmail, 'viewer')\n      \n      // Set HTTP-only cookie\n      setCookie(c, 'auth_token', token, {\n        httpOnly: true,\n        secure: true,\n        sameSite: 'Strict',\n        maxAge: 60 * 60 * 24 // 24 hours\n      })\n      \n      return c.json({\n        user: {\n          id: userId,\n          email: normalizedEmail,\n          username,\n          firstName,\n          lastName,\n          role: 'viewer'\n        },\n        token\n      }, 201)\n    } catch (error) {\n      console.error('Registration error:', error)\n      return c.json({ error: 'Registration failed' }, 500)\n    }\n  }\n)\n\n// Login user\nauthRoutes.post('/login',\n  zValidator('json', loginSchema),\n  async (c) => {\n    try {\n      const { email, password } = c.req.valid('json')\n      const db = c.env.DB\n      \n      // Normalize email to lowercase\n      const normalizedEmail = email.toLowerCase()\n      \n      // Find user with caching\n      const cache = getCacheService(CACHE_CONFIGS.user!)\n      let user = await cache.get<any>(cache.generateKey('user', `email:${normalizedEmail}`))\n\n      if (!user) {\n        user = await db.prepare('SELECT * FROM users WHERE email = ? AND is_active = 1')\n          .bind(normalizedEmail)\n          .first() as any\n\n        if (user) {\n          // Cache the user for faster subsequent lookups\n          await cache.set(cache.generateKey('user', `email:${normalizedEmail}`), user)\n          await cache.set(cache.generateKey('user', user.id), user)\n        }\n      }\n\n      if (!user) {\n        return c.json({ error: 'Invalid email or password' }, 401)\n      }\n      \n      // Verify password\n      const isValidPassword = await AuthManager.verifyPassword(password, user.password_hash)\n      if (!isValidPassword) {\n        return c.json({ error: 'Invalid email or password' }, 401)\n      }\n      \n      // Generate JWT token\n      const token = await AuthManager.generateToken(user.id, user.email, user.role)\n      \n      // Set HTTP-only cookie\n      setCookie(c, 'auth_token', token, {\n        httpOnly: true,\n        secure: true,\n        sameSite: 'Strict',\n        maxAge: 60 * 60 * 24 // 24 hours\n      })\n      \n      // Update last login\n      await db.prepare('UPDATE users SET last_login_at = ? WHERE id = ?')\n        .bind(new Date().getTime(), user.id)\n        .run()\n\n      // Invalidate user cache on login\n      await cache.delete(cache.generateKey('user', user.id))\n      await cache.delete(cache.generateKey('user', `email:${normalizedEmail}`))\n\n      return c.json({\n        user: {\n          id: user.id,\n          email: user.email,\n          username: user.username,\n          firstName: user.firstName,\n          lastName: user.lastName,\n          role: user.role\n        },\n        token\n      })\n    } catch (error) {\n      console.error('Login error:', error)\n      return c.json({ error: 'Login failed' }, 500)\n    }\n  }\n)\n\n// Logout user (both GET and POST for convenience)\nauthRoutes.post('/logout', (c) => {\n  // Clear the auth cookie\n  setCookie(c, 'auth_token', '', {\n    httpOnly: true,\n    secure: false, // Set to true in production with HTTPS\n    sameSite: 'Strict',\n    maxAge: 0 // Expire immediately\n  })\n  \n  return c.json({ message: 'Logged out successfully' })\n})\n\nauthRoutes.get('/logout', (c) => {\n  // Clear the auth cookie\n  setCookie(c, 'auth_token', '', {\n    httpOnly: true,\n    secure: false, // Set to true in production with HTTPS\n    sameSite: 'Strict',\n    maxAge: 0 // Expire immediately\n  })\n  \n  return c.redirect('/auth/login?message=You have been logged out successfully')\n})\n\n// Get current user\nauthRoutes.get('/me', requireAuth(), async (c) => {\n  try {\n    // This would need the auth middleware applied\n    const user = c.get('user')\n    \n    if (!user) {\n      return c.json({ error: 'Not authenticated' }, 401)\n    }\n    \n    const db = c.env.DB\n    const userData = await db.prepare('SELECT id, email, username, first_name, last_name, role, created_at FROM users WHERE id = ?')\n      .bind(user.userId)\n      .first()\n    \n    if (!userData) {\n      return c.json({ error: 'User not found' }, 404)\n    }\n    \n    return c.json({ user: userData })\n  } catch (error) {\n    console.error('Get user error:', error)\n    return c.json({ error: 'Failed to get user' }, 500)\n  }\n})\n\n// Refresh token\nauthRoutes.post('/refresh', requireAuth(), async (c) => {\n  try {\n    const user = c.get('user')\n    \n    if (!user) {\n      return c.json({ error: 'Not authenticated' }, 401)\n    }\n    \n    // Generate new token\n    const token = await AuthManager.generateToken(user.userId, user.email, user.role)\n    \n    // Set new cookie\n    setCookie(c, 'auth_token', token, {\n      httpOnly: true,\n      secure: true,\n      sameSite: 'Strict',\n      maxAge: 60 * 60 * 24 // 24 hours\n    })\n    \n    return c.json({ token })\n  } catch (error) {\n    console.error('Token refresh error:', error)\n    return c.json({ error: 'Token refresh failed' }, 500)\n  }\n})\n\n// Form-based registration handler (for HTML forms)\nauthRoutes.post('/register/form', async (c) => {\n  try {\n    const db = c.env.DB\n    const formData = await c.req.formData()\n\n    // Extract form data\n    const requestData = {\n      email: formData.get('email') as string,\n      password: formData.get('password') as string,\n      username: formData.get('username') as string,\n      firstName: formData.get('firstName') as string,\n      lastName: formData.get('lastName') as string,\n    }\n\n    // Normalize email to lowercase\n    const normalizedEmail = requestData.email?.toLowerCase()\n    requestData.email = normalizedEmail\n\n    // Build and validate using dynamic schema\n    const validationSchema = await authValidationService.buildRegistrationSchema(db)\n    const validation = await validationSchema.safeParseAsync(requestData)\n\n    if (!validation.success) {\n      return c.html(html`\n        <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n          ${validation.error.errors.map(err => err.message).join(', ')}\n        </div>\n      `)\n    }\n\n    const validatedData = validation.data\n\n    // Extract fields with defaults for optional ones\n    const email = validatedData.email\n    const password = validatedData.password\n    const username = validatedData.username || authValidationService.generateDefaultValue('username', validatedData)\n    const firstName = validatedData.firstName || authValidationService.generateDefaultValue('firstName', validatedData)\n    const lastName = validatedData.lastName || authValidationService.generateDefaultValue('lastName', validatedData)\n    \n    // Check if user already exists\n    const existingUser = await db.prepare('SELECT id FROM users WHERE email = ? OR username = ?')\n      .bind(normalizedEmail, username)\n      .first()\n    \n    if (existingUser) {\n      return c.html(html`\n        <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n          User with this email or username already exists\n        </div>\n      `)\n    }\n    \n    // Hash password\n    const passwordHash = await AuthManager.hashPassword(password)\n    \n    // Create user\n    const userId = crypto.randomUUID()\n    const now = new Date()\n    \n    await db.prepare(`\n      INSERT INTO users (id, email, username, first_name, last_name, password_hash, role, is_active, created_at, updated_at)\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `).bind(\n      userId,\n      normalizedEmail,\n      username,\n      firstName,\n      lastName,\n      passwordHash,\n      'admin', // First user gets admin role\n      1, // is_active\n      now.getTime(),\n      now.getTime()\n    ).run()\n    \n    // Generate JWT token\n    const token = await AuthManager.generateToken(userId, normalizedEmail, 'admin')\n    \n    // Set HTTP-only cookie\n    setCookie(c, 'auth_token', token, {\n      httpOnly: true,\n      secure: false, // Set to true in production with HTTPS\n      sameSite: 'Strict',\n      maxAge: 60 * 60 * 24 // 24 hours\n    })\n    \n    return c.html(html`\n      <div class=\"bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded\">\n        Account created successfully! Redirecting to admin dashboard...\n        <script>\n          setTimeout(() => {\n            window.location.href = '/admin';\n          }, 2000);\n        </script>\n      </div>\n    `)\n  } catch (error) {\n    console.error('Registration error:', error)\n    return c.html(html`\n      <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n        Registration failed. Please try again.\n      </div>\n    `)\n  }\n})\n\n// Form-based login handler (for HTML forms)\nauthRoutes.post('/login/form', async (c) => {\n  try {\n    const formData = await c.req.formData()\n    const email = formData.get('email') as string\n    const password = formData.get('password') as string\n\n    // Normalize email to lowercase\n    const normalizedEmail = email.toLowerCase()\n\n    // Validate the data\n    const validation = loginSchema.safeParse({ email: normalizedEmail, password })\n\n    if (!validation.success) {\n      return c.html(html`\n        <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n          ${validation.error.errors.map(err => err.message).join(', ')}\n        </div>\n      `)\n    }\n\n    const db = c.env.DB\n    \n    // Find user\n    const user = await db.prepare('SELECT * FROM users WHERE email = ? AND is_active = 1')\n      .bind(normalizedEmail)\n      .first() as any\n    \n    if (!user) {\n      return c.html(html`\n        <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n          Invalid email or password\n        </div>\n      `)\n    }\n    \n    // Verify password\n    const isValidPassword = await AuthManager.verifyPassword(password, user.password_hash)\n    if (!isValidPassword) {\n      return c.html(html`\n        <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n          Invalid email or password\n        </div>\n      `)\n    }\n    \n    // Generate JWT token\n    const token = await AuthManager.generateToken(user.id, user.email, user.role)\n    \n    // Set HTTP-only cookie\n    setCookie(c, 'auth_token', token, {\n      httpOnly: true,\n      secure: false, // Set to true in production with HTTPS\n      sameSite: 'Strict',\n      maxAge: 60 * 60 * 24 // 24 hours\n    })\n    \n    // Update last login\n    await db.prepare('UPDATE users SET last_login_at = ? WHERE id = ?')\n      .bind(new Date().getTime(), user.id)\n      .run()\n    \n    return c.html(html`\n      <div id=\"form-response\">\n        <div class=\"rounded-lg bg-green-100 dark:bg-lime-500/10 p-4 ring-1 ring-green-400 dark:ring-lime-500/20\">\n          <div class=\"flex items-start gap-x-3\">\n            <svg class=\"h-5 w-5 text-green-600 dark:text-lime-400 shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12l2 2 4-4m6 2a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n            </svg>\n            <div class=\"flex-1\">\n              <p class=\"text-sm font-medium text-green-700 dark:text-lime-300\">Login successful! Redirecting to admin dashboard...</p>\n            </div>\n          </div>\n          <script>\n            setTimeout(() => {\n              window.location.href = '/admin';\n            }, 2000);\n          </script>\n        </div>\n      </div>\n    `)\n  } catch (error) {\n    console.error('Login error:', error)\n    return c.html(html`\n      <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n        Login failed. Please try again.\n      </div>\n    `)\n  }\n})\n\n// Test seeding endpoint (only for development/testing)\nauthRoutes.post('/seed-admin', async (c) => {\n  try {\n    const db = c.env.DB\n    \n    // First ensure the users table exists\n    await db.prepare(`\n      CREATE TABLE IF NOT EXISTS users (\n        id TEXT PRIMARY KEY,\n        email TEXT NOT NULL UNIQUE,\n        username TEXT NOT NULL UNIQUE,\n        first_name TEXT NOT NULL,\n        last_name TEXT NOT NULL,\n        password_hash TEXT,\n        role TEXT NOT NULL DEFAULT 'viewer',\n        avatar TEXT,\n        is_active INTEGER NOT NULL DEFAULT 1,\n        last_login_at INTEGER,\n        created_at INTEGER NOT NULL,\n        updated_at INTEGER NOT NULL\n      )\n    `).run()\n    \n    // Check if admin user already exists\n    const existingAdmin = await db.prepare('SELECT id FROM users WHERE email = ? OR username = ?')\n      .bind('admin@sonicjs.com', 'admin')\n      .first()\n    \n    if (existingAdmin) {\n      return c.json({ \n        message: 'Admin user already exists',\n        user: {\n          id: existingAdmin.id,\n          email: 'admin@sonicjs.com',\n          username: 'admin',\n          role: 'admin'\n        }\n      })\n    }\n    \n    // Hash password\n    const passwordHash = await AuthManager.hashPassword('admin123')\n    \n    // Create admin user\n    const userId = 'admin-user-id'\n    const now = Date.now()\n    const adminEmail = 'admin@sonicjs.com'.toLowerCase()\n    \n    await db.prepare(`\n      INSERT INTO users (id, email, username, first_name, last_name, password_hash, role, is_active, created_at, updated_at)\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `).bind(\n      userId,\n      adminEmail,\n      'admin',\n      'Admin',\n      'User',\n      passwordHash,\n      'admin',\n      1, // is_active\n      now,\n      now\n    ).run()\n    \n    return c.json({ \n      message: 'Admin user created successfully',\n      user: {\n        id: userId,\n        email: adminEmail,\n        username: 'admin',\n        role: 'admin'\n      },\n      passwordHash: passwordHash // For debugging\n    })\n  } catch (error) {\n    console.error('Seed admin error:', error)\n    return c.json({ error: 'Failed to create admin user', details: error instanceof Error ? error.message : String(error) }, 500)\n  }\n})\n\n\n// Accept invitation page\nauthRoutes.get('/accept-invitation', async (c) => {\n  try {\n    const token = c.req.query('token')\n    \n    if (!token) {\n      return c.html(`\n        <html>\n          <head><title>Invalid Invitation</title></head>\n          <body>\n            <h1>Invalid Invitation</h1>\n            <p>The invitation link is invalid or has expired.</p>\n            <a href=\"/auth/login\">Go to Login</a>\n          </body>\n        </html>\n      `)\n    }\n\n    const db = c.env.DB\n    \n    // Check if invitation token is valid\n    const userStmt = db.prepare(`\n      SELECT id, email, first_name, last_name, role, invited_at\n      FROM users \n      WHERE invitation_token = ? AND is_active = 0\n    `)\n    const invitedUser = await userStmt.bind(token).first() as any\n\n    if (!invitedUser) {\n      return c.html(`\n        <html>\n          <head><title>Invalid Invitation</title></head>\n          <body>\n            <h1>Invalid Invitation</h1>\n            <p>The invitation link is invalid or has expired.</p>\n            <a href=\"/auth/login\">Go to Login</a>\n          </body>\n        </html>\n      `)\n    }\n\n    // Check if invitation is expired (7 days)\n    const invitationAge = Date.now() - invitedUser.invited_at\n    const maxAge = 7 * 24 * 60 * 60 * 1000 // 7 days\n    \n    if (invitationAge > maxAge) {\n      return c.html(`\n        <html>\n          <head><title>Invitation Expired</title></head>\n          <body>\n            <h1>Invitation Expired</h1>\n            <p>This invitation has expired. Please contact your administrator for a new invitation.</p>\n            <a href=\"/auth/login\">Go to Login</a>\n          </body>\n        </html>\n      `)\n    }\n\n    // Show invitation acceptance form\n    return c.html(`\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Accept Invitation - SonicJS AI</title>\n        <script src=\"https://cdn.tailwindcss.com\"></script>\n        <style>\n          body {\n            background: linear-gradient(135deg, #1e293b 0%, #0f172a 100%);\n            min-height: 100vh;\n          }\n        </style>\n      </head>\n      <body class=\"bg-gray-900 text-white\">\n        <div class=\"min-h-screen flex items-center justify-center px-4\">\n          <div class=\"max-w-md w-full space-y-8\">\n            <div class=\"text-center\">\n              <div class=\"mx-auto w-16 h-16 bg-blue-600 rounded-2xl flex items-center justify-center mb-6\">\n                <svg class=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M18 9v3m0 0v3m0-3h3m-3 0h-3m-2-5a4 4 0 11-8 0 4 4 0 018 0zM3 20a6 6 0 0112 0v1H3v-1z\"/>\n                </svg>\n              </div>\n              <h2 class=\"text-3xl font-bold\">Accept Invitation</h2>\n              <p class=\"mt-2 text-gray-400\">Complete your account setup</p>\n              <p class=\"mt-4 text-sm\">\n                You've been invited as <strong>${invitedUser.first_name} ${invitedUser.last_name}</strong><br>\n                <span class=\"text-gray-400\">${invitedUser.email}</span><br>\n                <span class=\"text-blue-400 capitalize\">${invitedUser.role}</span>\n              </p>\n            </div>\n\n            <form method=\"POST\" action=\"/auth/accept-invitation\" class=\"mt-8 space-y-6\">\n              <input type=\"hidden\" name=\"token\" value=\"${token}\" />\n              \n              <div>\n                <label class=\"block text-sm font-medium text-gray-300 mb-2\">Username</label>\n                <input \n                  type=\"text\" \n                  name=\"username\" \n                  required\n                  class=\"w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-xl text-white focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-500 transition-all\"\n                  placeholder=\"Enter your username\"\n                >\n              </div>\n\n              <div>\n                <label class=\"block text-sm font-medium text-gray-300 mb-2\">Password</label>\n                <input \n                  type=\"password\" \n                  name=\"password\" \n                  required\n                  minlength=\"8\"\n                  class=\"w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-xl text-white focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-500 transition-all\"\n                  placeholder=\"Enter your password\"\n                >\n                <p class=\"text-xs text-gray-400 mt-1\">Password must be at least 8 characters long</p>\n              </div>\n\n              <div>\n                <label class=\"block text-sm font-medium text-gray-300 mb-2\">Confirm Password</label>\n                <input \n                  type=\"password\" \n                  name=\"confirm_password\" \n                  required\n                  minlength=\"8\"\n                  class=\"w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-xl text-white focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-500 transition-all\"\n                  placeholder=\"Confirm your password\"\n                >\n              </div>\n\n              <button \n                type=\"submit\"\n                class=\"w-full py-3 px-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-xl hover:from-blue-700 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-900 transition-all\"\n              >\n                Accept Invitation & Create Account\n              </button>\n            </form>\n          </div>\n        </div>\n      </body>\n      </html>\n    `)\n\n  } catch (error) {\n    console.error('Accept invitation page error:', error)\n    return c.html(`\n      <html>\n        <head><title>Error</title></head>\n        <body>\n          <h1>Error</h1>\n          <p>An error occurred while processing your invitation.</p>\n          <a href=\"/auth/login\">Go to Login</a>\n        </body>\n      </html>\n    `)\n  }\n})\n\n// Process invitation acceptance\nauthRoutes.post('/accept-invitation', async (c) => {\n  try {\n    const formData = await c.req.formData()\n    const token = formData.get('token')?.toString()\n    const username = formData.get('username')?.toString()?.trim()\n    const password = formData.get('password')?.toString()\n    const confirmPassword = formData.get('confirm_password')?.toString()\n\n    if (!token || !username || !password || !confirmPassword) {\n      return c.json({ error: 'All fields are required' }, 400)\n    }\n\n    if (password !== confirmPassword) {\n      return c.json({ error: 'Passwords do not match' }, 400)\n    }\n\n    if (password.length < 8) {\n      return c.json({ error: 'Password must be at least 8 characters long' }, 400)\n    }\n\n    const db = c.env.DB\n\n    // Check if invitation token is valid\n    const userStmt = db.prepare(`\n      SELECT id, email, first_name, last_name, role, invited_at\n      FROM users \n      WHERE invitation_token = ? AND is_active = 0\n    `)\n    const invitedUser = await userStmt.bind(token).first() as any\n\n    if (!invitedUser) {\n      return c.json({ error: 'Invalid or expired invitation' }, 400)\n    }\n\n    // Check if invitation is expired (7 days)\n    const invitationAge = Date.now() - invitedUser.invited_at\n    const maxAge = 7 * 24 * 60 * 60 * 1000 // 7 days\n    \n    if (invitationAge > maxAge) {\n      return c.json({ error: 'Invitation has expired' }, 400)\n    }\n\n    // Check if username is available\n    const existingUsernameStmt = db.prepare(`\n      SELECT id FROM users WHERE username = ? AND id != ?\n    `)\n    const existingUsername = await existingUsernameStmt.bind(username, invitedUser.id).first()\n\n    if (existingUsername) {\n      return c.json({ error: 'Username is already taken' }, 400)\n    }\n\n    // Hash password\n    const passwordHash = await AuthManager.hashPassword(password)\n\n    // Activate user account\n    const updateStmt = db.prepare(`\n      UPDATE users SET \n        username = ?,\n        password_hash = ?,\n        is_active = 1,\n        email_verified = 1,\n        invitation_token = NULL,\n        accepted_invitation_at = ?,\n        updated_at = ?\n      WHERE id = ?\n    `)\n\n    await updateStmt.bind(\n      username,\n      passwordHash,\n      Date.now(),\n      Date.now(),\n      invitedUser.id\n    ).run()\n\n    // Generate JWT token for auto-login\n    const authToken = await AuthManager.generateToken(invitedUser.id, invitedUser.email, invitedUser.role)\n    \n    // Set HTTP-only cookie\n    setCookie(c, 'auth_token', authToken, {\n      httpOnly: true,\n      secure: true,\n      sameSite: 'Strict',\n      maxAge: 60 * 60 * 24 // 24 hours\n    })\n\n    // Log the activity (TODO: implement activity logging)\n    // Activity logging is deferred until utils/log-activity is implemented\n\n    // Redirect to admin dashboard\n    return c.redirect('/admin?welcome=true')\n\n  } catch (error) {\n    console.error('Accept invitation error:', error)\n    return c.json({ error: 'Failed to accept invitation' }, 500)\n  }\n})\n\n// Request password reset\nauthRoutes.post('/request-password-reset', async (c) => {\n  try {\n    const formData = await c.req.formData()\n    const email = formData.get('email')?.toString()?.trim()?.toLowerCase()\n\n    if (!email) {\n      return c.json({ error: 'Email is required' }, 400)\n    }\n\n    // Validate email format\n    const emailRegex = /^[^\\s@]+@[^\\s@]+\\.[^\\s@]+$/\n    if (!emailRegex.test(email)) {\n      return c.json({ error: 'Please enter a valid email address' }, 400)\n    }\n\n    const db = c.env.DB\n\n    // Check if user exists and is active\n    const userStmt = db.prepare(`\n      SELECT id, email, first_name, last_name FROM users \n      WHERE email = ? AND is_active = 1\n    `)\n    const user = await userStmt.bind(email).first() as any\n\n    // Always return success to prevent email enumeration\n    if (!user) {\n      return c.json({\n        success: true,\n        message: 'If an account with this email exists, a password reset link has been sent.'\n      })\n    }\n\n    // Generate password reset token (expires in 1 hour)\n    const resetToken = crypto.randomUUID()\n    const resetExpires = Date.now() + (60 * 60 * 1000) // 1 hour\n\n    // Update user with reset token\n    const updateStmt = db.prepare(`\n      UPDATE users SET \n        password_reset_token = ?,\n        password_reset_expires = ?,\n        updated_at = ?\n      WHERE id = ?\n    `)\n\n    await updateStmt.bind(\n      resetToken,\n      resetExpires,\n      Date.now(),\n      user.id\n    ).run()\n\n    // Log the activity (TODO: implement activity logging)\n    // Activity logging is deferred until utils/log-activity is implemented\n\n    // In a real implementation, you would send an email here\n    // For now, we'll return the reset link for development\n    const resetLink = `${c.req.header('origin') || 'http://localhost:8787'}/auth/reset-password?token=${resetToken}`\n\n    return c.json({\n      success: true,\n      message: 'If an account with this email exists, a password reset link has been sent.',\n      reset_link: resetLink // In production, this would be sent via email\n    })\n\n  } catch (error) {\n    console.error('Password reset request error:', error)\n    return c.json({ error: 'Failed to process password reset request' }, 500)\n  }\n})\n\n// Show password reset form\nauthRoutes.get('/reset-password', async (c) => {\n  try {\n    const token = c.req.query('token')\n    \n    if (!token) {\n      return c.html(`\n        <html>\n          <head><title>Invalid Reset Link</title></head>\n          <body>\n            <h1>Invalid Reset Link</h1>\n            <p>The password reset link is invalid or has expired.</p>\n            <a href=\"/auth/login\">Go to Login</a>\n          </body>\n        </html>\n      `)\n    }\n\n    const db = c.env.DB\n    \n    // Check if reset token is valid and not expired\n    const userStmt = db.prepare(`\n      SELECT id, email, first_name, last_name, password_reset_expires\n      FROM users \n      WHERE password_reset_token = ? AND is_active = 1\n    `)\n    const user = await userStmt.bind(token).first() as any\n\n    if (!user) {\n      return c.html(`\n        <html>\n          <head><title>Invalid Reset Link</title></head>\n          <body>\n            <h1>Invalid Reset Link</h1>\n            <p>The password reset link is invalid or has already been used.</p>\n            <a href=\"/auth/login\">Go to Login</a>\n          </body>\n        </html>\n      `)\n    }\n\n    // Check if token is expired\n    if (Date.now() > user.password_reset_expires) {\n      return c.html(`\n        <html>\n          <head><title>Reset Link Expired</title></head>\n          <body>\n            <h1>Reset Link Expired</h1>\n            <p>The password reset link has expired. Please request a new one.</p>\n            <a href=\"/auth/login\">Go to Login</a>\n          </body>\n        </html>\n      `)\n    }\n\n    // Show password reset form\n    return c.html(`\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Reset Password - SonicJS AI</title>\n        <script src=\"https://cdn.tailwindcss.com\"></script>\n        <style>\n          body {\n            background: linear-gradient(135deg, #1e293b 0%, #0f172a 100%);\n            min-height: 100vh;\n          }\n        </style>\n      </head>\n      <body class=\"bg-gray-900 text-white\">\n        <div class=\"min-h-screen flex items-center justify-center px-4\">\n          <div class=\"max-w-md w-full space-y-8\">\n            <div class=\"text-center\">\n              <div class=\"mx-auto w-16 h-16 bg-blue-600 rounded-2xl flex items-center justify-center mb-6\">\n                <svg class=\"w-8 h-8 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 7a2 2 0 012 2m4 0a6 6 0 01-7.743 5.743L11 17H9v2H7v2H4a1 1 0 01-1-1v-3.586l4.293-4.293A6 6 0 0119 9z\"/>\n                </svg>\n              </div>\n              <h2 class=\"text-3xl font-bold\">Reset Password</h2>\n              <p class=\"mt-2 text-gray-400\">Choose a new password for your account</p>\n              <p class=\"mt-4 text-sm\">\n                Reset password for <strong>${user.first_name} ${user.last_name}</strong><br>\n                <span class=\"text-gray-400\">${user.email}</span>\n              </p>\n            </div>\n\n            <form method=\"POST\" action=\"/auth/reset-password\" class=\"mt-8 space-y-6\">\n              <input type=\"hidden\" name=\"token\" value=\"${token}\" />\n              \n              <div>\n                <label class=\"block text-sm font-medium text-gray-300 mb-2\">New Password</label>\n                <input \n                  type=\"password\" \n                  name=\"password\" \n                  required\n                  minlength=\"8\"\n                  class=\"w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-xl text-white focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-500 transition-all\"\n                  placeholder=\"Enter your new password\"\n                >\n                <p class=\"text-xs text-gray-400 mt-1\">Password must be at least 8 characters long</p>\n              </div>\n\n              <div>\n                <label class=\"block text-sm font-medium text-gray-300 mb-2\">Confirm New Password</label>\n                <input \n                  type=\"password\" \n                  name=\"confirm_password\" \n                  required\n                  minlength=\"8\"\n                  class=\"w-full px-4 py-3 bg-gray-800 border border-gray-700 rounded-xl text-white focus:outline-none focus:border-blue-500 focus:ring-2 focus:ring-blue-500 transition-all\"\n                  placeholder=\"Confirm your new password\"\n                >\n              </div>\n\n              <button \n                type=\"submit\"\n                class=\"w-full py-3 px-4 bg-gradient-to-r from-blue-600 to-purple-600 text-white font-semibold rounded-xl hover:from-blue-700 hover:to-purple-700 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-2 focus:ring-offset-gray-900 transition-all\"\n              >\n                Reset Password\n              </button>\n            </form>\n\n            <div class=\"text-center\">\n              <a href=\"/auth/login\" class=\"text-sm text-blue-400 hover:text-blue-300\">\n                Back to Login\n              </a>\n            </div>\n          </div>\n        </div>\n      </body>\n      </html>\n    `)\n\n  } catch (error) {\n    console.error('Password reset page error:', error)\n    return c.html(`\n      <html>\n        <head><title>Error</title></head>\n        <body>\n          <h1>Error</h1>\n          <p>An error occurred while processing your password reset.</p>\n          <a href=\"/auth/login\">Go to Login</a>\n        </body>\n      </html>\n    `)\n  }\n})\n\n// Process password reset\nauthRoutes.post('/reset-password', async (c) => {\n  try {\n    const formData = await c.req.formData()\n    const token = formData.get('token')?.toString()\n    const password = formData.get('password')?.toString()\n    const confirmPassword = formData.get('confirm_password')?.toString()\n\n    if (!token || !password || !confirmPassword) {\n      return c.json({ error: 'All fields are required' }, 400)\n    }\n\n    if (password !== confirmPassword) {\n      return c.json({ error: 'Passwords do not match' }, 400)\n    }\n\n    if (password.length < 8) {\n      return c.json({ error: 'Password must be at least 8 characters long' }, 400)\n    }\n\n    const db = c.env.DB\n\n    // Check if reset token is valid and not expired\n    const userStmt = db.prepare(`\n      SELECT id, email, password_hash, password_reset_expires\n      FROM users\n      WHERE password_reset_token = ? AND is_active = 1\n    `)\n    const user = await userStmt.bind(token).first() as any\n\n    if (!user) {\n      return c.json({ error: 'Invalid or expired reset token' }, 400)\n    }\n\n    // Check if token is expired\n    if (Date.now() > user.password_reset_expires) {\n      return c.json({ error: 'Reset token has expired' }, 400)\n    }\n\n    // Hash new password\n    const newPasswordHash = await AuthManager.hashPassword(password)\n\n    // Store old password in history (skip if table doesn't exist)\n    try {\n      const historyStmt = db.prepare(`\n        INSERT INTO password_history (id, user_id, password_hash, created_at)\n        VALUES (?, ?, ?, ?)\n      `)\n      await historyStmt.bind(\n        crypto.randomUUID(),\n        user.id,\n        user.password_hash,\n        Date.now()\n      ).run()\n    } catch (historyError) {\n      // Password history table may not exist yet\n      console.warn('Could not store password history:', historyError)\n    }\n\n    // Update user password and clear reset token\n    const updateStmt = db.prepare(`\n      UPDATE users SET\n        password_hash = ?,\n        password_reset_token = NULL,\n        password_reset_expires = NULL,\n        updated_at = ?\n      WHERE id = ?\n    `)\n\n    await updateStmt.bind(\n      newPasswordHash,\n      Date.now(),\n      user.id\n    ).run()\n\n    // Log the activity (TODO: implement activity logging)\n    // Activity logging is deferred until utils/log-activity is implemented\n\n    // Redirect to login with success message\n    return c.redirect('/auth/login?message=Password reset successfully. Please log in with your new password.')\n\n  } catch (error) {\n    console.error('Password reset error:', error)\n    return c.json({ error: 'Failed to reset password' }, 500)\n  }\n})\n\nexport default authRoutes","export interface LogoData {\n  size?: 'sm' | 'md' | 'lg' | 'xl'\n  variant?: 'default' | 'white' | 'dark'\n  showText?: boolean\n  showVersion?: boolean\n  version?: string\n  className?: string\n  href?: string // Optional link URL\n}\n\nconst sizeClasses = {\n  sm: 'h-6 w-auto',\n  md: 'h-8 w-auto',\n  lg: 'h-12 w-auto',\n  xl: 'h-16 w-auto'\n}\n\n\nexport function renderLogo(data: LogoData = {}): string {\n  const {\n    size = 'md',\n    variant = 'default',\n    showText = true,\n    showVersion = true,\n    version = 'v0.1.0',\n    className = '',\n    href\n  } = data\n\n  const sizeClass = sizeClasses[size]\n\n  // Official SonicJS logo SVG from sonicjs.com\n  const logoSvg = `\n    <svg class=\"${sizeClass} ${className}\" viewBox=\"380 1300 2250 400\" aria-hidden=\"true\">\n      <path fill=\"${variant === 'white' ? '#ffffff' : variant === 'dark' ? '#1f2937' : '#F1F2F2'}\" d=\"M476.851,1404.673h168.536c4.714,0,8.695-1.618,11.944-4.866c3.241-3.241,4.866-7.222,4.866-11.943    c0-2.357-0.443-4.569-1.327-6.636c-0.885-2.06-2.067-3.829-3.539-5.308c-1.479-1.472-3.249-2.654-5.308-3.538    c-2.067-0.885-4.279-1.327-6.635-1.327H476.851c-20.057,0-37.158,7.154-51.313,21.454c-14.155,14.308-21.233,31.483-21.233,51.534    c0,20.058,7.078,37.234,21.233,51.534c14.155,14.308,31.255,21.454,51.313,21.454h112.357c10.907,0,20.196,3.837,27.868,11.502    c7.666,7.672,11.502,16.885,11.502,27.646c0,10.769-3.836,19.982-11.502,27.647c-7.672,7.673-16.961,11.502-27.868,11.502H421.115    c-4.721,0-8.702,1.624-11.944,4.865c-3.248,3.249-4.866,7.23-4.866,11.944c0,3.248,0.733,6.123,2.212,8.626    c1.472,2.509,3.462,4.499,5.971,5.972c2.502,1.472,5.378,2.212,8.626,2.212h168.094c20.052,0,37.227-7.078,51.534-21.234    c14.3-14.155,21.454-31.331,21.454-51.534c0-20.196-7.154-37.379-21.454-51.534c-14.308-14.156-31.483-21.234-51.534-21.234    H476.851c-10.616,0-19.76-3.905-27.426-11.721c-7.672-7.811-11.501-17.101-11.501-27.87c0-10.761,3.829-19.975,11.501-27.647    C457.091,1408.508,466.235,1404.673,476.851,1404.673z\"></path>\n      <path fill=\"${variant === 'white' ? '#ffffff' : variant === 'dark' ? '#1f2937' : '#F1F2F2'}\" d=\"M974.78,1398.211c-5.016,6.574-10.034,13.146-15.048,19.721c-1.828,2.398-3.657,4.796-5.487,7.194    c1.994,1.719,3.958,3.51,5.873,5.424c18.724,18.731,28.089,41.216,28.089,67.459c0,26.251-9.366,48.658-28.089,67.237    c-18.731,18.579-41.215,27.868-67.459,27.868c-9.848,0-19.156-1.308-27.923-3.923l-4.185,3.354    c-8.587,6.885-17.154,13.796-25.725,20.702c17.52,8.967,36.86,13.487,58.054,13.487c35.533,0,65.91-12.608,91.124-37.821    c25.214-25.215,37.821-55.584,37.821-91.125c0-35.534-12.607-65.911-37.821-91.126    C981.004,1403.663,977.926,1400.854,974.78,1398.211z\"></path>\n      <path fill=\"${variant === 'white' ? '#ffffff' : variant === 'dark' ? '#1f2937' : '#F1F2F2'}\" d=\"M1364.644,1439.619c-4.72,0-8.702,1.624-11.943,4.865c-3.249,3.249-4.866,7.23-4.866,11.944v138.014    l-167.651-211.003c-0.297-0.586-0.74-1.03-1.327-1.326c-4.721-4.714-10.249-7.742-16.588-9.069    c-6.346-1.326-12.608-0.732-18.801,1.77c-6.192,2.509-11.059,6.49-14.598,11.944c-3.539,5.46-5.308,11.577-5.308,18.357v208.348    c0,4.721,1.618,8.703,4.866,11.944c3.241,3.241,7.222,4.865,11.943,4.865c2.945,0,5.751-0.738,8.405-2.211    c2.654-1.472,4.713-3.463,6.193-5.971c1.473-2.503,2.212-5.378,2.212-8.627v-205.251l166.325,209.675    c2.06,2.654,4.423,4.865,7.078,6.635c5.308,3.829,11.349,5.75,18.137,5.75c5.308,0,10.464-1.182,15.482-3.538    c3.539-1.769,6.56-4.127,9.069-7.078c2.502-2.945,4.491-6.338,5.971-10.175c1.473-3.829,2.212-7.664,2.212-11.501v-141.552    c0-4.714-1.624-8.695-4.865-11.944C1373.339,1441.243,1369.359,1439.619,1364.644,1439.619z\"></path>\n      <path fill=\"${variant === 'white' ? '#ffffff' : variant === 'dark' ? '#1f2937' : '#F1F2F2'}\" d=\"M1508.406,1432.983c-2.654-1.472-5.46-2.212-8.404-2.212c-4.721,0-8.703,1.7-11.944,5.087    c-3.249,3.395-4.865,7.3-4.865,11.723v163.228c0,4.721,1.616,8.702,4.865,11.943c3.241,3.249,7.223,4.866,11.944,4.866    c2.944,0,5.751-0.732,8.404-2.212c2.655-1.472,4.714-3.539,6.193-6.194c1.473-2.654,2.213-5.453,2.213-8.404V1447.58    c0-2.945-0.74-5.75-2.213-8.405C1513.12,1436.522,1511.06,1434.462,1508.406,1432.983z\"></path>\n      <path fill=\"${variant === 'white' ? '#ffffff' : variant === 'dark' ? '#1f2937' : '#F1F2F2'}\" d=\"M1499.78,1367.957c-4.575,0-8.481,1.625-11.722,4.866c-3.249,3.249-4.865,7.23-4.865,11.943    c0,2.951,0.732,5.75,2.212,8.405c1.472,2.654,3.463,4.721,5.971,6.193c2.503,1.479,5.378,2.212,8.627,2.212    c4.423,0,8.328-1.618,11.721-4.865c3.387-3.243,5.088-7.224,5.088-11.944c0-4.713-1.701-8.694-5.088-11.943    C1508.33,1369.582,1504.349,1367.957,1499.78,1367.957z\"></path>\n      <path fill=\"${variant === 'white' ? '#ffffff' : variant === 'dark' ? '#1f2937' : '#F1F2F2'}\" d=\"M1859.627,1369.727H1747.27c-35.388,0-65.69,12.607-90.904,37.821    c-25.213,25.215-37.82,55.591-37.82,91.125c0,35.54,12.607,65.911,37.82,91.125c25.215,25.215,55.516,37.821,90.904,37.821h56.178    c4.714,0,8.695-1.618,11.944-4.866c3.241-3.241,4.865-7.222,4.865-11.943c0-4.714-1.624-8.695-4.865-11.943    c-3.249-3.243-7.23-4.866-11.944-4.866h-56.178c-26.251,0-48.659-9.359-67.237-28.09c-18.579-18.723-27.868-41.207-27.868-67.459    c0-26.243,9.29-48.659,27.868-67.237c18.579-18.579,40.987-27.868,67.237-27.868h112.357c4.714,0,8.696-1.693,11.944-5.087    c3.241-3.387,4.865-7.368,4.865-11.943c0-4.569-1.624-8.475-4.865-11.723C1868.322,1371.351,1864.341,1369.727,1859.627,1369.727z    \"></path>\n      <path fill=\"#06b6d4\" d=\"M2219.256,1371.054h-112.357c-4.423,0-8.336,1.624-11.723,4.865c-3.393,3.249-5.087,7.23-5.087,11.944    c0,4.721,1.694,8.702,5.087,11.943c3.387,3.249,7.3,4.866,11.723,4.866h95.547v95.105c0,26.251-9.365,48.659-28.088,67.237    c-18.731,18.579-41.215,27.868-67.459,27.868c-26.251,0-48.659-9.289-67.237-27.868c-18.579-18.579-27.868-40.987-27.868-67.237    c0-4.713-1.701-8.771-5.088-12.165c-3.393-3.387-7.374-5.087-11.943-5.087c-4.575,0-8.481,1.7-11.722,5.087    c-3.249,3.393-4.865,7.451-4.865,12.165c0,35.388,12.607,65.69,37.82,90.904c25.215,25.213,55.584,37.82,91.126,37.82    c35.532,0,65.91-12.607,91.125-37.82c25.214-25.215,37.82-55.516,37.82-90.904v-111.915c0-4.714-1.624-8.695-4.865-11.944    C2227.951,1372.678,2223.971,1371.054,2219.256,1371.054z\"></path>\n      <path fill=\"#06b6d4\" d=\"M2574.24,1502.875c-14.306-14.156-31.483-21.234-51.533-21.234H2410.35    c-10.617,0-19.762-3.829-27.426-11.501c-7.672-7.664-11.501-16.954-11.501-27.868c0-10.907,3.829-20.196,11.501-27.868    c7.664-7.664,16.809-11.501,27.426-11.501h112.357c4.714,0,8.695-1.617,11.944-4.866c3.241-3.241,4.865-7.222,4.865-11.943    c0-4.714-1.624-8.695-4.865-11.944c-3.249-3.241-7.23-4.865-11.944-4.865H2410.35c-20.058,0-37.158,7.154-51.313,21.454    c-14.156,14.308-21.232,31.483-21.232,51.534c0,20.058,7.077,37.234,21.232,51.534c14.156,14.308,31.255,21.454,51.313,21.454    h112.357c7.078,0,13.637,1.77,19.684,5.308c6.042,3.539,10.838,8.336,14.377,14.377c3.538,6.047,5.307,12.607,5.307,19.685    c0,10.616-3.835,19.76-11.501,27.425c-7.672,7.673-16.961,11.502-27.868,11.502h-168.094c-4.721,0-8.703,1.7-11.944,5.087    c-3.249,3.393-4.865,7.374-4.865,11.943c0,4.576,1.616,8.481,4.865,11.723c3.241,3.249,7.223,4.866,11.944,4.866h168.094    c20.051,0,37.227-7.078,51.533-21.234c14.302-14.155,21.454-31.331,21.454-51.534    C2595.695,1534.213,2588.542,1517.03,2574.24,1502.875z\"></path>\n      <path fill=\"#06b6d4\" d=\"M854.024,1585.195l20.001-16.028c16.616-13.507,33.04-27.265,50.086-40.251    c1.13-0.861,2.9-1.686,2.003-3.516c-0.843-1.716-2.481-2.302-4.484-2.123c-8.514,0.765-17.016-0.538-25.537-0.353    c-1.124,0.024-2.768,0.221-3.163-1.25c-0.371-1.369,1.088-2.063,1.919-2.894c6.26-6.242,12.574-12.43,18.816-18.691    c9.303-9.327,18.565-18.714,27.851-28.066c1.848-1.859,3.701-3.713,5.549-5.572c2.655-2.661,5.309-5.315,7.958-7.982    c0.574-0.579,1.259-1.141,1.246-1.94c-0.004-0.257-0.078-0.538-0.254-0.853c-0.556-0.981-1.441-1.1-2.469-0.957    c-0.658,0.096-1.315,0.185-1.973,0.275c-3.844,0.538-7.689,1.076-11.533,1.608c-3.641,0.505-7.281,1.02-10.922,1.529    c-4.162,0.582-8.324,1.158-12.486,1.748c-1.142,0.161-2.409,1.662-3.354,0.508c-0.419-0.508-0.431-1.028-0.251-1.531    c0.269-0.741,0.957-1.441,1.387-2.021c3.414-4.58,6.882-9.124,10.356-13.662c1.74-2.272,3.48-4.544,5.214-6.822    c4.682-6.141,9.369-12.281,14.051-18.422c0.09-0.119,0.181-0.237,0.271-0.355c6.848-8.98,13.7-17.958,20.553-26.936    c0.488-0.64,0.977-1.28,1.465-1.92c2.159-2.828,4.315-5.658,6.476-8.486c4.197-5.501,8.454-10.954,12.67-16.442    c0.263-0.347,0.538-0.718,0.717-1.106c0.269-0.586,0.299-1.196-0.335-1.776c-0.825-0.753-1.8-0.15-2.595,0.419    c-0.67,0.472-1.333,0.957-1.955,1.489c-2.206,1.889-4.401,3.797-6.595,5.698c-3.958,3.438-7.922,6.876-11.976,10.194    c-2.443,2.003-4.865,4.028-7.301,6.038c-18.689-10.581-39.53-15.906-62.549-15.906c-35.54,0-65.911,12.607-91.125,37.82    c-25.214,25.215-37.821,55.592-37.821,91.126c0,35.54,12.607,65.91,37.821,91.125c4.146,4.146,8.445,7.916,12.87,11.381    c-9.015,11.14-18.036,22.277-27.034,33.429c-1.208,1.489-3.755,3.151-2.745,4.891c0.078,0.144,0.173,0.281,0.305,0.425    c1.321,1.429,3.492-1.303,4.933-2.457c6.673-5.333,13.333-10.685,19.982-16.042c3.707-2.984,7.417-5.965,11.124-8.952    c1.474-1.188,2.951-2.373,4.425-3.561c6.41-5.164,12.816-10.333,19.238-15.481L854.024,1585.195z M797.552,1498.009    c0-26.243,9.29-48.728,27.868-67.459c18.579-18.723,40.987-28.089,67.238-28.089c12.273,0,23.712,2.075,34.34,6.171    c-3.37,2.905-6.734,5.816-10.069,8.762c-6.075,5.351-12.365,10.469-18.667,15.564c-4.179,3.378-8.371,6.744-12.514,10.164    c-7.54,6.23-15.037,12.52-22.529,18.804c-7.091,5.955-14.182,11.904-21.19,17.949c-1.136,0.974-3.055,1.907-2.135,3.94    c0.831,1.836,2.774,1.417,4.341,1.578l12.145-0.599l14.151-0.698c1.031-0.102,2.192-0.257,2.89,0.632    c0.034,0.044,0.073,0.078,0.106,0.127c1.017,1.561-0.67,2.105-1.387,2.942c-6.308,7.318-12.616,14.637-18.978,21.907    c-8.161,9.339-16.353,18.649-24.544,27.958c-2.146,2.433-4.275,4.879-6.422,7.312c-1.034,1.172-2.129,2.272-1.238,3.922    c0.933,1.728,2.685,1.752,4.323,1.602c4.134-0.367,8.263-0.489,12.396-0.492c0.242,0,0.485-0.005,0.728-0.004    c2.711,0.009,5.422,0.068,8.134,0.145c2.582,0.074,5.166,0.165,7.752,0.249c0.275,1.62-0.879,2.356-1.62,3.259    c-1.333,1.626-2.667,3.247-4,4.867c-4.315,5.252-8.62,10.514-12.928,15.772c-3.562-2.725-7.007-5.733-10.324-9.051    C806.842,1546.667,797.552,1524.26,797.552,1498.009z\"></path>\n    </svg>\n  `\n\n  const versionBadge = showVersion ? `\n    <span class=\"inline-flex items-center rounded-md px-2 py-0.5 text-xs font-medium ring-1 ring-inset ${\n      variant === 'white'\n        ? 'bg-white/10 text-white/80 ring-white/20'\n        : 'bg-cyan-50 text-cyan-700 ring-cyan-700/10 dark:bg-cyan-500/10 dark:text-cyan-400 dark:ring-cyan-500/20'\n    }\">\n      ${version}\n    </span>\n  ` : ''\n\n  const logoContent = showText ? `\n    <div class=\"flex items-center gap-2 ${className}\">\n      ${logoSvg}\n      ${versionBadge}\n    </div>\n  ` : logoSvg\n\n  // Wrap in link if href is provided\n  if (href) {\n    return `<a href=\"${href}\" class=\"inline-block hover:opacity-80 transition-opacity\">${logoContent}</a>`\n  }\n\n  return logoContent\n}","import { HtmlEscapedString } from \"hono/utils/html\";\nimport { renderLogo } from \"../components/logo.template\";\n\n// Catalyst Checkbox Component (HTML implementation)\nexport interface CatalystCheckboxProps {\n  id: string;\n  name: string;\n  checked?: boolean;\n  disabled?: boolean;\n  label?: string;\n  description?: string;\n  color?: 'dark/zinc' | 'dark/white' | 'white' | 'dark' | 'zinc' | 'blue' | 'green' | 'red';\n  className?: string;\n}\n\nexport function renderCatalystCheckbox(props: CatalystCheckboxProps): string {\n  const {\n    id,\n    name,\n    checked = false,\n    disabled = false,\n    label,\n    description,\n    color = 'dark/zinc',\n    className = ''\n  } = props;\n\n  const colorConfig = {\n    'dark/zinc': { bg: '#18181b', border: '#09090b', check: '#ffffff', darkBg: '#52525b' },\n    'dark/white': { bg: '#18181b', border: '#09090b', check: '#ffffff', darkBg: '#ffffff', darkCheck: '#18181b' },\n    'white': { bg: '#ffffff', border: '#09090b', check: '#18181b' },\n    'dark': { bg: '#18181b', border: '#09090b', check: '#ffffff' },\n    'zinc': { bg: '#52525b', border: '#3f3f46', check: '#ffffff' },\n    'blue': { bg: '#2563eb', border: '#1d4ed8', check: '#ffffff' },\n    'green': { bg: '#16a34a', border: '#15803d', check: '#ffffff' },\n    'red': { bg: '#dc2626', border: '#b91c1c', check: '#ffffff' }\n  };\n\n  const config = colorConfig[color] || colorConfig['dark/zinc'];\n\n  const colorClasses = {\n    'dark/zinc': 'peer-checked:bg-zinc-900 peer-checked:before:bg-zinc-900 dark:peer-checked:bg-zinc-600',\n    'dark/white': 'peer-checked:bg-zinc-900 peer-checked:before:bg-zinc-900 dark:peer-checked:bg-white',\n    'white': 'peer-checked:bg-white peer-checked:before:bg-white',\n    'dark': 'peer-checked:bg-zinc-900 peer-checked:before:bg-zinc-900',\n    'zinc': 'peer-checked:bg-zinc-600 peer-checked:before:bg-zinc-600',\n    'blue': 'peer-checked:bg-blue-600 peer-checked:before:bg-blue-600',\n    'green': 'peer-checked:bg-green-600 peer-checked:before:bg-green-600',\n    'red': 'peer-checked:bg-red-600 peer-checked:before:bg-red-600'\n  };\n\n  const checkColor = color === 'dark/white' ? 'dark:text-zinc-900' : 'text-white';\n\n  const baseClasses = `\n    relative isolate flex w-4 h-4 items-center justify-center rounded-[0.3125rem]\n    before:absolute before:inset-0 before:-z-10 before:rounded-[calc(0.3125rem-1px)] before:bg-white before:shadow-sm\n    dark:before:hidden\n    dark:bg-white/5\n    border border-zinc-950/15 peer-checked:border-transparent\n    dark:border-white/15 dark:peer-checked:border-white/5\n    peer-focus:outline peer-focus:outline-2 peer-focus:outline-offset-2 peer-focus:outline-blue-500\n    peer-disabled:opacity-50\n    peer-disabled:border-zinc-950/25 peer-disabled:bg-zinc-950/5\n    dark:peer-disabled:border-white/20 dark:peer-disabled:bg-white/2.5\n  `.trim().replace(/\\s+/g, ' ');\n\n  const checkIconClasses = `\n    w-4 h-4 opacity-0 peer-checked:opacity-100 pointer-events-none\n  `.trim().replace(/\\s+/g, ' ');\n\n  if (description) {\n    // Field layout with description\n    return `\n      <div class=\"grid grid-cols-[1.125rem_1fr] gap-x-4 gap-y-1 sm:grid-cols-[1rem_1fr] ${className}\">\n        <div class=\"col-start-1 row-start-1 mt-0.75 sm:mt-1\">\n          <input\n            type=\"checkbox\"\n            id=\"${id}\"\n            name=\"${name}\"\n            ${checked ? 'checked' : ''}\n            ${disabled ? 'disabled' : ''}\n            class=\"peer sr-only\"\n          />\n          <label for=\"${id}\" class=\"inline-flex cursor-pointer\">\n            <span class=\"${baseClasses} ${colorClasses[color] || colorClasses['dark/zinc']}\">\n              <svg class=\"${checkIconClasses} ${checkColor}\" viewBox=\"0 0 14 14\" fill=\"none\" stroke=\"currentColor\">\n                <path d=\"M3 8L6 11L11 3.5\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n              </svg>\n            </span>\n          </label>\n        </div>\n        ${label ? `<label for=\"${id}\" class=\"col-start-2 row-start-1 text-sm/6 font-medium text-zinc-950 dark:text-white cursor-pointer\">${label}</label>` : ''}\n        ${description ? `<p class=\"col-start-2 row-start-2 text-sm/6 text-zinc-500 dark:text-zinc-400\">${description}</p>` : ''}\n      </div>\n    `;\n  } else {\n    // Simple checkbox with optional label\n    return `\n      <label class=\"inline-flex items-center gap-3 cursor-pointer ${className}\">\n        <input\n          type=\"checkbox\"\n          id=\"${id}\"\n          name=\"${name}\"\n          ${checked ? 'checked' : ''}\n          ${disabled ? 'disabled' : ''}\n          class=\"peer sr-only\"\n        />\n        <span class=\"${baseClasses} ${colorClasses[color] || colorClasses['dark/zinc']}\">\n          <svg class=\"${checkIconClasses} ${checkColor}\" viewBox=\"0 0 14 14\" fill=\"none\" stroke=\"currentColor\">\n            <path d=\"M3 8L6 11L11 3.5\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\"/>\n          </svg>\n        </span>\n        ${label ? `<span class=\"text-sm/6 font-medium text-zinc-950 dark:text-white\">${label}</span>` : ''}\n      </label>\n    `;\n  }\n}\n\nexport interface AdminLayoutCatalystData {\n  title: string;\n  pageTitle?: string;\n  currentPath?: string;\n  version?: string;\n  enableExperimentalFeatures?: boolean;\n  user?: {\n    name: string;\n    email: string;\n    role: string;\n  };\n  scripts?: string[];\n  styles?: string[];\n  content: string | HtmlEscapedString;\n  dynamicMenuItems?: Array<{\n    label: string;\n    path: string;\n    icon: string;\n  }>;\n}\n\nexport function renderAdminLayoutCatalyst(\n  data: AdminLayoutCatalystData\n): string {\n  return `<!DOCTYPE html>\n<html lang=\"en\" class=\"dark\">\n<head>\n  <meta charset=\"UTF-8\">\n  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n  <title>${data.title} - SonicJS AI Admin</title>\n  <link rel=\"icon\" type=\"image/x-icon\" href=\"https://demo.sonicjs.com/images/favicon.ico\">\n\n  <!-- Tailwind CSS -->\n  <script src=\"https://cdn.tailwindcss.com\"></script>\n  <script>\n    tailwind.config = {\n      darkMode: 'class',\n      theme: {\n        extend: {\n          colors: {\n            zinc: {\n              50: '#fafafa',\n              100: '#f4f4f5',\n              200: '#e4e4e7',\n              300: '#d4d4d8',\n              400: '#a1a1aa',\n              500: '#71717a',\n              600: '#52525b',\n              700: '#3f3f46',\n              800: '#27272a',\n              900: '#18181b',\n              950: '#09090b'\n            }\n          }\n        }\n      }\n    }\n  </script>\n\n  <!-- Additional Styles -->\n  <style>\n    @import url('https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700&display=swap');\n\n    * {\n      margin: 0;\n      padding: 0;\n      box-sizing: border-box;\n    }\n\n    body {\n      font-family: 'Inter', system-ui, -apple-system, sans-serif;\n      -webkit-font-smoothing: antialiased;\n      -moz-osx-font-smoothing: grayscale;\n    }\n\n    /* Custom scrollbar */\n    ::-webkit-scrollbar {\n      width: 8px;\n      height: 8px;\n    }\n\n    ::-webkit-scrollbar-track {\n      background: #27272a;\n    }\n\n    ::-webkit-scrollbar-thumb {\n      background: #52525b;\n      border-radius: 4px;\n    }\n\n    ::-webkit-scrollbar-thumb:hover {\n      background: #71717a;\n    }\n\n    /* Smooth transitions */\n    * {\n      transition-property: color, background-color, border-color, text-decoration-color, fill, stroke;\n      transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);\n      transition-duration: 150ms;\n    }\n  </style>\n\n  <!-- Scripts -->\n  <script src=\"https://unpkg.com/htmx.org@2.0.3\"></script>\n  <script src=\"https://unpkg.com/alpinejs@3.x.x/dist/cdn.min.js\" defer></script>\n  <script src=\"https://cdn.jsdelivr.net/npm/chart.js@4.4.0/dist/chart.umd.min.js\"></script>\n\n  ${\n    data.styles\n      ? data.styles\n          .map((style) => `<link rel=\"stylesheet\" href=\"${style}\">`)\n          .join(\"\\n  \")\n      : \"\"\n  }\n  ${\n    data.scripts\n      ? data.scripts\n          .map((script) => `<script src=\"${script}\"></script>`)\n          .join(\"\\n  \")\n      : \"\"\n  }\n</head>\n<body class=\"min-h-screen bg-white dark:bg-zinc-900\">\n  <div class=\"relative isolate flex min-h-svh w-full max-lg:flex-col lg:bg-zinc-100 dark:lg:bg-zinc-950\">\n    <!-- Sidebar on desktop -->\n    <div class=\"fixed inset-y-0 left-0 w-64 max-lg:hidden\">\n      ${renderCatalystSidebar(\n        data.currentPath,\n        data.user,\n        data.dynamicMenuItems,\n        false,\n        data.version,\n        data.enableExperimentalFeatures\n      )}\n    </div>\n\n    <!-- Mobile sidebar (hidden by default) -->\n    <div id=\"mobile-sidebar-overlay\" class=\"fixed inset-0 bg-black/30 lg:hidden hidden z-40\" onclick=\"closeMobileSidebar()\"></div>\n    <div id=\"mobile-sidebar\" class=\"fixed inset-y-0 left-0 w-80 transform -translate-x-full transition-transform duration-300 ease-in-out lg:hidden z-50\">\n      ${renderCatalystSidebar(\n        data.currentPath,\n        data.user,\n        data.dynamicMenuItems,\n        true,\n        data.version,\n        data.enableExperimentalFeatures\n      )}\n    </div>\n\n    <!-- Main content area -->\n    <main class=\"flex flex-1 flex-col pb-2 lg:min-w-0 lg:pr-2 lg:pl-64\">\n      <!-- Mobile header with menu toggle -->\n      <header class=\"flex items-center px-4 py-2.5 lg:hidden border-b border-zinc-950/5 dark:border-white/5\">\n        <button onclick=\"openMobileSidebar()\" class=\"relative flex items-center justify-center rounded-lg p-2 text-zinc-950 hover:bg-zinc-950/5 dark:text-white dark:hover:bg-white/5\" aria-label=\"Open navigation\">\n          <svg class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n            <path d=\"M2 6.75C2 6.33579 2.33579 6 2.75 6H17.25C17.6642 6 18 6.33579 18 6.75C18 7.16421 17.6642 7.5 17.25 7.5H2.75C2.33579 7.5 2 7.16421 2 6.75ZM2 13.25C2 12.8358 2.33579 12.5 2.75 12.5H17.25C17.6642 12.5 18 12.8358 18 13.25C18 13.6642 17.6642 14 17.25 14H2.75C2.33579 14 2 13.6642 2 13.25Z\" />\n          </svg>\n        </button>\n        <div class=\"ml-4 flex-1\">\n          ${renderLogo({ size: \"sm\", showText: true, variant: \"white\", version: data.version, href: \"/admin\" })}\n        </div>\n      </header>\n\n      <!-- Content -->\n      <div class=\"grow p-6 lg:rounded-lg lg:bg-white lg:p-10 lg:shadow-sm lg:ring-1 lg:ring-zinc-950/5 dark:lg:bg-zinc-900 dark:lg:ring-white/10\">\n        ${data.content}\n      </div>\n    </main>\n  </div>\n\n  <!-- Notification Container -->\n  <div id=\"notification-container\" class=\"fixed top-4 right-4 z-50 space-y-2\"></div>\n\n  <script>\n    // Mobile sidebar toggle\n    function openMobileSidebar() {\n      const sidebar = document.getElementById('mobile-sidebar');\n      const overlay = document.getElementById('mobile-sidebar-overlay');\n      sidebar.classList.remove('-translate-x-full');\n      overlay.classList.remove('hidden');\n    }\n\n    function closeMobileSidebar() {\n      const sidebar = document.getElementById('mobile-sidebar');\n      const overlay = document.getElementById('mobile-sidebar-overlay');\n      sidebar.classList.add('-translate-x-full');\n      overlay.classList.add('hidden');\n    }\n\n    // User dropdown toggle\n    function toggleUserDropdown() {\n      const dropdown = document.getElementById('userDropdown');\n      dropdown.classList.toggle('hidden');\n    }\n\n    // Close dropdown when clicking outside\n    document.addEventListener('click', function(event) {\n      const dropdown = document.getElementById('userDropdown');\n      const button = event.target.closest('[data-user-menu]');\n      if (!button && dropdown && !dropdown.contains(event.target)) {\n        dropdown.classList.add('hidden');\n      }\n    });\n\n    // Show notification\n    function showNotification(message, type = 'info') {\n      const container = document.getElementById('notification-container');\n      const notification = document.createElement('div');\n      const colors = {\n        success: 'bg-green-50 dark:bg-green-500/10 text-green-700 dark:text-green-400 ring-green-600/20 dark:ring-green-500/20',\n        error: 'bg-red-50 dark:bg-red-500/10 text-red-700 dark:text-red-400 ring-red-600/20 dark:ring-red-500/20',\n        warning: 'bg-amber-50 dark:bg-amber-500/10 text-amber-700 dark:text-amber-400 ring-amber-600/20 dark:ring-amber-500/20',\n        info: 'bg-blue-50 dark:bg-blue-500/10 text-blue-700 dark:text-blue-400 ring-blue-600/20 dark:ring-blue-500/20'\n      };\n\n      notification.className = \\`rounded-lg p-4 ring-1 \\${colors[type] || colors.info} max-w-sm shadow-lg\\`;\n      notification.innerHTML = \\`\n        <div class=\"flex items-center justify-between\">\n          <span class=\"text-sm\">\\${message}</span>\n          <button onclick=\"this.parentElement.parentElement.remove()\" class=\"ml-4 hover:opacity-70\">\n            <svg class=\"w-4 h-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n            </svg>\n          </button>\n        </div>\n      \\`;\n\n      container.appendChild(notification);\n\n      // Auto remove after 5 seconds\n      setTimeout(() => {\n        if (notification.parentElement) {\n          notification.remove();\n        }\n      }, 5000);\n    }\n\n    // Initialize dark mode\n    if (localStorage.getItem('darkMode') === 'false') {\n      document.documentElement.classList.remove('dark');\n    }\n  </script>\n</body>\n</html>`;\n}\n\nfunction renderCatalystSidebar(\n  currentPath: string = \"\",\n  user?: any,\n  dynamicMenuItems?: Array<{ label: string; path: string; icon: string }>,\n  isMobile: boolean = false,\n  version?: string,\n  enableExperimentalFeatures?: boolean\n): string {\n  let baseMenuItems = [\n    {\n      label: \"Dashboard\",\n      path: \"/admin\",\n      icon: `<svg class=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n        <path d=\"M3 4a1 1 0 011-1h12a1 1 0 011 1v2a1 1 0 01-1 1H4a1 1 0 01-1-1V4zM3 10a1 1 0 011-1h6a1 1 0 011 1v6a1 1 0 01-1 1H4a1 1 0 01-1-1v-6zM14 9a1 1 0 00-1 1v6a1 1 0 001 1h2a1 1 0 001-1v-6a1 1 0 00-1-1h-2z\"/>\n      </svg>`,\n    },\n    {\n      label: \"Collections\",\n      path: \"/admin/collections\",\n      icon: `<svg class=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n        <path d=\"M7 3a1 1 0 000 2h6a1 1 0 100-2H7zM4 7a1 1 0 011-1h10a1 1 0 110 2H5a1 1 0 01-1-1zM2 11a2 2 0 012-2h12a2 2 0 012 2v4a2 2 0 01-2 2H4a2 2 0 01-2-2v-4z\"/>\n      </svg>`,\n    },\n    {\n      label: \"Content\",\n      path: \"/admin/content\",\n      icon: `<svg class=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n        <path fill-rule=\"evenodd\" d=\"M4 4a2 2 0 012-2h4.586A2 2 0 0112 2.586L15.414 6A2 2 0 0116 7.414V16a2 2 0 01-2 2H6a2 2 0 01-2-2V4zm2 6a1 1 0 011-1h6a1 1 0 110 2H7a1 1 0 01-1-1zm1 3a1 1 0 100 2h6a1 1 0 100-2H7z\" clip-rule=\"evenodd\"/>\n      </svg>`,\n    },\n    {\n      label: \"Media\",\n      path: \"/admin/media\",\n      icon: `<svg class=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n        <path fill-rule=\"evenodd\" d=\"M4 3a2 2 0 00-2 2v10a2 2 0 002 2h12a2 2 0 002-2V5a2 2 0 00-2-2H4zm12 12H4l4-8 3 6 2-4 3 6z\" clip-rule=\"evenodd\"/>\n      </svg>`,\n    },\n    {\n      label: \"Users\",\n      path: \"/admin/users\",\n      icon: `<svg class=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n        <path d=\"M9 6a3 3 0 11-6 0 3 3 0 016 0zM17 6a3 3 0 11-6 0 3 3 0 016 0zM12.93 17c.046-.327.07-.66.07-1a6.97 6.97 0 00-1.5-4.33A5 5 0 0119 16v1h-6.07zM6 11a5 5 0 015 5v1H1v-1a5 5 0 015-5z\"/>\n      </svg>`,\n    },\n  ];\n\n  // Only include Plugins menu if experimental features are enabled\n  if (enableExperimentalFeatures) {\n    baseMenuItems.push({\n      label: \"Plugins\",\n      path: \"/admin/plugins\",\n      icon: `<svg class=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 11H5m14 0a2 2 0 012 2v6a2 2 0 01-2 2H5a2 2 0 01-2-2v-6a2 2 0 012-2m14 0V9a2 2 0 00-2-2M5 11V9a2 2 0 012-2m0 0V5a2 2 0 012-2h6a2 2 0 012 2v2M7 7h10\"/>\n      </svg>`,\n    });\n  }\n\n  const settingsMenuItem = {\n    label: \"Settings\",\n    path: \"/admin/settings\",\n    icon: `<svg class=\"h-5 w-5\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n      <path fill-rule=\"evenodd\" d=\"M11.49 3.17c-.38-1.56-2.6-1.56-2.98 0a1.532 1.532 0 01-2.286.948c-1.372-.836-2.942.734-2.106 2.106.54.886.061 2.042-.947 2.287-1.561.379-1.561 2.6 0 2.978a1.532 1.532 0 01.947 2.287c-.836 1.372.734 2.942 2.106 2.106a1.532 1.532 0 012.287.947c.379 1.561 2.6 1.561 2.978 0a1.533 1.533 0 012.287-.947c1.372.836 2.942-.734 2.106-2.106a1.533 1.533 0 01.947-2.287c1.561-.379 1.561-2.6 0-2.978a1.532 1.532 0 01-.947-2.287c.836-1.372-.734-2.942-2.106-2.106a1.532 1.532 0 01-2.287-.947zM10 13a3 3 0 100-6 3 3 0 000 6z\" clip-rule=\"evenodd\"/>\n    </svg>`,\n  };\n\n  // Combine base menu items with dynamic menu items\n  const allMenuItems = [...baseMenuItems];\n  if (dynamicMenuItems && dynamicMenuItems.length > 0) {\n    // Insert dynamic menu items after Users menu item\n    const usersIndex = allMenuItems.findIndex(\n      (item) => item.path === \"/admin/users\"\n    );\n    if (usersIndex !== -1) {\n      allMenuItems.splice(usersIndex + 1, 0, ...dynamicMenuItems);\n    } else {\n      // Fallback: add to end if Users not found\n      allMenuItems.push(...dynamicMenuItems);\n    }\n  }\n\n  const closeButton = isMobile\n    ? `\n    <div class=\"-mb-3 px-4 pt-3\">\n      <button onclick=\"closeMobileSidebar()\" class=\"relative flex w-full items-center gap-3 rounded-lg p-2 text-left text-base/6 font-medium text-zinc-950 hover:bg-zinc-950/5 dark:text-white dark:hover:bg-white/5 sm:text-sm/5\" aria-label=\"Close navigation\">\n        <svg class=\"h-5 w-5 shrink-0 fill-zinc-500 dark:fill-zinc-400\" viewBox=\"0 0 20 20\">\n          <path d=\"M6.28 5.22a.75.75 0 0 0-1.06 1.06L8.94 10l-3.72 3.72a.75.75 0 1 0 1.06 1.06L10 11.06l3.72 3.72a.75.75 0 1 0 1.06-1.06L11.06 10l3.72-3.72a.75.75 0 0 0-1.06-1.06L10 8.94 6.28 5.22Z\" />\n        </svg>\n        <span>Close menu</span>\n      </button>\n    </div>\n  `\n    : \"\";\n\n  return `\n    <nav class=\"flex h-full min-h-0 flex-col bg-white shadow-sm ring-1 ring-zinc-950/5 dark:bg-zinc-900 dark:ring-white/10 ${\n      isMobile ? \"rounded-lg p-2 m-2\" : \"\"\n    }\">\n      ${closeButton}\n\n      <!-- Sidebar Header -->\n      <div class=\"flex flex-col border-b border-zinc-950/5 p-4 dark:border-white/5\">\n        ${renderLogo({ size: \"md\", showText: true, variant: \"white\", version, href: \"/admin\" })}\n      </div>\n\n      <!-- Sidebar Body -->\n      <div class=\"flex flex-1 flex-col overflow-y-auto p-4\">\n        <div class=\"flex flex-col gap-0.5\">\n          ${allMenuItems\n            .map((item) => {\n              const isActive =\n                currentPath === item.path ||\n                (item.path !== \"/admin\" && currentPath?.startsWith(item.path));\n              return `\n              <span class=\"relative\">\n                ${\n                  isActive\n                    ? `\n                  <span class=\"absolute inset-y-2 -left-4 w-0.5 rounded-full bg-cyan-500 dark:bg-cyan-400\"></span>\n                `\n                    : \"\"\n                }\n                <a\n                  href=\"${item.path}\"\n                  class=\"flex w-full items-center gap-3 rounded-lg px-2 py-2.5 text-left text-sm/5 font-medium ${\n                    isActive\n                      ? \"text-zinc-950 dark:text-white\"\n                      : \"text-zinc-950 hover:bg-zinc-950/5 dark:text-white dark:hover:bg-white/5\"\n                  }\"\n                  ${isActive ? 'data-current=\"true\"' : \"\"}\n                >\n                  <span class=\"shrink-0 ${\n                    isActive\n                      ? \"fill-zinc-950 dark:fill-white\"\n                      : \"fill-zinc-500 dark:fill-zinc-400\"\n                  }\">\n                    ${item.icon}\n                  </span>\n                  <span class=\"truncate\">${item.label}</span>\n                </a>\n              </span>\n            `;\n            })\n            .join(\"\")}\n        </div>\n      </div>\n\n      <!-- Settings Menu Item (Bottom) -->\n      <div class=\"border-t border-zinc-950/5 p-4 dark:border-white/5\">\n        ${(() => {\n          const isActive =\n            currentPath === settingsMenuItem.path ||\n            currentPath?.startsWith(settingsMenuItem.path);\n          return `\n            <span class=\"relative\">\n              ${\n                isActive\n                  ? `\n                <span class=\"absolute inset-y-2 -left-4 w-0.5 rounded-full bg-cyan-500 dark:bg-cyan-400\"></span>\n              `\n                  : \"\"\n              }\n              <a\n                href=\"${settingsMenuItem.path}\"\n                class=\"flex w-full items-center gap-3 rounded-lg px-2 py-2.5 text-left text-sm/5 font-medium ${\n                  isActive\n                    ? \"text-zinc-950 dark:text-white\"\n                    : \"text-zinc-950 hover:bg-zinc-950/5 dark:text-white dark:hover:bg-white/5\"\n                }\"\n                ${isActive ? 'data-current=\"true\"' : \"\"}\n              >\n                <span class=\"shrink-0 ${\n                  isActive\n                    ? \"fill-zinc-950 dark:fill-white\"\n                    : \"fill-zinc-500 dark:fill-zinc-400\"\n                }\">\n                  ${settingsMenuItem.icon}\n                </span>\n                <span class=\"truncate\">${settingsMenuItem.label}</span>\n              </a>\n            </span>\n          `;\n        })()}\n      </div>\n\n      <!-- Sidebar Footer (User) -->\n      ${\n        user\n          ? `\n        <div class=\"flex flex-col border-t border-zinc-950/5 p-4 dark:border-white/5\">\n          <div class=\"relative\">\n            <button\n              data-user-menu\n              onclick=\"toggleUserDropdown()\"\n              class=\"flex w-full items-center gap-3 rounded-lg px-2 py-2.5 text-left text-sm/5 font-medium text-zinc-950 hover:bg-zinc-950/5 dark:text-white dark:hover:bg-white/5\"\n            >\n              <div class=\"flex h-6 w-6 shrink-0 items-center justify-center rounded-full bg-zinc-950 text-white dark:bg-white dark:text-zinc-950\">\n                <span class=\"text-xs font-semibold\">${(\n                  user.name ||\n                  user.email ||\n                  \"U\"\n                )\n                  .charAt(0)\n                  .toUpperCase()}</span>\n              </div>\n              <span class=\"flex-1 truncate\">${\n                user.name || user.email || \"User\"\n              }</span>\n              <svg class=\"h-4 w-4 shrink-0 fill-zinc-500 dark:fill-zinc-400\" viewBox=\"0 0 20 20\">\n                <path d=\"M5.22 8.22a.75.75 0 0 1 1.06 0L10 11.94l3.72-3.72a.75.75 0 1 1 1.06 1.06l-4.25 4.25a.75.75 0 0 1-1.06 0L5.22 9.28a.75.75 0 0 1 0-1.06Z\" />\n              </svg>\n            </button>\n\n            <!-- User Dropdown -->\n            <div id=\"userDropdown\" class=\"hidden absolute bottom-full mb-2 left-0 right-0 mx-2 rounded-xl bg-white shadow-lg ring-1 ring-zinc-950/10 dark:bg-zinc-800 dark:ring-white/10 z-50\">\n              <div class=\"p-2\">\n                <div class=\"px-3 py-2 border-b border-zinc-950/5 dark:border-white/5\">\n                  <p class=\"text-sm font-medium text-zinc-950 dark:text-white\">${\n                    user.name || user.email || \"User\"\n                  }</p>\n                  <p class=\"text-xs text-zinc-500 dark:text-zinc-400\">${\n                    user.email || \"\"\n                  }</p>\n                </div>\n                <a href=\"/admin/profile\" class=\"flex items-center gap-2 rounded-lg px-3 py-2 text-sm text-zinc-950 hover:bg-zinc-950/5 dark:text-white dark:hover:bg-white/5\">\n                  <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z\"/>\n                  </svg>\n                  My Profile\n                </a>\n                <a href=\"/admin/settings\" class=\"flex items-center gap-2 rounded-lg px-3 py-2 text-sm text-zinc-950 hover:bg-zinc-950/5 dark:text-white dark:hover:bg-white/5\">\n                  <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z\"/>\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"/>\n                  </svg>\n                  Settings\n                </a>\n                <a href=\"/auth/logout\" class=\"flex items-center gap-2 rounded-lg px-3 py-2 text-sm text-red-600 hover:bg-red-50 dark:text-red-400 dark:hover:bg-red-500/10\">\n                  <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1\"/>\n                  </svg>\n                  Sign Out\n                </a>\n              </div>\n            </div>\n          </div>\n        </div>\n      `\n          : \"\"\n      }\n    </nav>\n  `;\n}\n","export interface FieldDefinition {\n  id: string\n  field_name: string\n  field_type: string\n  field_label: string\n  field_options: any // JSON options\n  field_order: number\n  is_required: boolean\n  is_searchable: boolean\n}\n\nexport interface FieldRenderOptions {\n  value?: any\n  errors?: string[]\n  disabled?: boolean\n  className?: string\n}\n\nexport function renderDynamicField(field: FieldDefinition, options: FieldRenderOptions = {}): string {\n  const { value = '', errors = [], disabled = false, className = '' } = options\n  const opts = field.field_options || {}\n  const required = field.is_required ? 'required' : ''\n  const baseClasses = `w-full rounded-lg px-3 py-2 text-sm text-zinc-950 dark:text-white bg-white dark:bg-zinc-800 shadow-sm ring-1 ring-inset ring-zinc-950/10 dark:ring-white/10 placeholder:text-zinc-400 dark:placeholder:text-zinc-500 focus:outline-none focus:ring-2 focus:ring-zinc-950 dark:focus:ring-white transition-shadow ${className}`\n  const errorClasses = errors.length > 0 ? 'ring-pink-600 dark:ring-pink-500 focus:ring-pink-600 dark:focus:ring-pink-500' : ''\n\n  const fieldId = `field-${field.field_name}`\n  const fieldName = field.field_name\n  \n  let fieldHTML = ''\n  \n  switch (field.field_type) {\n    case 'text':\n      let patternHelp = ''\n      let autoSlugScript = ''\n      \n      if (opts.pattern) {\n        if (opts.pattern === '^[a-z0-9-]+$' || opts.pattern === '^[a-zA-Z0-9_-]+$') {\n          patternHelp = '<p class=\"mt-2 text-xs text-zinc-500 dark:text-zinc-400\">Use letters, numbers, underscores, and hyphens only</p>'\n\n          // Add auto-slug generation for slug fields\n          if (fieldName === 'slug') {\n            patternHelp += '<button type=\"button\" class=\"mt-1 text-xs text-cyan-600 dark:text-cyan-400 hover:text-cyan-700 dark:hover:text-cyan-300\" onclick=\"generateSlugFromTitle(\\'${fieldId}\\')\">Generate from title</button>'\n            autoSlugScript = `\n              <script>\n                function generateSlugFromTitle(slugFieldId) {\n                  const titleField = document.querySelector('input[name=\"title\"]');\n                  const slugField = document.getElementById(slugFieldId);\n                  if (titleField && slugField) {\n                    const slug = titleField.value\n                      .toLowerCase()\n                      .replace(/[^a-z0-9\\\\s_-]/g, '')\n                      .replace(/\\\\s+/g, '-')\n                      .replace(/[-_]+/g, '-')\n                      .replace(/^[-_]|[-_]$/g, '');\n                    slugField.value = slug;\n                  }\n                }\n                \n                // Auto-generate slug when title changes\n                document.addEventListener('DOMContentLoaded', function() {\n                  const titleField = document.querySelector('input[name=\"title\"]');\n                  const slugField = document.getElementById('${fieldId}');\n                  if (titleField && slugField && !slugField.value) {\n                    titleField.addEventListener('input', function() {\n                      if (!slugField.value) {\n                        generateSlugFromTitle('${fieldId}');\n                      }\n                    });\n                  }\n                });\n              </script>\n            `\n          }\n        } else {\n          patternHelp = '<p class=\"mt-2 text-xs text-zinc-500 dark:text-zinc-400\">Must match required format</p>'\n        }\n      }\n      \n      fieldHTML = `\n        <input \n          type=\"text\" \n          id=\"${fieldId}\"\n          name=\"${fieldName}\"\n          value=\"${escapeHtml(value)}\"\n          placeholder=\"${opts.placeholder || ''}\"\n          maxlength=\"${opts.maxLength || ''}\"\n          ${opts.pattern ? `data-pattern=\"${opts.pattern}\"` : ''}\n          class=\"${baseClasses} ${errorClasses}\"\n          ${required}\n          ${disabled ? 'disabled' : ''}\n        >\n        ${patternHelp}\n        ${autoSlugScript}\n        ${opts.pattern ? `\n        <script>\n          (function() {\n            const field = document.getElementById('${fieldId}');\n            const pattern = new RegExp('${opts.pattern}');\n            \n            field.addEventListener('input', function() {\n              if (this.value && !pattern.test(this.value)) {\n                if ('${opts.pattern}' === '^[a-zA-Z0-9_-]+$' || '${opts.pattern}' === '^[a-z0-9-]+$') {\n                  this.setCustomValidity('Please use only letters, numbers, underscores, and hyphens.');\n                } else {\n                  this.setCustomValidity('Please enter a valid format.');\n                }\n              } else {\n                this.setCustomValidity('');\n              }\n            });\n            \n            field.addEventListener('blur', function() {\n              this.reportValidity();\n            });\n          })();\n        </script>\n        ` : ''}\n      `\n      break\n      \n    case 'richtext':\n      fieldHTML = `\n        <div class=\"richtext-container\">\n          <textarea \n            id=\"${fieldId}\"\n            name=\"${fieldName}\"\n            class=\"${baseClasses} ${errorClasses} min-h-[${opts.height || 300}px]\"\n            ${required}\n            ${disabled ? 'disabled' : ''}\n          >${escapeHtml(value)}</textarea>\n          <script>\n            // Initialize TinyMCE for this field\n            if (typeof tinymce !== 'undefined') {\n              tinymce.init({\n                selector: '#${fieldId}',\n                skin: 'oxide-dark',\n                content_css: 'dark',\n                height: ${opts.height || 300},\n                menubar: false,\n                plugins: [\n                  'advlist', 'autolink', 'lists', 'link', 'image', 'charmap', 'preview',\n                  'anchor', 'searchreplace', 'visualblocks', 'code', 'fullscreen',\n                  'insertdatetime', 'media', 'table', 'help', 'wordcount'\n                ],\n                toolbar: '${opts.toolbar === 'simple' ? 'bold italic underline | bullist numlist | link' : \n                  'undo redo | blocks | bold italic backcolor | alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help'}',\n                content_style: 'body { font-family: -apple-system, BlinkMacSystemFont, San Francisco, Segoe UI, Roboto, Helvetica Neue, sans-serif; font-size: 14px; color: #fff; background-color: #1f2937; }',\n                setup: function(editor) {\n                  editor.on('change', function() {\n                    editor.save();\n                  });\n                }\n              });\n            }\n          </script>\n        </div>\n      `\n      break\n      \n    case 'number':\n      fieldHTML = `\n        <input \n          type=\"number\" \n          id=\"${fieldId}\"\n          name=\"${fieldName}\"\n          value=\"${value}\"\n          min=\"${opts.min || ''}\"\n          max=\"${opts.max || ''}\"\n          step=\"${opts.step || ''}\"\n          placeholder=\"${opts.placeholder || ''}\"\n          class=\"${baseClasses} ${errorClasses}\"\n          ${required}\n          ${disabled ? 'disabled' : ''}\n        >\n      `\n      break\n      \n    case 'boolean':\n      const checked = value === true || value === 'true' || value === '1' ? 'checked' : ''\n      fieldHTML = `\n        <div class=\"flex items-center space-x-3\">\n          <input \n            type=\"checkbox\" \n            id=\"${fieldId}\"\n            name=\"${fieldName}\"\n            value=\"true\"\n            class=\"w-5 h-5 text-blue-600 bg-white/10 border-white/20 rounded focus:ring-blue-500 focus:ring-2\"\n            ${checked}\n            ${disabled ? 'disabled' : ''}\n          >\n          <label for=\"${fieldId}\" class=\"text-sm text-gray-300\">\n            ${opts.checkboxLabel || field.field_label}\n          </label>\n        </div>\n        <input type=\"hidden\" name=\"${fieldName}_submitted\" value=\"1\">\n      `\n      break\n      \n    case 'date':\n      fieldHTML = `\n        <input \n          type=\"date\" \n          id=\"${fieldId}\"\n          name=\"${fieldName}\"\n          value=\"${value}\"\n          min=\"${opts.min || ''}\"\n          max=\"${opts.max || ''}\"\n          class=\"${baseClasses} ${errorClasses}\"\n          ${required}\n          ${disabled ? 'disabled' : ''}\n        >\n      `\n      break\n      \n    case 'select':\n      const options = opts.options || []\n      const multiple = opts.multiple ? 'multiple' : ''\n      const selectedValues = Array.isArray(value) ? value : [value]\n      \n      fieldHTML = `\n        <select \n          id=\"${fieldId}\"\n          name=\"${fieldName}${opts.multiple ? '[]' : ''}\"\n          class=\"${baseClasses} ${errorClasses}\"\n          ${multiple}\n          ${required}\n          ${disabled ? 'disabled' : ''}\n        >\n          ${!required && !opts.multiple ? '<option value=\"\">Choose an option...</option>' : ''}\n          ${options.map((option: any) => {\n            const optionValue = typeof option === 'string' ? option : option.value\n            const optionLabel = typeof option === 'string' ? option : option.label\n            const selected = selectedValues.includes(optionValue) ? 'selected' : ''\n            return `<option value=\"${escapeHtml(optionValue)}\" ${selected}>${escapeHtml(optionLabel)}</option>`\n          }).join('')}\n        </select>\n        ${opts.allowCustom ? `\n          <div class=\"mt-2\">\n            <input \n              type=\"text\" \n              placeholder=\"Add custom option...\"\n              class=\"${baseClasses.replace('border-white/10', 'border-white/5')} text-sm\"\n              onkeypress=\"if(event.key==='Enter'){addCustomOption(this, '${fieldId}');event.preventDefault();}\"\n            >\n          </div>\n        ` : ''}\n      `\n      break\n      \n    case 'media':\n      fieldHTML = `\n        <div class=\"media-field-container\">\n          <input type=\"hidden\" id=\"${fieldId}\" name=\"${fieldName}\" value=\"${value}\">\n          <div class=\"media-preview ${value ? '' : 'hidden'}\" id=\"${fieldId}-preview\">\n            ${value ? `<img src=\"${value}\" alt=\"Selected media\" class=\"w-32 h-32 object-cover rounded-lg border border-white/20\">` : ''}\n          </div>\n          <div class=\"media-actions mt-2 space-x-2\">\n            <button\n              type=\"button\"\n              onclick=\"openMediaSelector('${fieldId}')\"\n              class=\"inline-flex items-center px-4 py-2 bg-blue-600 text-white rounded-xl hover:bg-blue-700 transition-all\"\n              ${disabled ? 'disabled' : ''}\n            >\n              <svg class=\"w-4 h-4 mr-2\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z\"></path>\n              </svg>\n              Select Media\n            </button>\n            ${value ? `\n              <button\n                type=\"button\"\n                onclick=\"clearMediaField('${fieldId}')\"\n                class=\"inline-flex items-center px-4 py-2 bg-red-600 text-white rounded-xl hover:bg-red-700 transition-all\"\n                ${disabled ? 'disabled' : ''}\n              >\n                Remove\n              </button>\n            ` : ''}\n          </div>\n        </div>\n      `\n      break\n\n    case 'guid':\n      // GUID fields are read-only and auto-generated\n      const displayValue = value || '(auto-generated on save)'\n      fieldHTML = `\n        <div class=\"guid-field-container\">\n          <input\n            type=\"text\"\n            id=\"${fieldId}\"\n            name=\"${fieldName}\"\n            value=\"${escapeHtml(value)}\"\n            class=\"${baseClasses} bg-zinc-100 dark:bg-zinc-800/50 cursor-not-allowed\"\n            readonly\n            disabled\n          >\n          <div class=\"mt-2 flex items-start gap-x-2\">\n            <svg class=\"h-5 w-5 text-cyan-600 dark:text-cyan-400 flex-shrink-0\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M11.25 11.25l.041-.02a.75.75 0 011.063.852l-.708 2.836a.75.75 0 001.063.853l.041-.021M21 12a9 9 0 11-18 0 9 9 0 0118 0zm-9-3.75h.008v.008H12V8.25z\"/>\n            </svg>\n            <div class=\"text-xs text-zinc-600 dark:text-zinc-400\">\n              ${value\n                ? 'This unique identifier was automatically generated and cannot be changed.'\n                : 'A unique identifier (UUID) will be automatically generated when you save this content.'}\n            </div>\n          </div>\n        </div>\n      `\n      break\n\n    default:\n      fieldHTML = `\n        <input \n          type=\"text\" \n          id=\"${fieldId}\"\n          name=\"${fieldName}\"\n          value=\"${escapeHtml(value)}\"\n          class=\"${baseClasses} ${errorClasses}\"\n          ${required}\n          ${disabled ? 'disabled' : ''}\n        >\n      `\n  }\n  \n  return `\n    <div class=\"form-group\">\n      <label for=\"${fieldId}\" class=\"block text-sm/6 font-medium text-zinc-950 dark:text-white mb-2\">\n        ${escapeHtml(field.field_label)}\n        ${field.is_required ? '<span class=\"text-pink-600 dark:text-pink-400 ml-1\">*</span>' : ''}\n      </label>\n      ${fieldHTML}\n      ${errors.length > 0 ? `\n        <div class=\"mt-2 text-sm text-pink-600 dark:text-pink-400\">\n          ${errors.map(error => `<div>${escapeHtml(error)}</div>`).join('')}\n        </div>\n      ` : ''}\n      ${opts.helpText ? `\n        <div class=\"mt-2 text-xs text-zinc-500 dark:text-zinc-400\">\n          ${escapeHtml(opts.helpText)}\n        </div>\n      ` : ''}\n    </div>\n  `\n}\n\nexport function renderFieldGroup(title: string, fields: string[], collapsible: boolean = false): string {\n  const groupId = title.toLowerCase().replace(/\\s+/g, '-')\n\n  return `\n    <div class=\"field-group rounded-lg bg-white dark:bg-zinc-900 shadow-sm ring-1 ring-zinc-950/5 dark:ring-white/10 mb-6\">\n      <div class=\"field-group-header border-b border-zinc-950/5 dark:border-white/10 px-6 py-4 ${collapsible ? 'cursor-pointer' : ''}\" ${collapsible ? `onclick=\"toggleFieldGroup('${groupId}')\"` : ''}>\n        <h3 class=\"text-base/7 font-semibold text-zinc-950 dark:text-white flex items-center\">\n          ${escapeHtml(title)}\n          ${collapsible ? `\n            <svg id=\"${groupId}-icon\" class=\"w-5 h-5 ml-2 transform transition-transform text-zinc-500 dark:text-zinc-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 9l-7 7-7-7\"></path>\n            </svg>\n          ` : ''}\n        </h3>\n      </div>\n      <div id=\"${groupId}-content\" class=\"field-group-content px-6 py-6 space-y-6 ${collapsible ? 'collapsible' : ''}\">\n        ${fields.join('')}\n      </div>\n    </div>\n  `\n}\n\nfunction escapeHtml(text: string): string {\n  if (typeof text !== 'string') return String(text || '')\n  return text.replace(/[&<>\"']/g, (char) => ({\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  }[char] || char))\n}","export interface ConfirmationDialogOptions {\n  id: string\n  title: string\n  message: string\n  confirmText?: string\n  cancelText?: string\n  confirmClass?: string\n  iconColor?: 'red' | 'yellow' | 'blue'\n  onConfirm?: string // JavaScript code to execute on confirm\n}\n\nexport function renderConfirmationDialog(options: ConfirmationDialogOptions): string {\n  const {\n    id,\n    title,\n    message,\n    confirmText = 'Confirm',\n    cancelText = 'Cancel',\n    confirmClass = 'bg-red-500 hover:bg-red-400',\n    iconColor = 'red',\n    onConfirm = ''\n  } = options\n\n  const iconColorClasses = {\n    red: 'bg-red-500/10 text-red-400',\n    yellow: 'bg-yellow-500/10 text-yellow-400',\n    blue: 'bg-blue-500/10 text-blue-400'\n  }\n\n  return `\n    <el-dialog>\n      <dialog\n        id=\"${id}\"\n        aria-labelledby=\"${id}-title\"\n        class=\"fixed inset-0 m-0 size-auto max-h-none max-w-none overflow-y-auto bg-transparent p-0 backdrop:bg-transparent\"\n      >\n        <el-dialog-backdrop class=\"fixed inset-0 bg-gray-900/50 transition-opacity data-[closed]:opacity-0 data-[enter]:duration-300 data-[leave]:duration-200 data-[enter]:ease-out data-[leave]:ease-in\"></el-dialog-backdrop>\n\n        <div tabindex=\"0\" class=\"flex min-h-full items-end justify-center p-4 text-center focus:outline focus:outline-0 sm:items-center sm:p-0\">\n          <el-dialog-panel class=\"relative transform overflow-hidden rounded-lg bg-gray-800 px-4 pb-4 pt-5 text-left shadow-xl outline outline-1 -outline-offset-1 outline-white/10 transition-all data-[closed]:translate-y-4 data-[closed]:opacity-0 data-[enter]:duration-300 data-[leave]:duration-200 data-[enter]:ease-out data-[leave]:ease-in sm:my-8 sm:w-full sm:max-w-lg sm:p-6 data-[closed]:sm:translate-y-0 data-[closed]:sm:scale-95\">\n            <div class=\"sm:flex sm:items-start\">\n              <div class=\"mx-auto flex size-12 shrink-0 items-center justify-center rounded-full ${iconColorClasses[iconColor]} sm:mx-0 sm:size-10\">\n                <svg viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" stroke-width=\"1.5\" data-slot=\"icon\" aria-hidden=\"true\" class=\"size-6\">\n                  <path d=\"M12 9v3.75m-9.303 3.376c-.866 1.5.217 3.374 1.948 3.374h14.71c1.73 0 2.813-1.874 1.948-3.374L13.949 3.378c-.866-1.5-3.032-1.5-3.898 0L2.697 16.126ZM12 15.75h.007v.008H12v-.008Z\" stroke-linecap=\"round\" stroke-linejoin=\"round\" />\n                </svg>\n              </div>\n              <div class=\"mt-3 text-center sm:ml-4 sm:mt-0 sm:text-left\">\n                <h3 id=\"${id}-title\" class=\"text-base font-semibold text-white\">${title}</h3>\n                <div class=\"mt-2\">\n                  <p class=\"text-sm text-gray-400\">${message}</p>\n                </div>\n              </div>\n            </div>\n            <div class=\"mt-5 sm:mt-4 sm:flex sm:flex-row-reverse\">\n              <button\n                type=\"button\"\n                onclick=\"${onConfirm}; document.getElementById('${id}').close()\"\n                command=\"close\"\n                commandfor=\"${id}\"\n                class=\"confirm-button inline-flex w-full justify-center rounded-md ${confirmClass} px-3 py-2 text-sm font-semibold text-white sm:ml-3 sm:w-auto\"\n              >\n                ${confirmText}\n              </button>\n              <button\n                type=\"button\"\n                command=\"close\"\n                commandfor=\"${id}\"\n                class=\"mt-3 inline-flex w-full justify-center rounded-md bg-white/10 px-3 py-2 text-sm font-semibold text-white ring-1 ring-inset ring-white/5 hover:bg-white/20 sm:mt-0 sm:w-auto\"\n              >\n                ${cancelText}\n              </button>\n            </div>\n          </el-dialog-panel>\n        </div>\n      </dialog>\n    </el-dialog>\n  `\n}\n\n/**\n * Helper function to show a confirmation dialog programmatically\n * Usage in templates: Add this script and call showConfirmDialog()\n */\nexport function getConfirmationDialogScript(): string {\n  return `\n    <script src=\"https://cdn.jsdelivr.net/npm/@tailwindplus/elements@1\" type=\"module\"></script>\n    <script>\n      function showConfirmDialog(dialogId) {\n        const dialog = document.getElementById(dialogId);\n        if (dialog) {\n          dialog.showModal();\n        }\n      }\n    </script>\n  `\n}\n","import { renderAdminLayoutCatalyst, AdminLayoutCatalystData } from '../layouts/admin-layout-catalyst.template'\nimport { renderDynamicField, renderFieldGroup, FieldDefinition } from '../components/dynamic-field.template'\nimport { renderAlert } from '../components/alert.template'\nimport { renderConfirmationDialog, getConfirmationDialogScript } from '../components/confirmation-dialog.template'\n\nexport interface Collection {\n  id: string\n  name: string\n  display_name: string\n  description?: string\n  schema: any\n}\n\nexport interface ContentFormData {\n  id?: string\n  title?: string\n  slug?: string\n  data?: any\n  status?: string\n  scheduled_publish_at?: number\n  scheduled_unpublish_at?: number\n  review_status?: string\n  meta_title?: string\n  meta_description?: string\n  collection: Collection\n  fields: FieldDefinition[]\n  isEdit?: boolean\n  error?: string\n  success?: string\n  validationErrors?: Record<string, string[]>\n  workflowEnabled?: boolean // New flag to indicate if workflow plugin is active\n  referrerParams?: string // URL parameters to preserve filters when returning to list\n  user?: {\n    name: string\n    email: string\n    role: string\n  }\n  version?: string\n}\n\nexport function renderContentFormPage(data: ContentFormData): string {\n  const isEdit = data.isEdit || !!data.id\n  const title = isEdit ? `Edit: ${data.title || 'Content'}` : `New ${data.collection.display_name}`\n\n  // Construct back URL with preserved filters\n  const backUrl = data.referrerParams\n    ? `/admin/content?${data.referrerParams}`\n    : `/admin/content?collection=${data.collection.id}`\n\n  // Group fields by category\n  const coreFields = data.fields.filter(f => ['title', 'slug', 'content'].includes(f.field_name))\n  const contentFields = data.fields.filter(f => !['title', 'slug', 'content'].includes(f.field_name) && !f.field_name.startsWith('meta_'))\n  const metaFields = data.fields.filter(f => f.field_name.startsWith('meta_'))\n  \n  // Helper function to get field value - title and slug are stored as columns, others in data JSON\n  const getFieldValue = (fieldName: string) => {\n    if (fieldName === 'title') return data.title || data.data?.[fieldName] || ''\n    if (fieldName === 'slug') return data.slug || data.data?.[fieldName] || ''\n    return data.data?.[fieldName] || ''\n  }\n\n  // Render field groups\n  const coreFieldsHTML = coreFields\n    .sort((a, b) => a.field_order - b.field_order)\n    .map(field => renderDynamicField(field, {\n      value: getFieldValue(field.field_name),\n      errors: data.validationErrors?.[field.field_name] || []\n    }))\n  \n  const contentFieldsHTML = contentFields\n    .sort((a, b) => a.field_order - b.field_order)\n    .map(field => renderDynamicField(field, {\n      value: getFieldValue(field.field_name),\n      errors: data.validationErrors?.[field.field_name] || []\n    }))\n\n  const metaFieldsHTML = metaFields\n    .sort((a, b) => a.field_order - b.field_order)\n    .map(field => renderDynamicField(field, {\n      value: getFieldValue(field.field_name),\n      errors: data.validationErrors?.[field.field_name] || []\n    }))\n\n  const pageContent = `\n    <div class=\"space-y-6\">\n      <!-- Header -->\n      <div class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n        <div>\n          <h1 class=\"text-2xl/8 font-semibold text-zinc-950 dark:text-white sm:text-xl/8\">${isEdit ? 'Edit Content' : 'New Content'}</h1>\n          <p class=\"mt-2 text-sm/6 text-zinc-500 dark:text-zinc-400\">\n            ${data.collection.description || `Manage ${data.collection.display_name.toLowerCase()} content`}\n          </p>\n        </div>\n        <div class=\"mt-4 sm:mt-0 sm:ml-16 sm:flex-none\">\n          <a href=\"${backUrl}\" class=\"inline-flex items-center justify-center rounded-lg bg-white dark:bg-zinc-800 px-3.5 py-2.5 text-sm font-semibold text-zinc-950 dark:text-white ring-1 ring-inset ring-zinc-950/10 dark:ring-white/10 hover:bg-zinc-50 dark:hover:bg-zinc-700 transition-colors shadow-sm\">\n            <svg class=\"-ml-0.5 mr-1.5 h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M10 19l-7-7m0 0l7-7m-7 7h18\"/>\n            </svg>\n            Back to Content\n          </a>\n        </div>\n      </div>\n\n      <!-- Form Container -->\n      <div class=\"rounded-lg bg-white dark:bg-zinc-900 shadow-sm ring-1 ring-zinc-950/5 dark:ring-white/10 overflow-hidden\">\n        <!-- Form Header -->\n        <div class=\"border-b border-zinc-950/5 dark:border-white/10 px-6 py-6\">\n          <div class=\"flex items-center gap-x-3\">\n            <div class=\"flex h-12 w-12 items-center justify-center rounded-lg bg-zinc-50 dark:bg-zinc-800 ring-1 ring-zinc-950/10 dark:ring-white/10\">\n              <svg class=\"h-6 w-6 text-zinc-950 dark:text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M19.5 14.25v-2.625a3.375 3.375 0 00-3.375-3.375h-1.5A1.125 1.125 0 0113.5 7.125v-1.5a3.375 3.375 0 00-3.375-3.375H8.25m0 12.75h7.5m-7.5 3H12M10.5 2.25H5.625c-.621 0-1.125.504-1.125 1.125v17.25c0 .621.504 1.125 1.125 1.125h12.75c.621 0 1.125-.504 1.125-1.125V11.25a9 9 0 00-9-9z\"/>\n              </svg>\n            </div>\n            <div>\n              <h2 class=\"text-base/7 font-semibold text-zinc-950 dark:text-white\">${data.collection.display_name}</h2>\n              <p class=\"text-sm/6 text-zinc-500 dark:text-zinc-400\">${isEdit ? 'Update your content' : 'Create new content'}</p>\n            </div>\n          </div>\n        </div>\n\n        <!-- Form Content -->\n        <div class=\"px-6 py-6\">\n          <div id=\"form-messages\">\n            ${data.error ? renderAlert({ type: 'error', message: data.error, dismissible: true }) : ''}\n            ${data.success ? renderAlert({ type: 'success', message: data.success, dismissible: true }) : ''}\n          </div>\n\n          <div class=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n        <!-- Main Content Form -->\n        <div class=\"lg:col-span-2\">\n          <form\n            id=\"content-form\"\n            ${isEdit ? `hx-put=\"/admin/content/${data.id}\"` : `hx-post=\"/admin/content\"`}\n            hx-target=\"#form-messages\"\n            hx-encoding=\"multipart/form-data\"\n            class=\"space-y-6\"\n          >\n            <input type=\"hidden\" name=\"collection_id\" value=\"${data.collection.id}\">\n            ${isEdit ? `<input type=\"hidden\" name=\"id\" value=\"${data.id}\">` : ''}\n            ${data.referrerParams ? `<input type=\"hidden\" name=\"referrer_params\" value=\"${data.referrerParams}\">` : ''}\n            \n            <!-- Core Fields -->\n            ${renderFieldGroup('Basic Information', coreFieldsHTML)}\n            \n            <!-- Content Fields -->\n            ${contentFields.length > 0 ? renderFieldGroup('Content Details', contentFieldsHTML) : ''}\n            \n            <!-- SEO & Meta Fields -->\n            ${metaFields.length > 0 ? renderFieldGroup('SEO & Metadata', metaFieldsHTML, true) : ''}\n            \n            <div id=\"form-messages\"></div>\n          </form>\n        </div>\n\n        <!-- Sidebar -->\n        <div class=\"lg:col-span-1 space-y-6\">\n          <!-- Publishing Options -->\n          <div class=\"rounded-lg bg-zinc-50 dark:bg-zinc-800/50 shadow-sm ring-1 ring-zinc-950/5 dark:ring-white/10 p-6\">\n            <h3 class=\"text-base/7 font-semibold text-zinc-950 dark:text-white mb-4\">Publishing</h3>\n\n            ${data.workflowEnabled ? `\n              <!-- Workflow Status (when workflow plugin is enabled) -->\n              <div class=\"mb-4\">\n                <label for=\"status\" class=\"block text-sm/6 font-medium text-zinc-950 dark:text-white\">Status</label>\n                <div class=\"mt-2 grid grid-cols-1\">\n                  <select\n                    id=\"status\"\n                    name=\"status\"\n                    form=\"content-form\"\n                    class=\"col-start-1 row-start-1 w-full appearance-none rounded-md bg-white/5 dark:bg-white/5 py-1.5 pl-3 pr-8 text-base text-zinc-950 dark:text-white outline outline-1 -outline-offset-1 outline-zinc-500/30 dark:outline-zinc-400/30 *:bg-white dark:*:bg-zinc-800 focus-visible:outline focus-visible:outline-2 focus-visible:-outline-offset-2 focus-visible:outline-zinc-500 dark:focus-visible:outline-zinc-400 sm:text-sm/6\"\n                  >\n                    <option value=\"draft\" ${data.status === 'draft' ? 'selected' : ''}>Draft</option>\n                    <option value=\"review\" ${data.status === 'review' ? 'selected' : ''}>Under Review</option>\n                    <option value=\"published\" ${data.status === 'published' ? 'selected' : ''}>Published</option>\n                    <option value=\"archived\" ${data.status === 'archived' ? 'selected' : ''}>Archived</option>\n                  </select>\n                  <svg viewBox=\"0 0 16 16\" fill=\"currentColor\" data-slot=\"icon\" aria-hidden=\"true\" class=\"pointer-events-none col-start-1 row-start-1 mr-2 size-5 self-center justify-self-end text-zinc-600 dark:text-zinc-400 sm:size-4\">\n                    <path d=\"M4.22 6.22a.75.75 0 0 1 1.06 0L8 8.94l2.72-2.72a.75.75 0 1 1 1.06 1.06l-3.25 3.25a.75.75 0 0 1-1.06 0L4.22 7.28a.75.75 0 0 1 0-1.06Z\" clip-rule=\"evenodd\" fill-rule=\"evenodd\" />\n                  </svg>\n                </div>\n              </div>\n\n              <!-- Scheduled Publishing -->\n              <div class=\"mb-4\">\n                <label class=\"block text-sm font-medium text-zinc-950 dark:text-white mb-2\">Schedule Publish</label>\n                <input\n                  type=\"datetime-local\"\n                  name=\"scheduled_publish_at\"\n                  form=\"content-form\"\n                  value=\"${data.scheduled_publish_at ? new Date(data.scheduled_publish_at).toISOString().slice(0, 16) : ''}\"\n                  class=\"w-full rounded-lg bg-white dark:bg-zinc-800 px-3 py-2 text-sm text-zinc-950 dark:text-white shadow-sm ring-1 ring-inset ring-zinc-950/10 dark:ring-white/10 placeholder:text-zinc-400 dark:placeholder:text-zinc-500 focus:outline-none focus:ring-2 focus:ring-zinc-950 dark:focus:ring-white transition-shadow\"\n                >\n                <p class=\"text-xs text-zinc-500 dark:text-zinc-400 mt-1\">Leave empty to publish immediately</p>\n              </div>\n\n              <!-- Scheduled Unpublishing -->\n              <div class=\"mb-6\">\n                <label class=\"block text-sm font-medium text-zinc-950 dark:text-white mb-2\">Schedule Unpublish</label>\n                <input\n                  type=\"datetime-local\"\n                  name=\"scheduled_unpublish_at\"\n                  form=\"content-form\"\n                  value=\"${data.scheduled_unpublish_at ? new Date(data.scheduled_unpublish_at).toISOString().slice(0, 16) : ''}\"\n                  class=\"w-full rounded-lg bg-white dark:bg-zinc-800 px-3 py-2 text-sm text-zinc-950 dark:text-white shadow-sm ring-1 ring-inset ring-zinc-950/10 dark:ring-white/10 placeholder:text-zinc-400 dark:placeholder:text-zinc-500 focus:outline-none focus:ring-2 focus:ring-zinc-950 dark:focus:ring-white transition-shadow\"\n                >\n                <p class=\"text-xs text-zinc-500 dark:text-zinc-400 mt-1\">Automatically unpublish at this time</p>\n              </div>\n            ` : `\n              <!-- Simple Status (when workflow plugin is disabled) -->\n              <div class=\"mb-6\">\n                <label for=\"status\" class=\"block text-sm/6 font-medium text-zinc-950 dark:text-white\">Status</label>\n                <div class=\"mt-2 grid grid-cols-1\">\n                  <select\n                    id=\"status\"\n                    name=\"status\"\n                    form=\"content-form\"\n                    class=\"col-start-1 row-start-1 w-full appearance-none rounded-md bg-white/5 dark:bg-white/5 py-1.5 pl-3 pr-8 text-base text-zinc-950 dark:text-white outline outline-1 -outline-offset-1 outline-zinc-500/30 dark:outline-zinc-400/30 *:bg-white dark:*:bg-zinc-800 focus-visible:outline focus-visible:outline-2 focus-visible:-outline-offset-2 focus-visible:outline-zinc-500 dark:focus-visible:outline-zinc-400 sm:text-sm/6\"\n                  >\n                    <option value=\"draft\" ${data.status === 'draft' ? 'selected' : ''}>Draft</option>\n                    <option value=\"published\" ${data.status === 'published' ? 'selected' : ''}>Published</option>\n                  </select>\n                  <svg viewBox=\"0 0 16 16\" fill=\"currentColor\" data-slot=\"icon\" aria-hidden=\"true\" class=\"pointer-events-none col-start-1 row-start-1 mr-2 size-5 self-center justify-self-end text-zinc-600 dark:text-zinc-400 sm:size-4\">\n                    <path d=\"M4.22 6.22a.75.75 0 0 1 1.06 0L8 8.94l2.72-2.72a.75.75 0 1 1 1.06 1.06l-3.25 3.25a.75.75 0 0 1-1.06 0L4.22 7.28a.75.75 0 0 1 0-1.06Z\" clip-rule=\"evenodd\" fill-rule=\"evenodd\" />\n                  </svg>\n                </div>\n                <p class=\"text-xs text-zinc-500 dark:text-zinc-400 mt-1\">Enable Workflow plugin for advanced status management</p>\n              </div>\n            `}\n          </div>\n\n          <!-- Content Info -->\n          ${isEdit ? `\n            <div class=\"rounded-lg bg-zinc-50 dark:bg-zinc-800/50 shadow-sm ring-1 ring-zinc-950/5 dark:ring-white/10 p-6\">\n              <h3 class=\"text-base/7 font-semibold text-zinc-950 dark:text-white mb-4\">Content Info</h3>\n\n              <dl class=\"space-y-3 text-sm\">\n                <div>\n                  <dt class=\"text-zinc-500 dark:text-zinc-400\">Created</dt>\n                  <dd class=\"mt-1 text-zinc-950 dark:text-white\">${data.data?.created_at ? new Date(data.data.created_at).toLocaleDateString() : 'Unknown'}</dd>\n                </div>\n                <div>\n                  <dt class=\"text-zinc-500 dark:text-zinc-400\">Last Modified</dt>\n                  <dd class=\"mt-1 text-zinc-950 dark:text-white\">${data.data?.updated_at ? new Date(data.data.updated_at).toLocaleDateString() : 'Unknown'}</dd>\n                </div>\n                <div>\n                  <dt class=\"text-zinc-500 dark:text-zinc-400\">Author</dt>\n                  <dd class=\"mt-1 text-zinc-950 dark:text-white\">${data.data?.author || 'Unknown'}</dd>\n                </div>\n                ${data.data?.published_at ? `\n                  <div>\n                    <dt class=\"text-zinc-500 dark:text-zinc-400\">Published</dt>\n                    <dd class=\"mt-1 text-zinc-950 dark:text-white\">${new Date(data.data.published_at).toLocaleDateString()}</dd>\n                  </div>\n                ` : ''}\n              </dl>\n\n              <div class=\"mt-4 pt-4 border-t border-zinc-950/5 dark:border-white/10\">\n                <button\n                  type=\"button\"\n                  onclick=\"showVersionHistory('${data.id}')\"\n                  class=\"inline-flex items-center gap-x-1.5 text-sm font-medium text-zinc-950 dark:text-white hover:text-zinc-600 dark:hover:text-zinc-300 transition-colors\"\n                >\n                  <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M12 6v6h4.5m4.5 0a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n                  </svg>\n                  View Version History\n                </button>\n              </div>\n            </div>\n          ` : ''}\n\n          <!-- Quick Actions -->\n          <div class=\"rounded-lg bg-zinc-50 dark:bg-zinc-800/50 shadow-sm ring-1 ring-zinc-950/5 dark:ring-white/10 p-6\">\n            <h3 class=\"text-base/7 font-semibold text-zinc-950 dark:text-white mb-4\">Quick Actions</h3>\n\n            <div class=\"space-y-2\">\n              <button\n                type=\"button\"\n                onclick=\"previewContent()\"\n                class=\"w-full inline-flex items-center gap-x-2 px-3 py-2 text-sm font-medium text-zinc-950 dark:text-white hover:bg-zinc-100 dark:hover:bg-zinc-700 rounded-lg transition-colors\"\n              >\n                <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"></path>\n                </svg>\n                Preview Content\n              </button>\n\n              <button\n                type=\"button\"\n                onclick=\"duplicateContent()\"\n                class=\"w-full inline-flex items-center gap-x-2 px-3 py-2 text-sm font-medium text-zinc-950 dark:text-white hover:bg-zinc-100 dark:hover:bg-zinc-700 rounded-lg transition-colors\"\n              >\n                <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M8 16H6a2 2 0 01-2-2V6a2 2 0 012-2h8a2 2 0 012 2v2m-6 12h8a2 2 0 002-2v-8a2 2 0 00-2-2h-8a2 2 0 00-2 2v8a2 2 0 002 2z\"></path>\n                </svg>\n                Duplicate Content\n              </button>\n\n              ${isEdit ? `\n                <button\n                  type=\"button\"\n                  onclick=\"deleteContent('${data.id}')\"\n                  class=\"w-full inline-flex items-center gap-x-2 px-3 py-2 text-sm font-medium text-pink-700 dark:text-pink-300 hover:bg-pink-50 dark:hover:bg-pink-900/20 rounded-lg transition-colors\"\n                >\n                  <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\">\n                    <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M14.74 9l-.346 9m-4.788 0L9.26 9m9.968-3.21c.342.052.682.107 1.022.166m-1.022-.165L18.16 19.673a2.25 2.25 0 01-2.244 2.077H8.084a2.25 2.25 0 01-2.244-2.077L4.772 5.79m14.456 0a48.108 48.108 0 00-3.478-.397m-12 .562c.34-.059.68-.114 1.022-.165m0 0a48.11 48.11 0 013.478-.397m7.5 0v-.916c0-1.18-.91-2.164-2.09-2.201a51.964 51.964 0 00-3.32 0c-1.18.037-2.09 1.022-2.09 2.201v.916m7.5 0a48.667 48.667 0 00-7.5 0\"/>\n                  </svg>\n                  Delete Content\n                </button>\n              ` : ''}\n            </div>\n          </div>\n        </div>\n\n        <!-- Action Buttons -->\n        <div class=\"mt-6 pt-6 border-t border-zinc-950/5 dark:border-white/10 flex items-center justify-between\">\n          <a href=\"${backUrl}\" class=\"inline-flex items-center justify-center gap-x-1.5 rounded-lg bg-white dark:bg-zinc-800 px-3.5 py-2.5 text-sm font-semibold text-zinc-950 dark:text-white ring-1 ring-inset ring-zinc-950/10 dark:ring-white/10 hover:bg-zinc-50 dark:hover:bg-zinc-700 transition-colors shadow-sm\">\n            <svg class=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\"/>\n            </svg>\n            Cancel\n          </a>\n\n          <div class=\"flex items-center gap-x-3\">\n            <button\n              type=\"submit\"\n              form=\"content-form\"\n              name=\"action\"\n              value=\"save\"\n              class=\"inline-flex items-center justify-center gap-x-1.5 rounded-lg bg-zinc-950 dark:bg-white px-3.5 py-2.5 text-sm font-semibold text-white dark:text-zinc-950 hover:bg-zinc-800 dark:hover:bg-zinc-100 transition-colors shadow-sm\"\n            >\n              <svg class=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M5 13l4 4L19 7\"/>\n              </svg>\n              ${isEdit ? 'Update' : 'Save'}\n            </button>\n\n            ${data.user?.role !== 'viewer' ? `\n              <button\n                type=\"submit\"\n                form=\"content-form\"\n                name=\"action\"\n                value=\"save_and_publish\"\n                class=\"inline-flex items-center justify-center gap-x-1.5 rounded-lg bg-lime-600 dark:bg-lime-500 px-3.5 py-2.5 text-sm font-semibold text-white hover:bg-lime-700 dark:hover:bg-lime-600 transition-colors shadow-sm\"\n              >\n                <svg class=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" stroke-width=\"1.5\">\n                  <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M9 12.75L11.25 15 15 9.75M21 12a9 9 0 11-18 0 9 9 0 0118 0z\"/>\n                </svg>\n                ${isEdit ? 'Update' : 'Save'} & Publish\n              </button>\n            ` : ''}\n          </div>\n        </div>\n      </div>\n      </div>\n    </div>\n\n    <!-- Confirmation Dialogs -->\n    ${renderConfirmationDialog({\n      id: 'duplicate-content-confirm',\n      title: 'Duplicate Content',\n      message: 'Create a copy of this content?',\n      confirmText: 'Duplicate',\n      cancelText: 'Cancel',\n      iconColor: 'blue',\n      confirmClass: 'bg-blue-500 hover:bg-blue-400',\n      onConfirm: 'performDuplicateContent()'\n    })}\n\n    ${renderConfirmationDialog({\n      id: 'delete-content-confirm',\n      title: 'Delete Content',\n      message: 'Are you sure you want to delete this content? This action cannot be undone.',\n      confirmText: 'Delete',\n      cancelText: 'Cancel',\n      iconColor: 'red',\n      confirmClass: 'bg-red-500 hover:bg-red-400',\n      onConfirm: `performDeleteContent('${data.id}')`\n    })}\n\n    ${getConfirmationDialogScript()}\n\n    <!-- TinyMCE CDN -->\n    <script src=\"https://cdn.tiny.cloud/1/no-api-key/tinymce/6/tinymce.min.js\" referrerpolicy=\"origin\"></script>\n\n    <!-- Dynamic Field Scripts -->\n    <script>\n      // Field group toggle\n      function toggleFieldGroup(groupId) {\n        const content = document.getElementById(groupId + '-content');\n        const icon = document.getElementById(groupId + '-icon');\n        \n        if (content.classList.contains('hidden')) {\n          content.classList.remove('hidden');\n          icon.classList.remove('rotate-[-90deg]');\n        } else {\n          content.classList.add('hidden');\n          icon.classList.add('rotate-[-90deg]');\n        }\n      }\n\n      // Media field functions\n      let currentMediaFieldId = null;\n\n      function openMediaSelector(fieldId) {\n        currentMediaFieldId = fieldId;\n        // Store the original value in case user cancels\n        const originalValue = document.getElementById(fieldId)?.value || '';\n\n        // Open media library modal\n        const modal = document.createElement('div');\n        modal.className = 'fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50';\n        modal.id = 'media-selector-modal';\n        modal.innerHTML = \\`\n          <div class=\"rounded-xl bg-white dark:bg-zinc-900 shadow-xl ring-1 ring-zinc-950/5 dark:ring-white/10 p-6 w-full max-w-4xl max-h-[90vh] overflow-y-auto\">\n            <h3 class=\"text-lg font-semibold text-zinc-950 dark:text-white mb-4\">Select Media</h3>\n            <div id=\"media-grid-container\" hx-get=\"/admin/media/selector\" hx-trigger=\"load\"></div>\n            <div class=\"mt-4 flex justify-end space-x-2\">\n              <button\n                onclick=\"cancelMediaSelection('\\${fieldId}', '\\${originalValue}')\"\n                class=\"rounded-lg bg-white dark:bg-zinc-800 px-4 py-2 text-sm font-semibold text-zinc-950 dark:text-white ring-1 ring-inset ring-zinc-950/10 dark:ring-white/10 hover:bg-zinc-50 dark:hover:bg-zinc-700 transition-colors\">\n                Cancel\n              </button>\n              <button\n                onclick=\"closeMediaSelector()\"\n                class=\"rounded-lg bg-zinc-950 dark:bg-white px-4 py-2 text-sm font-semibold text-white dark:text-zinc-950 hover:bg-zinc-800 dark:hover:bg-zinc-100 transition-colors\">\n                OK\n              </button>\n            </div>\n          </div>\n        \\`;\n        document.body.appendChild(modal);\n        // Trigger HTMX for the modal content\n        if (window.htmx) {\n          htmx.process(modal);\n        }\n      }\n\n      function closeMediaSelector() {\n        const modal = document.getElementById('media-selector-modal');\n        if (modal) {\n          modal.remove();\n        }\n        currentMediaFieldId = null;\n      }\n\n      function cancelMediaSelection(fieldId, originalValue) {\n        // Restore original value\n        const hiddenInput = document.getElementById(fieldId);\n        if (hiddenInput) {\n          hiddenInput.value = originalValue;\n        }\n\n        // If original value was empty, hide the preview and show select button\n        if (!originalValue) {\n          const preview = document.getElementById(fieldId + '-preview');\n          if (preview) {\n            preview.classList.add('hidden');\n          }\n        }\n\n        // Close modal\n        closeMediaSelector();\n      }\n\n      function clearMediaField(fieldId) {\n        document.getElementById(fieldId).value = '';\n        document.getElementById(fieldId + '-preview').classList.add('hidden');\n      }\n\n      // Global function called by media selector buttons\n      window.selectMediaFile = function(mediaId, mediaUrl, filename) {\n        if (!currentMediaFieldId) {\n          console.error('No field ID set for media selection');\n          return;\n        }\n\n        const fieldId = currentMediaFieldId;\n\n        // Set the hidden input value to the media URL (not ID)\n        const hiddenInput = document.getElementById(fieldId);\n        if (hiddenInput) {\n          hiddenInput.value = mediaUrl;\n        }\n\n        // Update the preview\n        const preview = document.getElementById(fieldId + '-preview');\n        if (preview) {\n          preview.innerHTML = \\`<img src=\"\\${mediaUrl}\" alt=\"\\${filename}\" class=\"w-32 h-32 object-cover rounded-lg border border-white/20\">\\`;\n          preview.classList.remove('hidden');\n        }\n\n        // Show the remove button by finding the media actions container and updating it\n        const mediaField = hiddenInput?.closest('.media-field-container');\n        if (mediaField) {\n          const actionsDiv = mediaField.querySelector('.media-actions');\n          if (actionsDiv && !actionsDiv.querySelector('button:has-text(\"Remove\")')) {\n            const removeBtn = document.createElement('button');\n            removeBtn.type = 'button';\n            removeBtn.onclick = () => clearMediaField(fieldId);\n            removeBtn.className = 'inline-flex items-center px-4 py-2 bg-red-600 text-white rounded-xl hover:bg-red-700 transition-all';\n            removeBtn.textContent = 'Remove';\n            actionsDiv.appendChild(removeBtn);\n          }\n        }\n\n        // DON'T close the modal - let user click OK button\n        // Visual feedback: highlight the selected item\n        document.querySelectorAll('#media-selector-grid [data-media-id]').forEach(el => {\n          el.classList.remove('ring-2', 'ring-lime-500', 'dark:ring-lime-400');\n        });\n        const selectedItem = document.querySelector(\\`#media-selector-grid [data-media-id=\"\\${mediaId}\"]\\`);\n        if (selectedItem) {\n          selectedItem.classList.add('ring-2', 'ring-lime-500', 'dark:ring-lime-400');\n        }\n      };\n\n      function setMediaField(fieldId, mediaUrl) {\n        document.getElementById(fieldId).value = mediaUrl;\n        const preview = document.getElementById(fieldId + '-preview');\n        preview.innerHTML = \\`<img src=\"\\${mediaUrl}\" alt=\"Selected media\" class=\"w-32 h-32 object-cover rounded-lg ring-1 ring-zinc-950/10 dark:ring-white/10\">\\`;\n        preview.classList.remove('hidden');\n\n        // Close modal\n        document.querySelector('.fixed.inset-0')?.remove();\n      }\n\n      // Custom select options\n      function addCustomOption(input, selectId) {\n        const value = input.value.trim();\n        if (value) {\n          const select = document.getElementById(selectId);\n          const option = document.createElement('option');\n          option.value = value;\n          option.text = value;\n          option.selected = true;\n          select.appendChild(option);\n          input.value = '';\n        }\n      }\n\n      // Quick actions\n      function previewContent() {\n        const form = document.getElementById('content-form');\n        const formData = new FormData(form);\n        \n        // Open preview in new window\n        const preview = window.open('', '_blank');\n        preview.document.write('<p>Loading preview...</p>');\n        \n        fetch('/admin/content/preview', {\n          method: 'POST',\n          body: formData\n        })\n        .then(response => response.text())\n        .then(html => {\n          preview.document.open();\n          preview.document.write(html);\n          preview.document.close();\n        })\n        .catch(error => {\n          preview.document.write('<p>Error loading preview</p>');\n        });\n      }\n\n      function duplicateContent() {\n        showConfirmDialog('duplicate-content-confirm');\n      }\n\n      function performDuplicateContent() {\n        const form = document.getElementById('content-form');\n        const formData = new FormData(form);\n        formData.append('action', 'duplicate');\n\n        fetch('/admin/content/duplicate', {\n          method: 'POST',\n          body: formData\n        })\n        .then(response => response.json())\n        .then(data => {\n          if (data.success) {\n            window.location.href = \\`/admin/content/\\${data.id}/edit\\`;\n          } else {\n            alert('Error duplicating content');\n          }\n        });\n      }\n\n      function deleteContent(contentId) {\n        showConfirmDialog('delete-content-confirm');\n      }\n\n      function performDeleteContent(contentId) {\n        fetch(\\`/admin/content/\\${contentId}\\`, {\n          method: 'DELETE'\n        })\n        .then(response => {\n          if (response.ok) {\n            window.location.href = '/admin/content';\n          } else {\n            alert('Error deleting content');\n          }\n        });\n      }\n\n      function showVersionHistory(contentId) {\n        // Create and show version history modal\n        const modal = document.createElement('div');\n        modal.className = 'fixed inset-0 bg-black/50 backdrop-blur-sm flex items-center justify-center z-50';\n        modal.innerHTML = \\`\n          <div id=\"version-history-content\">\n            <div class=\"flex items-center justify-center h-32\">\n              <div class=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-600 dark:border-blue-400\"></div>\n            </div>\n          </div>\n        \\`;\n        document.body.appendChild(modal);\n\n        // Load version history\n        fetch(\\`/admin/content/\\${contentId}/versions\\`)\n        .then(response => response.text())\n        .then(html => {\n          document.getElementById('version-history-content').innerHTML = html;\n        })\n        .catch(error => {\n          console.error('Error loading version history:', error);\n          document.getElementById('version-history-content').innerHTML = '<p class=\"text-zinc-950 dark:text-white\">Error loading version history</p>';\n        });\n      }\n\n      // Auto-save functionality\n      let autoSaveTimeout;\n      function scheduleAutoSave() {\n        clearTimeout(autoSaveTimeout);\n        autoSaveTimeout = setTimeout(() => {\n          const form = document.getElementById('content-form');\n          const formData = new FormData(form);\n          formData.append('action', 'autosave');\n          \n          fetch(form.action, {\n            method: 'POST',\n            body: formData\n          })\n          .then(response => {\n            if (response.ok) {\n              console.log('Auto-saved');\n            }\n          })\n          .catch(error => console.error('Auto-save failed:', error));\n        }, 30000); // Auto-save every 30 seconds\n      }\n\n      // Bind auto-save to form changes\n      document.addEventListener('DOMContentLoaded', function() {\n        const form = document.getElementById('content-form');\n        form.addEventListener('input', scheduleAutoSave);\n        form.addEventListener('change', scheduleAutoSave);\n      });\n    </script>\n  `\n\n  const layoutData: AdminLayoutCatalystData = {\n    title: title,\n    pageTitle: 'Content Management',\n    currentPath: '/admin/content',\n    user: data.user,\n    content: pageContent,\n    version: data.version\n  }\n\n  return renderAdminLayoutCatalyst(layoutData)\n}","export interface TableColumn {\n  key: string\n  label: string\n  sortable?: boolean\n  className?: string\n  sortType?: 'string' | 'number' | 'date' | 'boolean'\n  render?: (value: any, row: any) => string\n}\n\nexport interface TableData<T = any> {\n  columns: TableColumn[]\n  rows: T[]\n  selectable?: boolean\n  className?: string\n  emptyMessage?: string\n  tableId?: string\n  title?: string\n  rowClickable?: boolean\n  rowClickUrl?: (row: T) => string\n}\n\nexport function renderTable<T = any>(data: TableData<T>): string {\n  const tableId = data.tableId || `table-${Math.random().toString(36).substr(2, 9)}`\n\n  if (data.rows.length === 0) {\n    return `\n      <div class=\"rounded-xl bg-white dark:bg-zinc-900 shadow-sm ring-1 ring-zinc-950/5 dark:ring-white/10 p-8 text-center\">\n        <div class=\"text-zinc-500 dark:text-zinc-400\">\n          <svg class=\"mx-auto h-12 w-12 text-zinc-400 dark:text-zinc-500\" fill=\"none\" viewBox=\"0 0 24 24\" stroke=\"currentColor\">\n            <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M9 12h6m-6 4h6m2 5H7a2 2 0 01-2-2V5a2 2 0 012-2h5.586a1 1 0 01.707.293l5.414 5.414a1 1 0 01.293.707V19a2 2 0 01-2 2z\" />\n          </svg>\n          <p class=\"mt-2 text-sm text-zinc-500 dark:text-zinc-400\">${data.emptyMessage || 'No data available'}</p>\n        </div>\n      </div>\n    `\n  }\n\n  return `\n    <div class=\"${data.className || ''}\" id=\"${tableId}\">\n      ${data.title ? `\n        <div class=\"px-4 sm:px-0 mb-4\">\n          <h3 class=\"text-base font-semibold text-zinc-950 dark:text-white\">${data.title}</h3>\n        </div>\n      ` : ''}\n      <div class=\"overflow-x-auto\">\n        <table class=\"min-w-full sortable-table\">\n          <thead>\n            <tr>\n              ${data.selectable ? `\n                <th class=\"px-4 py-3.5 text-center sm:pl-0\">\n                  <div class=\"flex items-center justify-center\">\n                    <div class=\"group grid size-4 grid-cols-1\">\n                      <input type=\"checkbox\" id=\"select-all-${tableId}\" class=\"col-start-1 row-start-1 appearance-none rounded border border-white/10 bg-white/5 checked:border-cyan-500 checked:bg-cyan-500 indeterminate:border-cyan-500 indeterminate:bg-cyan-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-cyan-500 disabled:border-white/5 disabled:bg-white/10 disabled:checked:bg-white/10 forced-colors:appearance-auto row-checkbox\" />\n                      <svg viewBox=\"0 0 14 14\" fill=\"none\" class=\"pointer-events-none col-start-1 row-start-1 size-3.5 self-center justify-self-center stroke-white group-has-[:disabled]:stroke-white/25\">\n                        <path d=\"M3 8L6 11L11 3.5\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"opacity-0 group-has-[:checked]:opacity-100\" />\n                        <path d=\"M3 7H11\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"opacity-0 group-has-[:indeterminate]:opacity-100\" />\n                      </svg>\n                    </div>\n                  </div>\n                </th>\n              ` : ''}\n              ${data.columns.map((column, index) => {\n                const isFirst = index === 0 && !data.selectable\n                const isLast = index === data.columns.length - 1\n                return `\n                <th class=\"px-4 py-3.5 text-left text-sm font-semibold text-zinc-950 dark:text-white ${isFirst ? 'sm:pl-0' : ''} ${isLast ? 'sm:pr-0' : ''} ${column.className || ''}\">\n                  ${column.sortable ? `\n                    <button\n                      class=\"flex items-center gap-x-2 hover:text-zinc-700 dark:hover:text-zinc-300 transition-colors sort-btn text-left\"\n                      data-column=\"${column.key}\"\n                      data-sort-type=\"${column.sortType || 'string'}\"\n                      data-sort-direction=\"none\"\n                      onclick=\"sortTable('${tableId}', '${column.key}', '${column.sortType || 'string'}')\"\n                    >\n                      <span>${column.label}</span>\n                      <div class=\"sort-icons flex flex-col\">\n                        <svg class=\"w-3 h-3 sort-up opacity-30\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fill-rule=\"evenodd\" d=\"M14.707 12.707a1 1 0 01-1.414 0L10 9.414l-3.293 3.293a1 1 0 01-1.414-1.414l4-4a1 1 0 011.414 0l4 4a1 1 0 010 1.414z\" clip-rule=\"evenodd\" />\n                        </svg>\n                        <svg class=\"w-3 h-3 sort-down opacity-30 -mt-1\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                          <path fill-rule=\"evenodd\" d=\"M5.293 7.293a1 1 0 011.414 0L10 10.586l3.293-3.293a1 1 0 111.414 1.414l-4 4a1 1 0 01-1.414 0l-4-4a1 1 0 010-1.414z\" clip-rule=\"evenodd\" />\n                        </svg>\n                      </div>\n                    </button>\n                  ` : column.label}\n                </th>\n              `}).join('')}\n            </tr>\n          </thead>\n          <tbody>\n            ${data.rows.map((row, rowIndex) => {\n              if (!row) return ''\n              const clickableClass = data.rowClickable ? 'cursor-pointer' : ''\n              const clickHandler = data.rowClickable && data.rowClickUrl ? `onclick=\"window.location.href='${data.rowClickUrl(row)}'\"` : ''\n              return `\n                <tr class=\"group border-t border-zinc-950/5 dark:border-white/5 hover:bg-gradient-to-r hover:from-cyan-50/50 hover:via-blue-50/30 hover:to-purple-50/50 dark:hover:from-cyan-900/20 dark:hover:via-blue-900/10 dark:hover:to-purple-900/20 hover:shadow-sm hover:shadow-cyan-500/5 dark:hover:shadow-cyan-400/5 transition-all duration-300 ${clickableClass}\" ${clickHandler}>\n                  ${data.selectable ? `\n                    <td class=\"px-4 py-4 sm:pl-0\" onclick=\"event.stopPropagation()\">\n                      <div class=\"flex items-center justify-center\">\n                        <div class=\"group grid size-4 grid-cols-1\">\n                          <input type=\"checkbox\" value=\"${(row as any).id || ''}\" class=\"col-start-1 row-start-1 appearance-none rounded border border-white/10 bg-white/5 checked:border-cyan-500 checked:bg-cyan-500 indeterminate:border-cyan-500 indeterminate:bg-cyan-500 focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-cyan-500 disabled:border-white/5 disabled:bg-white/10 disabled:checked:bg-white/10 forced-colors:appearance-auto row-checkbox\" />\n                          <svg viewBox=\"0 0 14 14\" fill=\"none\" class=\"pointer-events-none col-start-1 row-start-1 size-3.5 self-center justify-self-center stroke-white group-has-[:disabled]:stroke-white/25\">\n                            <path d=\"M3 8L6 11L11 3.5\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"opacity-0 group-has-[:checked]:opacity-100\" />\n                            <path d=\"M3 7H11\" stroke-width=\"2\" stroke-linecap=\"round\" stroke-linejoin=\"round\" class=\"opacity-0 group-has-[:indeterminate]:opacity-100\" />\n                          </svg>\n                        </div>\n                      </div>\n                    </td>\n                  ` : ''}\n                  ${data.columns.map((column, colIndex) => {\n                    const value = (row as any)[column.key]\n                    const displayValue = column.render ? column.render(value, row) : value\n                    const stopPropagation = column.key === 'actions' ? 'onclick=\"event.stopPropagation()\"' : ''\n                    const isFirst = colIndex === 0 && !data.selectable\n                    const isLast = colIndex === data.columns.length - 1\n                    return `\n                      <td class=\"px-4 py-4 text-sm text-zinc-500 dark:text-zinc-400 ${isFirst ? 'sm:pl-0 font-medium text-zinc-950 dark:text-white' : ''} ${isLast ? 'sm:pr-0' : ''} ${column.className || ''}\" ${stopPropagation}>\n                        ${displayValue || ''}\n                      </td>\n                    `\n                  }).join('')}\n                </tr>\n              `\n            }).join('')}\n          </tbody>\n        </table>\n      </div>\n\n      <script>\n        // Table sorting functionality\n        window.sortTable = function(tableId, column, sortType) {\n          const tableContainer = document.getElementById(tableId);\n          const table = tableContainer.querySelector('.sortable-table');\n          const tbody = table.querySelector('tbody');\n          const rows = Array.from(tbody.querySelectorAll('tr'));\n          const headerBtn = table.querySelector(\\`[data-column=\"\\${column}\"]\\`);\n\n          // Get current sort direction\n          let direction = headerBtn.getAttribute('data-sort-direction');\n\n          // Reset all sort indicators\n          table.querySelectorAll('.sort-btn').forEach(btn => {\n            btn.setAttribute('data-sort-direction', 'none');\n            btn.querySelectorAll('.sort-up, .sort-down').forEach(icon => {\n              icon.classList.add('opacity-30');\n              icon.classList.remove('opacity-100', 'text-zinc-950', 'dark:text-white');\n            });\n          });\n\n          // Determine new direction\n          if (direction === 'none' || direction === 'desc') {\n            direction = 'asc';\n          } else {\n            direction = 'desc';\n          }\n\n          // Update current header\n          headerBtn.setAttribute('data-sort-direction', direction);\n          const upIcon = headerBtn.querySelector('.sort-up');\n          const downIcon = headerBtn.querySelector('.sort-down');\n\n          if (direction === 'asc') {\n            upIcon.classList.remove('opacity-30');\n            upIcon.classList.add('opacity-100', 'text-zinc-950', 'dark:text-white');\n            downIcon.classList.add('opacity-30');\n            downIcon.classList.remove('opacity-100', 'text-zinc-950', 'dark:text-white');\n          } else {\n            downIcon.classList.remove('opacity-30');\n            downIcon.classList.add('opacity-100', 'text-zinc-950', 'dark:text-white');\n            upIcon.classList.add('opacity-30');\n            upIcon.classList.remove('opacity-100', 'text-zinc-950', 'dark:text-white');\n          }\n\n          // Find column index (accounting for potential select column)\n          const headers = Array.from(table.querySelectorAll('th'));\n          const selectableOffset = table.querySelector('input[id^=\"select-all\"]') ? 1 : 0;\n          const columnIndex = headers.findIndex(th => th.querySelector(\\`[data-column=\"\\${column}\"]\\`)) - selectableOffset;\n\n          // Sort rows\n          rows.sort((a, b) => {\n            const aCell = a.children[columnIndex + selectableOffset];\n            const bCell = b.children[columnIndex + selectableOffset];\n\n            if (!aCell || !bCell) return 0;\n\n            let aValue = aCell.textContent.trim();\n            let bValue = bCell.textContent.trim();\n\n            // Handle different sort types\n            switch (sortType) {\n              case 'number':\n                aValue = parseFloat(aValue.replace(/[^0-9.-]/g, '')) || 0;\n                bValue = parseFloat(bValue.replace(/[^0-9.-]/g, '')) || 0;\n                break;\n              case 'date':\n                aValue = new Date(aValue).getTime() || 0;\n                bValue = new Date(bValue).getTime() || 0;\n                break;\n              case 'boolean':\n                aValue = aValue.toLowerCase() === 'true' || aValue.toLowerCase() === 'published' || aValue.toLowerCase() === 'active';\n                bValue = bValue.toLowerCase() === 'true' || bValue.toLowerCase() === 'published' || bValue.toLowerCase() === 'active';\n                break;\n              default: // string\n                aValue = aValue.toLowerCase();\n                bValue = bValue.toLowerCase();\n            }\n\n            if (aValue < bValue) return direction === 'asc' ? -1 : 1;\n            if (aValue > bValue) return direction === 'asc' ? 1 : -1;\n            return 0;\n          });\n\n          // Re-append sorted rows\n          rows.forEach(row => tbody.appendChild(row));\n        };\n\n        // Select all functionality\n        document.addEventListener('DOMContentLoaded', function() {\n          document.querySelectorAll('[id^=\"select-all\"]').forEach(selectAll => {\n            selectAll.addEventListener('change', function() {\n              const tableId = this.id.replace('select-all-', '');\n              const table = document.getElementById(tableId);\n              if (table) {\n                const checkboxes = table.querySelectorAll('.row-checkbox');\n                checkboxes.forEach(checkbox => {\n                  checkbox.checked = this.checked;\n                });\n              }\n            });\n          });\n        });\n      </script>\n    </div>\n  `\n}","export interface PaginationData {\n  currentPage: number\n  totalPages: number\n  totalItems: number\n  itemsPerPage: number\n  startItem: number\n  endItem: number\n  baseUrl: string\n  queryParams?: Record<string, string>\n  showPageNumbers?: boolean\n  maxPageNumbers?: number\n  showPageSizeSelector?: boolean\n  pageSizeOptions?: number[]\n}\n\nexport function renderPagination(data: PaginationData): string {\n  // Show pagination if there are multiple pages OR if page size selector is enabled\n  const shouldShowPagination = data.totalPages > 1 || (data.showPageSizeSelector !== false && data.totalItems > 0)\n\n  if (!shouldShowPagination) {\n    return ''\n  }\n\n  const buildUrl = (page: number, limit?: number): string => {\n    const params = new URLSearchParams(data.queryParams || {})\n    params.set('page', page.toString())\n    if (limit) {\n      params.set('limit', limit.toString())\n    } else if (data.itemsPerPage !== 20) {\n      params.set('limit', data.itemsPerPage.toString())\n    }\n    return `${data.baseUrl}?${params.toString()}`\n  }\n\n  const buildPageSizeUrl = (limit: number): string => {\n    const params = new URLSearchParams(data.queryParams || {})\n    params.set('page', '1') // Reset to page 1 when changing page size\n    params.set('limit', limit.toString())\n    return `${data.baseUrl}?${params.toString()}`\n  }\n\n  const generatePageNumbers = (): number[] => {\n    const maxNumbers = data.maxPageNumbers || 5\n    const half = Math.floor(maxNumbers / 2)\n    let start = Math.max(1, data.currentPage - half)\n    let end = Math.min(data.totalPages, start + maxNumbers - 1)\n\n    // Adjust start if we're near the end\n    if (end - start + 1 < maxNumbers) {\n      start = Math.max(1, end - maxNumbers + 1)\n    }\n\n    const pages: number[] = []\n    for (let i = start; i <= end; i++) {\n      pages.push(i)\n    }\n    return pages\n  }\n\n  return `\n    <div class=\"rounded-xl bg-white dark:bg-zinc-900 shadow-sm ring-1 ring-zinc-950/5 dark:ring-white/10 px-4 py-3 flex items-center justify-between mt-4\">\n      ${data.totalPages > 1 ? `\n        <!-- Mobile Pagination -->\n        <div class=\"flex-1 flex justify-between sm:hidden\">\n          ${data.currentPage > 1 ? `\n            <a href=\"${buildUrl(data.currentPage - 1)}\" class=\"inline-flex items-center rounded-lg bg-white dark:bg-zinc-800 px-3 py-2 text-sm font-semibold text-zinc-950 dark:text-white shadow-sm ring-1 ring-inset ring-zinc-950/10 dark:ring-white/10 hover:bg-zinc-50 dark:hover:bg-zinc-700 transition-colors\">\n              Previous\n            </a>\n          ` : `\n            <span class=\"inline-flex items-center rounded-lg bg-white dark:bg-zinc-800 px-3 py-2 text-sm font-semibold text-zinc-400 dark:text-zinc-600 shadow-sm ring-1 ring-inset ring-zinc-950/10 dark:ring-white/10 opacity-50 cursor-not-allowed\">Previous</span>\n          `}\n\n          ${data.currentPage < data.totalPages ? `\n            <a href=\"${buildUrl(data.currentPage + 1)}\" class=\"inline-flex items-center rounded-lg bg-white dark:bg-zinc-800 px-3 py-2 text-sm font-semibold text-zinc-950 dark:text-white shadow-sm ring-1 ring-inset ring-zinc-950/10 dark:ring-white/10 hover:bg-zinc-50 dark:hover:bg-zinc-700 transition-colors\">\n              Next\n            </a>\n          ` : `\n            <span class=\"inline-flex items-center rounded-lg bg-white dark:bg-zinc-800 px-3 py-2 text-sm font-semibold text-zinc-400 dark:text-zinc-600 shadow-sm ring-1 ring-inset ring-zinc-950/10 dark:ring-white/10 opacity-50 cursor-not-allowed\">Next</span>\n          `}\n        </div>\n      ` : ''}\n\n      <!-- Desktop Pagination -->\n      <div class=\"hidden sm:flex-1 sm:flex sm:items-center sm:justify-between\">\n        <div class=\"flex items-center gap-4\">\n          <p class=\"text-sm text-zinc-500 dark:text-zinc-400\">\n            Showing <span class=\"font-medium text-zinc-950 dark:text-white\">${data.startItem}</span> to\n            <span class=\"font-medium text-zinc-950 dark:text-white\">${data.endItem}</span> of\n            <span class=\"font-medium text-zinc-950 dark:text-white\">${data.totalItems}</span> results\n          </p>\n          ${data.showPageSizeSelector !== false ? `\n            <div class=\"flex items-center gap-2\">\n              <label for=\"page-size\" class=\"text-sm text-zinc-500 dark:text-zinc-400\">Per page:</label>\n              <div class=\"grid grid-cols-1\">\n                <select\n                  id=\"page-size\"\n                  onchange=\"window.location.href = this.value\"\n                  class=\"col-start-1 row-start-1 w-full appearance-none rounded-md bg-white/5 dark:bg-white/5 py-1.5 pl-3 pr-8 text-sm text-zinc-950 dark:text-white outline outline-1 -outline-offset-1 outline-zinc-500/30 dark:outline-zinc-400/30 *:bg-white dark:*:bg-zinc-800 focus-visible:outline focus-visible:outline-2 focus-visible:-outline-offset-2 focus-visible:outline-zinc-500 dark:focus-visible:outline-zinc-400\"\n                >\n                  ${(data.pageSizeOptions || [10, 20, 50, 100]).map(size => `\n                    <option value=\"${buildPageSizeUrl(size)}\" ${size === data.itemsPerPage ? 'selected' : ''}>\n                      ${size}\n                    </option>\n                  `).join('')}\n                </select>\n                <svg viewBox=\"0 0 16 16\" fill=\"currentColor\" aria-hidden=\"true\" class=\"pointer-events-none col-start-1 row-start-1 mr-2 size-4 self-center justify-self-end text-zinc-600 dark:text-zinc-400\">\n                  <path d=\"M4.22 6.22a.75.75 0 0 1 1.06 0L8 8.94l2.72-2.72a.75.75 0 1 1 1.06 1.06l-3.25 3.25a.75.75 0 0 1-1.06 0L4.22 7.28a.75.75 0 0 1 0-1.06Z\" clip-rule=\"evenodd\" fill-rule=\"evenodd\" />\n                </svg>\n              </div>\n            </div>\n          ` : ''}\n        </div>\n\n        ${data.totalPages > 1 ? `\n          <div class=\"flex items-center gap-x-1\">\n            <!-- Previous Button -->\n            ${data.currentPage > 1 ? `\n            <a href=\"${buildUrl(data.currentPage - 1)}\"\n               class=\"rounded-lg bg-white dark:bg-zinc-800 px-3 py-2 text-sm font-semibold text-zinc-950 dark:text-white shadow-sm ring-1 ring-inset ring-zinc-950/10 dark:ring-white/10 hover:bg-zinc-50 dark:hover:bg-zinc-700 transition-colors\">\n              Previous\n            </a>\n          ` : ''}\n\n          <!-- Page Numbers -->\n          ${data.showPageNumbers !== false ? `\n            <!-- First page if not in range -->\n            ${(() => {\n              const pageNumbers = generatePageNumbers()\n              const firstPage = pageNumbers.length > 0 ? pageNumbers[0] : null\n              return firstPage && firstPage > 1 ? `\n                <a href=\"${buildUrl(1)}\"\n                   class=\"rounded-lg bg-white dark:bg-zinc-800 px-3 py-2 text-sm font-semibold text-zinc-950 dark:text-white shadow-sm ring-1 ring-inset ring-zinc-950/10 dark:ring-white/10 hover:bg-zinc-50 dark:hover:bg-zinc-700 transition-colors\">\n                  1\n                </a>\n                ${firstPage > 2 ? `\n                  <span class=\"px-2 text-sm text-zinc-500 dark:text-zinc-400\">...</span>\n                ` : ''}\n              ` : ''\n            })()}\n\n            <!-- Page number buttons -->\n            ${generatePageNumbers().map(pageNum => `\n              ${pageNum === data.currentPage ? `\n                <span class=\"rounded-lg bg-zinc-950 dark:bg-white px-3 py-2 text-sm font-semibold text-white dark:text-zinc-950\">\n                  ${pageNum}\n                </span>\n              ` : `\n                <a href=\"${buildUrl(pageNum)}\"\n                   class=\"rounded-lg bg-white dark:bg-zinc-800 px-3 py-2 text-sm font-semibold text-zinc-950 dark:text-white shadow-sm ring-1 ring-inset ring-zinc-950/10 dark:ring-white/10 hover:bg-zinc-50 dark:hover:bg-zinc-700 transition-colors\">\n                  ${pageNum}\n                </a>\n              `}\n            `).join('')}\n\n            <!-- Last page if not in range -->\n            ${(() => {\n              const pageNumbers = generatePageNumbers()\n              const lastPageNum = pageNumbers.length > 0 ? pageNumbers.slice(-1)[0] : null\n              return lastPageNum && lastPageNum < data.totalPages ? `\n                ${lastPageNum < data.totalPages - 1 ? `\n                  <span class=\"px-2 text-sm text-zinc-500 dark:text-zinc-400\">...</span>\n                ` : ''}\n                <a href=\"${buildUrl(data.totalPages)}\"\n                   class=\"rounded-lg bg-white dark:bg-zinc-800 px-3 py-2 text-sm font-semibold text-zinc-950 dark:text-white shadow-sm ring-1 ring-inset ring-zinc-950/10 dark:ring-white/10 hover:bg-zinc-50 dark:hover:bg-zinc-700 transition-colors\">\n                  ${data.totalPages}\n                </a>\n              ` : ''\n            })()}\n          ` : ''}\n\n          <!-- Next Button -->\n          ${data.currentPage < data.totalPages ? `\n            <a href=\"${buildUrl(data.currentPage + 1)}\"\n               class=\"rounded-lg bg-white dark:bg-zinc-800 px-3 py-2 text-sm font-semibold text-zinc-950 dark:text-white shadow-sm ring-1 ring-inset ring-zinc-950/10 dark:ring-white/10 hover:bg-zinc-50 dark:hover:bg-zinc-700 transition-colors\">\n              Next\n            </a>\n          ` : ''}\n          </div>\n        ` : ''}\n      </div>\n    </div>\n  `\n}","import { renderAdminLayoutCatalyst, AdminLayoutCatalystData } from '../layouts/admin-layout-catalyst.template'\nimport { renderTable, TableData, TableColumn } from '../components/table.template'\nimport { renderFilterBar, FilterBarData } from '../components/filter-bar.template'\nimport { renderPagination, PaginationData } from '../components/pagination.template'\nimport { renderConfirmationDialog, getConfirmationDialogScript } from '../components/confirmation-dialog.template'\n\nexport interface ContentItem {\n  id: string\n  title: string\n  slug: string\n  modelName: string\n  statusBadge: string\n  authorName: string\n  formattedDate: string\n  availableActions: string[]\n}\n\nexport interface ContentListPageData {\n  modelName: string\n  status: string\n  page: number\n  search?: string\n  models: Array<{\n    name: string\n    displayName: string\n  }>\n  contentItems: ContentItem[]\n  totalItems: number\n  itemsPerPage: number\n  user?: {\n    name: string\n    email: string\n    role: string\n  }\n  version?: string\n}\n\nexport function renderContentListPage(data: ContentListPageData): string {\n  // Build current URL parameters to pass to edit page\n  const urlParams = new URLSearchParams()\n  if (data.modelName && data.modelName !== 'all') urlParams.set('model', data.modelName)\n  if (data.status && data.status !== 'all') urlParams.set('status', data.status)\n  if (data.search) urlParams.set('search', data.search)\n  if (data.page && data.page !== 1) urlParams.set('page', data.page.toString())\n  const currentParams = urlParams.toString()\n\n  // Check if filters are active (not in default state)\n  const hasActiveFilters = data.modelName !== 'all' || data.status !== 'all' || !!data.search\n\n  // Prepare filter bar data\n  const filterBarData: FilterBarData = {\n    filters: [\n      {\n        name: 'model',\n        label: 'Model',\n        options: [\n          { value: 'all', label: 'All Models', selected: data.modelName === 'all' },\n          ...data.models.map(model => ({\n            value: model.name,\n            label: model.displayName,\n            selected: data.modelName === model.name\n          }))\n        ]\n      },\n      {\n        name: 'status',\n        label: 'Status',\n        options: [\n          { value: 'all', label: 'All Status', selected: data.status === 'all' },\n          { value: 'draft', label: 'Draft', selected: data.status === 'draft' },\n          { value: 'review', label: 'Under Review', selected: data.status === 'review' },\n          { value: 'scheduled', label: 'Scheduled', selected: data.status === 'scheduled' },\n          { value: 'published', label: 'Published', selected: data.status === 'published' },\n          { value: 'archived', label: 'Archived', selected: data.status === 'archived' },\n          { value: 'deleted', label: 'Deleted', selected: data.status === 'deleted' }\n        ]\n      }\n    ],\n    actions: [\n      {\n        label: 'Refresh',\n        className: 'btn-secondary',\n        onclick: 'location.reload()'\n      }\n    ],\n    bulkActions: [\n      { label: 'Publish', value: 'publish', icon: 'check-circle' },\n      { label: 'Unpublish', value: 'unpublish', icon: 'x-circle' },\n      { label: 'Delete', value: 'delete', icon: 'trash', className: 'text-pink-600' }\n    ]\n  }\n\n  // Prepare table data\n  const tableColumns: TableColumn[] = [\n    {\n      key: 'title',\n      label: 'Title',\n      sortable: true,\n      sortType: 'string',\n      render: (value, row) => `\n        <div class=\"flex items-center\">\n          <div>\n            <div class=\"text-sm font-medium text-zinc-950 dark:text-white\">\n              <a href=\"/content/${row.id}\" class=\"hover:text-blue-600 dark:hover:text-blue-400 transition-colors\">${row.title}</a>\n            </div>\n            <div class=\"text-sm text-zinc-500 dark:text-zinc-400\">${row.slug}</div>\n          </div>\n        </div>\n      `\n    },\n    {\n      key: 'modelName',\n      label: 'Model',\n      sortable: true,\n      sortType: 'string',\n      className: 'text-sm text-zinc-500 dark:text-zinc-400'\n    },\n    {\n      key: 'statusBadge',\n      label: 'Status',\n      sortable: true,\n      sortType: 'string',\n      render: (value) => value\n    },\n    {\n      key: 'authorName',\n      label: 'Author',\n      sortable: true,\n      sortType: 'string',\n      className: 'text-sm text-zinc-500 dark:text-zinc-400'\n    },\n    {\n      key: 'formattedDate',\n      label: 'Updated',\n      sortable: true,\n      sortType: 'date',\n      className: 'text-sm text-zinc-500 dark:text-zinc-400'\n    },\n    {\n      key: 'actions',\n      label: 'Actions',\n      sortable: false,\n      className: 'text-sm font-medium',\n      render: (value, row) => `\n        <div class=\"flex space-x-2\">\n          <button\n            class=\"inline-flex items-center justify-center p-1.5 rounded-lg bg-cyan-50 dark:bg-cyan-500/10 text-cyan-700 dark:text-cyan-400 ring-1 ring-inset ring-cyan-600/20 dark:ring-cyan-500/20 hover:bg-cyan-100 dark:hover:bg-cyan-500/20 transition-colors\"\n            onclick=\"window.location.href='/admin/content/${row.id}/edit${currentParams ? `?ref=${encodeURIComponent(currentParams)}` : ''}'\"\n            title=\"Edit\"\n          >\n            <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"/>\n            </svg>\n          </button>\n          <button\n            class=\"inline-flex items-center justify-center p-1.5 rounded-lg bg-red-50 dark:bg-red-500/10 text-red-700 dark:text-red-400 ring-1 ring-inset ring-red-600/20 dark:ring-red-500/20 hover:bg-red-100 dark:hover:bg-red-500/20 transition-colors\"\n            hx-delete=\"/admin/content/${row.id}\"\n            hx-confirm=\"Are you sure you want to delete this content item?\"\n            hx-target=\"#content-list\"\n            hx-swap=\"outerHTML\"\n            title=\"Delete\"\n          >\n            <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"/>\n            </svg>\n          </button>\n        </div>\n      `\n    }\n  ]\n\n  const tableData: TableData<ContentItem> = {\n    tableId: 'content-table',\n    columns: tableColumns,\n    rows: data.contentItems,\n    selectable: true,\n    rowClickable: true,\n    rowClickUrl: (row: ContentItem) => `/admin/content/${row.id}/edit${currentParams ? `?ref=${encodeURIComponent(currentParams)}` : ''}`,\n    emptyMessage: 'No content found. Create your first content item to get started.'\n  }\n\n  // Prepare pagination data\n  const totalPages = Math.ceil(data.totalItems / data.itemsPerPage)\n  const startItem = (data.page - 1) * data.itemsPerPage + 1\n  const endItem = Math.min(data.page * data.itemsPerPage, data.totalItems)\n\n  const paginationData: PaginationData = {\n    currentPage: data.page,\n    totalPages,\n    totalItems: data.totalItems,\n    itemsPerPage: data.itemsPerPage,\n    startItem,\n    endItem,\n    baseUrl: '/admin/content',\n    queryParams: {\n      model: data.modelName,\n      status: data.status,\n      ...(data.search ? { search: data.search } : {})\n    },\n    showPageSizeSelector: true,\n    pageSizeOptions: [10, 20, 50, 100]\n  }\n\n  // Generate page content\n  const pageContent = `\n    <div>\n      <!-- Header -->\n      <div class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between mb-6\">\n        <div>\n          <h1 class=\"text-2xl/8 font-semibold text-zinc-950 dark:text-white sm:text-xl/8\">Content Management</h1>\n          <p class=\"mt-2 text-sm/6 text-zinc-500 dark:text-zinc-400\">Manage and organize your content items</p>\n        </div>\n        <div class=\"mt-4 sm:mt-0 sm:ml-16 sm:flex-none\">\n          <a href=\"/admin/content/new\" class=\"inline-flex items-center justify-center rounded-lg bg-zinc-950 dark:bg-white px-3.5 py-2.5 text-sm font-semibold text-white dark:text-zinc-950 hover:bg-zinc-800 dark:hover:bg-zinc-100 transition-colors shadow-sm\">\n            <svg class=\"-ml-0.5 mr-1.5 h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n              <path d=\"M10.75 4.75a.75.75 0 00-1.5 0v4.5h-4.5a.75.75 0 000 1.5h4.5v4.5a.75.75 0 001.5 0v-4.5h4.5a.75.75 0 000-1.5h-4.5v-4.5z\" />\n            </svg>\n            New Content\n          </a>\n        </div>\n      </div>\n      <!-- Filters -->\n      <div class=\"relative rounded-xl mb-6\">\n        <!-- Gradient Background -->\n        <div class=\"absolute inset-0 bg-gradient-to-r from-cyan-500/10 via-blue-500/10 to-purple-500/10 dark:from-cyan-400/20 dark:via-blue-400/20 dark:to-purple-400/20 rounded-xl\"></div>\n\n        <div class=\"relative bg-white/80 dark:bg-zinc-900/80 backdrop-blur-xl shadow-sm ring-1 ring-zinc-950/5 dark:ring-white/10 rounded-xl\">\n          <div class=\"px-6 py-5\">\n            <div class=\"flex items-center justify-between\">\n              <div class=\"flex items-center space-x-4\">\n                <!-- Search Input -->\n                <div>\n                  <label class=\"block text-sm font-medium text-zinc-950 dark:text-white mb-2\">Search</label>\n                  <form onsubmit=\"performContentSearch(event)\" class=\"flex items-center space-x-2\">\n                    <div class=\"relative group\">\n                      <input\n                        type=\"text\"\n                        name=\"search\"\n                        id=\"content-search-input\"\n                        value=\"${data.search || ''}\"\n                        oninput=\"toggleContentClearButton()\"\n                        placeholder=\"Search content...\"\n                        class=\"rounded-full bg-white/90 dark:bg-zinc-800/90 backdrop-blur-sm px-4 py-2.5 pl-11 pr-10 text-sm w-72 text-zinc-950 dark:text-white border-2 border-cyan-200/50 dark:border-cyan-700/50 placeholder:text-zinc-400 dark:placeholder:text-zinc-500 focus:outline-none focus:border-cyan-500 dark:focus:border-cyan-400 focus:bg-white dark:focus:bg-zinc-800 focus:shadow-lg focus:shadow-cyan-500/20 dark:focus:shadow-cyan-400/20 transition-all duration-300\"\n                      >\n                      <div class=\"absolute left-3.5 top-2.5 flex items-center justify-center w-5 h-5 rounded-full bg-gradient-to-br from-cyan-400 to-blue-500 dark:from-cyan-300 dark:to-blue-400 opacity-90 group-focus-within:opacity-100 transition-opacity\">\n                        <svg class=\"h-3 w-3 text-white\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" stroke-width=\"2.5\">\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"/>\n                        </svg>\n                      </div>\n                      <button\n                        type=\"button\"\n                        id=\"clear-content-search\"\n                        onclick=\"clearContentSearch()\"\n                        class=\"${data.search ? '' : 'hidden'} absolute right-3 top-3 flex items-center justify-center w-5 h-5 rounded-full bg-zinc-400/20 dark:bg-zinc-500/20 hover:bg-zinc-400/30 dark:hover:bg-zinc-500/30 transition-colors\"\n                      >\n                        <svg class=\"h-3 w-3 text-zinc-600 dark:text-zinc-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" stroke-width=\"2.5\">\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\"/>\n                        </svg>\n                      </button>\n                    </div>\n                    <button\n                      type=\"submit\"\n                      class=\"inline-flex items-center gap-x-1.5 px-4 py-2.5 bg-gradient-to-r from-cyan-500 to-blue-500 dark:from-cyan-400 dark:to-blue-400 text-white text-sm font-medium rounded-full hover:from-cyan-600 hover:to-blue-600 dark:hover:from-cyan-500 dark:hover:to-blue-500 shadow-md hover:shadow-lg transition-all duration-200\"\n                    >\n                      <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" stroke-width=\"2.5\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z\"/>\n                      </svg>\n                      Search\n                    </button>\n                  </form>\n                  <script>\n                    function performContentSearch(event) {\n                      event.preventDefault();\n                      const searchInput = document.getElementById('content-search-input');\n                      const value = searchInput.value.trim();\n                      const params = new URLSearchParams(window.location.search);\n                      if (value) {\n                        params.set('search', value);\n                      } else {\n                        params.delete('search');\n                      }\n                      params.set('page', '1');\n                      window.location.href = window.location.pathname + '?' + params.toString();\n                    }\n\n                    function clearContentSearch() {\n                      const params = new URLSearchParams(window.location.search);\n                      params.delete('search');\n                      params.set('page', '1');\n                      window.location.href = window.location.pathname + (params.toString() ? '?' + params.toString() : '');\n                    }\n\n                    function toggleContentClearButton() {\n                      const searchInput = document.getElementById('content-search-input');\n                      const clearButton = document.getElementById('clear-content-search');\n                      if (searchInput.value.trim()) {\n                        clearButton.classList.remove('hidden');\n                      } else {\n                        clearButton.classList.add('hidden');\n                      }\n                    }\n\n                    function updateContentFilters(filterName, filterValue) {\n                      const params = new URLSearchParams(window.location.search);\n                      params.set(filterName, filterValue);\n                      params.set('page', '1');\n                      window.location.href = window.location.pathname + '?' + params.toString();\n                    }\n\n                    function clearAllFilters() {\n                      window.location.href = window.location.pathname;\n                    }\n                  </script>\n                </div>\n\n                ${filterBarData.filters.map(filter => {\n                  const selectedOption = filter.options.find(opt => opt.selected);\n                  const selectedColor = selectedOption?.color || 'cyan';\n                  const colorMap: Record<string, string> = {\n                    'cyan': 'bg-cyan-400 dark:bg-cyan-400',\n                    'lime': 'bg-lime-400 dark:bg-lime-400',\n                    'pink': 'bg-pink-400 dark:bg-pink-400',\n                    'purple': 'bg-purple-400 dark:bg-purple-400',\n                    'amber': 'bg-amber-400 dark:bg-amber-400',\n                    'zinc': 'bg-zinc-400 dark:bg-zinc-400'\n                  };\n\n                  return `\n                  <div>\n                    <label class=\"block text-sm/6 font-medium text-zinc-950 dark:text-white\">${filter.label}</label>\n                    <div class=\"mt-2 grid grid-cols-1\">\n                      <div class=\"col-start-1 row-start-1 flex items-center gap-3 pl-3 pr-8 pointer-events-none\">\n                        ${filter.name === 'status' ? `<span class=\"inline-block size-2 shrink-0 rounded-full border border-transparent ${colorMap[selectedColor]}\"></span>` : ''}\n                      </div>\n                      <select\n                        name=\"${filter.name}\"\n                        onchange=\"updateContentFilters('${filter.name}', this.value)\"\n                        class=\"col-start-1 row-start-1 w-full appearance-none rounded-md bg-white/5 dark:bg-white/5 py-1.5 ${filter.name === 'status' ? 'pl-8' : 'pl-3'} pr-8 text-base text-zinc-950 dark:text-white outline outline-1 -outline-offset-1 outline-cyan-500/30 dark:outline-cyan-400/30 *:bg-white dark:*:bg-zinc-800 focus-visible:outline focus-visible:outline-2 focus-visible:-outline-offset-2 focus-visible:outline-cyan-500 dark:focus-visible:outline-cyan-400 sm:text-sm/6 min-w-48\"\n                      >\n                        ${filter.options.map(opt => `\n                          <option value=\"${opt.value}\" ${opt.selected ? 'selected' : ''}>${opt.label}</option>\n                        `).join('')}\n                      </select>\n                      <svg viewBox=\"0 0 16 16\" fill=\"currentColor\" data-slot=\"icon\" aria-hidden=\"true\" class=\"pointer-events-none col-start-1 row-start-1 mr-2 size-5 self-center justify-self-end text-cyan-600 dark:text-cyan-400 sm:size-4\">\n                        <path d=\"M4.22 6.22a.75.75 0 0 1 1.06 0L8 8.94l2.72-2.72a.75.75 0 1 1 1.06 1.06l-3.25 3.25a.75.75 0 0 1-1.06 0L4.22 7.28a.75.75 0 0 1 0-1.06Z\" clip-rule=\"evenodd\" fill-rule=\"evenodd\" />\n                      </svg>\n                    </div>\n                  </div>\n                `}).join('')}\n\n                <!-- Clear Filters Button -->\n                ${hasActiveFilters ? `\n                  <div>\n                    <label class=\"block text-sm/6 font-medium text-zinc-950 dark:text-white mb-2\">&nbsp;</label>\n                    <button\n                      onclick=\"clearAllFilters()\"\n                      class=\"inline-flex items-center gap-x-1.5 px-3 py-2 bg-pink-50 dark:bg-pink-500/10 text-pink-700 dark:text-pink-300 text-sm font-medium rounded-md ring-1 ring-inset ring-pink-600/20 dark:ring-pink-500/20 hover:bg-pink-100 dark:hover:bg-pink-500/20 transition-colors\"\n                    >\n                      <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\" stroke-width=\"2\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" d=\"M6 18L18 6M6 6l12 12\"/>\n                      </svg>\n                      Clear Filters\n                    </button>\n                  </div>\n                ` : ''}\n              </div>\n              <div class=\"flex items-center gap-x-3\">\n                <span class=\"text-sm/6 font-medium text-zinc-700 dark:text-zinc-300 px-3 py-1.5 rounded-full bg-white/60 dark:bg-zinc-800/60 backdrop-blur-sm\">${data.totalItems} ${data.totalItems === 1 ? 'item' : 'items'}</span>\n                ${filterBarData.actions?.map(action => `\n                  <button\n                    ${action.onclick ? `onclick=\"${action.onclick}\"` : ''}\n                    ${action.hxGet ? `hx-get=\"${action.hxGet}\"` : ''}\n                    ${action.hxTarget ? `hx-target=\"${action.hxTarget}\"` : ''}\n                    class=\"inline-flex items-center gap-x-1.5 px-3 py-1.5 bg-white/90 dark:bg-zinc-800/90 backdrop-blur-sm text-zinc-950 dark:text-white text-sm font-medium rounded-full ring-1 ring-inset ring-cyan-200/50 dark:ring-cyan-700/50 hover:bg-gradient-to-r hover:from-cyan-50 hover:to-blue-50 dark:hover:from-cyan-900/30 dark:hover:to-blue-900/30 hover:ring-cyan-300 dark:hover:ring-cyan-600 transition-all duration-200\"\n                  >\n                    ${action.label === 'Refresh' ? `\n                      <svg class=\"h-4 w-4\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"/>\n                      </svg>\n                    ` : ''}\n                    ${action.label}\n                  </button>\n                `).join('') || ''}\n                ${filterBarData.bulkActions && filterBarData.bulkActions.length > 0 ? `\n                  <div class=\"relative inline-block\" id=\"bulk-actions-dropdown\">\n                    <button\n                      id=\"bulk-actions-btn\"\n                      onclick=\"toggleBulkActionsDropdown()\"\n                      class=\"inline-flex items-center gap-x-1.5 px-3 py-1.5 bg-zinc-100/60 dark:bg-zinc-800/60 backdrop-blur-sm text-zinc-400 dark:text-zinc-600 text-sm font-medium rounded-full ring-1 ring-inset ring-zinc-200/50 dark:ring-zinc-700/50 cursor-not-allowed\"\n                      disabled\n                    >\n                      Bulk Actions\n                      <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"size-4\">\n                        <path d=\"M5.22 8.22a.75.75 0 0 1 1.06 0L10 11.94l3.72-3.72a.75.75 0 1 1 1.06 1.06l-4.25 4.25a.75.75 0 0 1-1.06 0L5.22 9.28a.75.75 0 0 1 0-1.06Z\" clip-rule=\"evenodd\" fill-rule=\"evenodd\" />\n                      </svg>\n                    </button>\n\n                    <div\n                      id=\"bulk-actions-menu\"\n                      class=\"hidden absolute right-0 mt-2 w-56 origin-top-right divide-y divide-zinc-200 dark:divide-white/10 rounded-lg bg-white dark:bg-zinc-900 shadow-xl ring-1 ring-zinc-950/5 dark:ring-white/10 z-50 transition-all duration-100 scale-95 opacity-0\"\n                      style=\"transition-behavior: allow-discrete;\"\n                    >\n                      <div class=\"py-1\">\n                        <button\n                          onclick=\"performBulkAction('publish')\"\n                          class=\"group/item flex w-full items-center px-4 py-2 text-sm text-zinc-700 dark:text-zinc-300 hover:bg-zinc-50 dark:hover:bg-white/5 hover:text-zinc-950 dark:hover:text-white transition-colors\"\n                        >\n                          <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"mr-3 size-5 text-zinc-400 dark:text-zinc-500 group-hover/item:text-zinc-950 dark:group-hover/item:text-white\">\n                            <path fill-rule=\"evenodd\" d=\"M16.704 4.153a.75.75 0 0 1 .143 1.052l-8 10.5a.75.75 0 0 1-1.127.075l-4.5-4.5a.75.75 0 0 1 1.06-1.06l3.894 3.893 7.48-9.817a.75.75 0 0 1 1.05-.143Z\" clip-rule=\"evenodd\" />\n                          </svg>\n                          Publish Selected\n                        </button>\n                        <button\n                          onclick=\"performBulkAction('draft')\"\n                          class=\"group/item flex w-full items-center px-4 py-2 text-sm text-zinc-700 dark:text-zinc-300 hover:bg-zinc-50 dark:hover:bg-white/5 hover:text-zinc-950 dark:hover:text-white transition-colors\"\n                        >\n                          <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"mr-3 size-5 text-zinc-400 dark:text-zinc-500 group-hover/item:text-zinc-950 dark:group-hover/item:text-white\">\n                            <path d=\"m5.433 13.917 1.262-3.155A4 4 0 0 1 7.58 9.42l6.92-6.918a2.121 2.121 0 0 1 3 3l-6.92 6.918c-.383.383-.84.685-1.343.886l-3.154 1.262a.5.5 0 0 1-.65-.65Z\" />\n                            <path d=\"M3.5 5.75c0-.69.56-1.25 1.25-1.25H10A.75.75 0 0 0 10 3H4.75A2.75 2.75 0 0 0 2 5.75v9.5A2.75 2.75 0 0 0 4.75 18h9.5A2.75 2.75 0 0 0 17 15.25V10a.75.75 0 0 0-1.5 0v5.25c0 .69-.56 1.25-1.25 1.25h-9.5c-.69 0-1.25-.56-1.25-1.25v-9.5Z\" />\n                          </svg>\n                          Move to Draft\n                        </button>\n                      </div>\n                      <div class=\"py-1\">\n                        <button\n                          onclick=\"performBulkAction('delete')\"\n                          class=\"group/item flex w-full items-center px-4 py-2 text-sm text-zinc-700 dark:text-zinc-300 hover:bg-red-50 dark:hover:bg-red-500/10 hover:text-red-600 dark:hover:text-red-400 transition-colors\"\n                        >\n                          <svg viewBox=\"0 0 20 20\" fill=\"currentColor\" class=\"mr-3 size-5 text-zinc-400 dark:text-zinc-500 group-hover/item:text-red-600 dark:group-hover/item:text-red-400\">\n                            <path fill-rule=\"evenodd\" d=\"M8.75 1A2.75 2.75 0 0 0 6 3.75v.443c-.795.077-1.584.176-2.365.298a.75.75 0 1 0 .23 1.482l.149-.022.841 10.518A2.75 2.75 0 0 0 7.596 19h4.807a2.75 2.75 0 0 0 2.742-2.53l.841-10.52.149.023a.75.75 0 0 0 .23-1.482A41.03 41.03 0 0 0 14 4.193V3.75A2.75 2.75 0 0 0 11.25 1h-2.5ZM10 4c.84 0 1.673.025 2.5.075V3.75c0-.69-.56-1.25-1.25-1.25h-2.5c-.69 0-1.25.56-1.25 1.25v.325C8.327 4.025 9.16 4 10 4ZM8.58 7.72a.75.75 0 0 0-1.5.06l.3 7.5a.75.75 0 1 0 1.5-.06l-.3-7.5Zm4.34.06a.75.75 0 1 0-1.5-.06l-.3 7.5a.75.75 0 1 0 1.5.06l.3-7.5Z\" clip-rule=\"evenodd\" fill-rule=\"evenodd\" />\n                          </svg>\n                          Delete Selected\n                        </button>\n                      </div>\n                    </div>\n                  </div>\n                ` : ''}\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n      \n      <!-- Content List -->\n      <div id=\"content-list\">\n        ${renderTable(tableData)}\n        ${renderPagination(paginationData)}\n      </div>\n      \n    </div>\n    \n    <!-- Modals -->\n    <div id=\"bulk-actions-modal\"></div>\n    <div id=\"versions-modal\"></div>\n    \n    <script>\n      // Update bulk actions button state\n      function updateBulkActionsButton() {\n        const checkboxes = document.querySelectorAll('input[type=\"checkbox\"].row-checkbox');\n        const checkedCount = Array.from(checkboxes).filter(cb => cb.checked).length;\n        const btn = document.getElementById('bulk-actions-btn');\n        const menu = document.getElementById('bulk-actions-menu');\n\n        if (!btn) return;\n\n        if (checkedCount > 0) {\n          btn.disabled = false;\n          btn.className = 'inline-flex items-center gap-x-1.5 px-3 py-1.5 bg-white/90 dark:bg-zinc-800/90 backdrop-blur-sm text-zinc-950 dark:text-white text-sm font-medium rounded-full ring-1 ring-inset ring-cyan-200/50 dark:ring-cyan-700/50 hover:bg-gradient-to-r hover:from-cyan-50 hover:to-blue-50 dark:hover:from-cyan-900/30 dark:hover:to-blue-900/30 hover:ring-cyan-300 dark:hover:ring-cyan-600 transition-all duration-200';\n        } else {\n          btn.disabled = true;\n          btn.className = 'inline-flex items-center gap-x-1.5 px-3 py-1.5 bg-zinc-100/60 dark:bg-zinc-800/60 backdrop-blur-sm text-zinc-400 dark:text-zinc-600 text-sm font-medium rounded-full ring-1 ring-inset ring-zinc-200/50 dark:ring-zinc-700/50 cursor-not-allowed';\n          // Hide menu when no items selected\n          if (menu) {\n            menu.classList.remove('scale-100', 'opacity-100');\n            menu.classList.add('scale-95', 'opacity-0', 'hidden');\n          }\n        }\n      }\n\n      // Select all functionality\n      document.addEventListener('change', function(e) {\n        if (e.target.id === 'select-all') {\n          const checkboxes = document.querySelectorAll('.row-checkbox');\n          checkboxes.forEach(cb => cb.checked = e.target.checked);\n          updateBulkActionsButton();\n        } else if (e.target.classList.contains('row-checkbox')) {\n          updateBulkActionsButton();\n        }\n      });\n\n      // Initialize button state on page load\n      document.addEventListener('DOMContentLoaded', function() {\n        updateBulkActionsButton();\n      });\n\n      // Toggle bulk actions dropdown\n      function toggleBulkActionsDropdown() {\n        const checkboxes = document.querySelectorAll('input[type=\"checkbox\"].row-checkbox');\n        const checkedCount = Array.from(checkboxes).filter(cb => cb.checked).length;\n\n        if (checkedCount === 0) return;\n\n        const menu = document.getElementById('bulk-actions-menu');\n        const isHidden = menu.classList.contains('hidden');\n\n        if (isHidden) {\n          menu.classList.remove('hidden');\n          setTimeout(() => {\n            menu.classList.remove('scale-95', 'opacity-0');\n            menu.classList.add('scale-100', 'opacity-100');\n          }, 10);\n        } else {\n          menu.classList.remove('scale-100', 'opacity-100');\n          menu.classList.add('scale-95', 'opacity-0');\n          setTimeout(() => {\n            menu.classList.add('hidden');\n          }, 100);\n        }\n      }\n\n      // Close dropdown when clicking outside\n      document.addEventListener('click', function(e) {\n        const dropdown = document.getElementById('bulk-actions-dropdown');\n        const menu = document.getElementById('bulk-actions-menu');\n        if (dropdown && menu && !dropdown.contains(e.target)) {\n          menu.classList.remove('scale-100', 'opacity-100');\n          menu.classList.add('scale-95', 'opacity-0');\n          setTimeout(() => {\n            menu.classList.add('hidden');\n          }, 100);\n        }\n      });\n\n      // Store current bulk action context\n      let currentBulkAction = null;\n      let currentSelectedIds = [];\n\n      // Perform bulk action\n      function performBulkAction(action) {\n        const selectedIds = Array.from(document.querySelectorAll('input[type=\"checkbox\"].row-checkbox:checked'))\n          .map(cb => cb.value)\n          .filter(id => id);\n\n        if (selectedIds.length === 0) {\n          alert('Please select at least one item');\n          return;\n        }\n\n        // Store context for confirmation\n        currentBulkAction = action;\n        currentSelectedIds = selectedIds;\n\n        // Update dialog content based on action\n        updateDialogContent(action, selectedIds.length);\n\n        // Show confirmation dialog\n        showConfirmDialog('bulk-action-confirm');\n      }\n\n      // Update dialog content dynamically\n      function updateDialogContent(action, count) {\n        const dialog = document.getElementById('bulk-action-confirm');\n        const titleEl = dialog.querySelector('h3');\n        const messageEl = dialog.querySelector('p');\n        const confirmBtn = dialog.querySelector('.confirm-button');\n\n        let title, message, btnText, btnClass;\n\n        switch(action) {\n          case 'delete':\n            title = 'Confirm Bulk Delete';\n            message = 'Are you sure you want to delete ' + count + ' selected item' + (count > 1 ? 's' : '') + '? This action cannot be undone.';\n            btnText = 'Delete';\n            btnClass = 'bg-red-500 hover:bg-red-400';\n            break;\n          case 'publish':\n            title = 'Confirm Bulk Publish';\n            message = 'Are you sure you want to publish ' + count + ' selected item' + (count > 1 ? 's' : '') + '? They will become publicly visible.';\n            btnText = 'Publish';\n            btnClass = 'bg-green-500 hover:bg-green-400';\n            break;\n          case 'draft':\n            title = 'Confirm Bulk Draft';\n            message = 'Are you sure you want to move ' + count + ' selected item' + (count > 1 ? 's' : '') + ' to draft status? They will be unpublished.';\n            btnText = 'Move to Draft';\n            btnClass = 'bg-blue-500 hover:bg-blue-400';\n            break;\n          default:\n            title = 'Confirm Bulk Action';\n            message = 'Are you sure you want to perform this action on ' + count + ' selected item' + (count > 1 ? 's' : '') + '?';\n            btnText = 'Confirm';\n            btnClass = 'bg-blue-500 hover:bg-blue-400';\n        }\n\n        titleEl.textContent = title;\n        messageEl.textContent = message;\n        confirmBtn.textContent = btnText;\n        confirmBtn.className = confirmBtn.className.replace(/bg-\\w+-\\d+\\s+hover:bg-\\w+-\\d+/, btnClass);\n      }\n\n      // Execute the bulk action after confirmation\n      function executeBulkAction() {\n        if (!currentBulkAction || currentSelectedIds.length === 0) return;\n\n        // Close dropdown\n        const menu = document.getElementById('bulk-actions-menu');\n        menu.classList.add('hidden');\n\n        fetch('/admin/content/bulk-action', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            action: currentBulkAction,\n            ids: currentSelectedIds\n          })\n        })\n        .then(res => res.json())\n        .then(data => {\n          if (data.success) {\n            location.reload();\n          } else {\n            alert('Error: ' + (data.error || 'Unknown error'));\n          }\n        })\n        .catch(err => {\n          console.error('Bulk action error:', err);\n          alert('Failed to perform bulk action');\n        })\n        .finally(() => {\n          // Clear context\n          currentBulkAction = null;\n          currentSelectedIds = [];\n        });\n      }\n\n      // Helper to get action text for display\n      function getActionText(action) {\n        const actionCount = currentSelectedIds.length;\n        switch(action) {\n          case 'publish':\n            return \\`publish \\${actionCount} item\\${actionCount > 1 ? 's' : ''}\\`;\n          case 'draft':\n            return \\`move \\${actionCount} item\\${actionCount > 1 ? 's' : ''} to draft\\`;\n          case 'delete':\n            return \\`delete \\${actionCount} item\\${actionCount > 1 ? 's' : ''}\\`;\n          default:\n            return \\`perform action on \\${actionCount} item\\${actionCount > 1 ? 's' : ''}\\`;\n        }\n      }\n\n    </script>\n\n    <!-- Confirmation Dialog for Bulk Actions -->\n    ${renderConfirmationDialog({\n      id: 'bulk-action-confirm',\n      title: 'Confirm Bulk Action',\n      message: 'Are you sure you want to perform this action? This operation will affect multiple items.',\n      confirmText: 'Confirm',\n      cancelText: 'Cancel',\n      confirmClass: 'bg-blue-500 hover:bg-blue-400',\n      iconColor: 'blue',\n      onConfirm: 'executeBulkAction()'\n    })}\n\n    <!-- Confirmation Dialog Script -->\n    ${getConfirmationDialogScript()}\n  `\n\n  // Prepare layout data\n  const layoutData: AdminLayoutCatalystData = {\n    title: 'Content Management',\n    pageTitle: 'Content Management',\n    currentPath: '/admin/content',\n    user: data.user,\n    version: data.version,\n    content: pageContent\n  }\n\n  return renderAdminLayoutCatalyst(layoutData)\n}","export interface ContentVersion {\n  id: string\n  version: number\n  data: any\n  author_id: string\n  author_name?: string\n  created_at: number\n  is_current?: boolean\n}\n\nexport interface VersionHistoryData {\n  contentId: string\n  versions: ContentVersion[]\n  currentVersion: number\n}\n\nexport function renderVersionHistory(data: VersionHistoryData): string {\n  return `\n    <div class=\"version-history-modal\">\n      <div class=\"backdrop-blur-xl bg-white/10 rounded-xl border border-white/20 shadow-2xl w-full max-w-4xl max-h-[90vh] overflow-hidden\">\n        <!-- Header -->\n        <div class=\"relative px-6 py-4 border-b border-white/10\">\n          <div class=\"absolute inset-0 bg-gradient-to-r from-blue-600/10 via-purple-600/10 to-pink-600/10\"></div>\n          <div class=\"relative flex items-center justify-between\">\n            <h3 class=\"text-lg font-semibold text-white\">Version History</h3>\n            <button onclick=\"closeVersionHistory()\" class=\"text-gray-300 hover:text-white\">\n              <svg class=\"w-6 h-6\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"></path>\n              </svg>\n            </button>\n          </div>\n        </div>\n        \n        <!-- Versions List -->\n        <div class=\"overflow-y-auto max-h-[calc(90vh-120px)]\">\n          <div class=\"p-6 space-y-4\">\n            ${data.versions.map((version, index) => `\n              <div class=\"version-item backdrop-blur-sm bg-white/5 rounded-xl border border-white/10 p-4 ${version.is_current ? 'ring-2 ring-blue-500/50' : ''}\">\n                <div class=\"flex items-center justify-between mb-3\">\n                  <div class=\"flex items-center space-x-3\">\n                    <span class=\"inline-flex items-center px-3 py-1 rounded-full text-xs font-medium ${version.is_current ? 'bg-blue-500/20 text-blue-300' : 'bg-white/10 text-gray-300'}\">\n                      Version ${version.version}${version.is_current ? ' (Current)' : ''}\n                    </span>\n                    <span class=\"text-sm text-gray-300\">\n                      ${new Date(version.created_at).toLocaleString()}\n                    </span>\n                  </div>\n                  <div class=\"flex items-center space-x-2\">\n                    ${!version.is_current ? `\n                      <button \n                        onclick=\"restoreVersion('${data.contentId}', ${version.version})\"\n                        class=\"inline-flex items-center px-3 py-1 bg-green-600 text-white text-sm rounded-xl hover:bg-green-700 transition-all\"\n                      >\n                        <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M3 10h10a8 8 0 018 8v2M3 10l6 6m-6-6l6-6\"></path>\n                        </svg>\n                        Restore\n                      </button>\n                    ` : ''}\n                    <button \n                      onclick=\"previewVersion('${data.contentId}', ${version.version})\"\n                      class=\"inline-flex items-center px-3 py-1 bg-blue-600 text-white text-sm rounded-xl hover:bg-blue-700 transition-all\"\n                    >\n                      <svg class=\"w-4 h-4 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 12a3 3 0 11-6 0 3 3 0 016 0z\"></path>\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z\"></path>\n                      </svg>\n                      Preview\n                    </button>\n                  </div>\n                </div>\n                \n                <!-- Version Summary -->\n                <div class=\"version-summary text-sm\">\n                  <div class=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                    <div>\n                      <span class=\"text-gray-400\">Title:</span>\n                      <span class=\"text-white ml-2\">${escapeHtml(version.data?.title || 'Untitled')}</span>\n                    </div>\n                    <div>\n                      <span class=\"text-gray-400\">Author:</span>\n                      <span class=\"text-white ml-2\">${escapeHtml(version.author_name || 'Unknown')}</span>\n                    </div>\n                    ${version.data?.excerpt ? `\n                      <div class=\"md:col-span-2\">\n                        <span class=\"text-gray-400\">Excerpt:</span>\n                        <p class=\"text-white mt-1 text-xs\">${escapeHtml(version.data.excerpt.substring(0, 200))}${version.data.excerpt.length > 200 ? '...' : ''}</p>\n                      </div>\n                    ` : ''}\n                  </div>\n                </div>\n                \n                <!-- Changes Summary (if not current) -->\n                ${!version.is_current && index < data.versions.length - 1 ? `\n                  <div class=\"mt-3 pt-3 border-t border-white/10\">\n                    <button \n                      onclick=\"toggleChanges('changes-${version.version}')\"\n                      class=\"text-sm text-blue-400 hover:text-blue-300 transition-colors\"\n                    >\n                      <svg class=\"w-4 h-4 inline mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M8 9l4-4 4 4m0 6l-4 4-4-4\"></path>\n                      </svg>\n                      View Changes\n                    </button>\n                    <div id=\"changes-${version.version}\" class=\"hidden mt-2 text-xs text-gray-300\">\n                      <em>Change detection coming soon...</em>\n                    </div>\n                  </div>\n                ` : ''}\n              </div>\n            `).join('')}\n          </div>\n        </div>\n        \n        <!-- Footer -->\n        <div class=\"px-6 py-4 border-t border-white/10 bg-white/5\">\n          <div class=\"flex justify-between items-center\">\n            <span class=\"text-sm text-gray-400\">\n              ${data.versions.length} version${data.versions.length !== 1 ? 's' : ''} total\n            </span>\n            <button \n              onclick=\"closeVersionHistory()\"\n              class=\"px-4 py-2 bg-white/10 text-white rounded-xl border border-white/20 hover:bg-white/20 transition-all\"\n            >\n              Close\n            </button>\n          </div>\n        </div>\n      </div>\n    </div>\n    \n    <script>\n      function closeVersionHistory() {\n        document.querySelector('.version-history-modal').closest('.fixed').remove();\n      }\n      \n      function restoreVersion(contentId, version) {\n        if (confirm(\\`Are you sure you want to restore to version \\${version}? This will create a new version with the restored content.\\`)) {\n          fetch(\\`/admin/content/\\${contentId}/restore/\\${version}\\`, {\n            method: 'POST'\n          })\n          .then(response => response.json())\n          .then(data => {\n            if (data.success) {\n              showNotification('Version restored successfully! Refreshing page...', 'success');\n              setTimeout(() => {\n                window.location.reload();\n              }, 1500);\n            } else {\n              showNotification('Failed to restore version', 'error');\n            }\n          })\n          .catch(error => {\n            console.error('Error restoring version:', error);\n            showNotification('Error restoring version', 'error');\n          });\n        }\n      }\n      \n      function previewVersion(contentId, version) {\n        const preview = window.open('', '_blank');\n        preview.document.write('<p>Loading version preview...</p>');\n        \n        fetch(\\`/admin/content/\\${contentId}/version/\\${version}/preview\\`)\n        .then(response => response.text())\n        .then(html => {\n          preview.document.open();\n          preview.document.write(html);\n          preview.document.close();\n        })\n        .catch(error => {\n          preview.document.write('<p>Error loading preview</p>');\n        });\n      }\n      \n      function toggleChanges(elementId) {\n        const element = document.getElementById(elementId);\n        element.classList.toggle('hidden');\n      }\n    </script>\n  `\n}\n\nfunction escapeHtml(text: string): string {\n  if (typeof text !== 'string') return String(text || '')\n  return text.replace(/[&<>\"']/g, (char) => ({\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#39;'\n  }[char] || char))\n}","import { Hono } from 'hono'\nimport { html } from 'hono/html'\nimport type { D1Database, KVNamespace } from '@cloudflare/workers-types'\nimport { renderContentFormPage, ContentFormData } from '../templates/pages/admin-content-form.template'\nimport { renderContentListPage, ContentListPageData } from '../templates/pages/admin-content-list.template'\nimport { renderVersionHistory, VersionHistoryData, ContentVersion } from '../templates/components/version-history.template'\nimport { isPluginActive } from '../middleware/plugin-middleware'\nimport { getCacheService, CACHE_CONFIGS } from '../services/cache'\nimport type { Bindings, Variables } from '../app'\n\nconst adminContentRoutes = new Hono<{ Bindings: Bindings; Variables: Variables }>()\n\n// Get collection fields\nasync function getCollectionFields(db: D1Database, collectionId: string) {\n  const cache = getCacheService(CACHE_CONFIGS.collection!)\n\n  return cache.getOrSet(\n    cache.generateKey('fields', collectionId),\n    async () => {\n      const stmt = db.prepare(`\n        SELECT * FROM content_fields\n        WHERE collection_id = ?\n        ORDER BY field_order ASC\n      `)\n      const { results } = await stmt.bind(collectionId).all()\n\n      return (results || []).map((row: any) => ({\n        id: row.id,\n        field_name: row.field_name,\n        field_type: row.field_type,\n        field_label: row.field_label,\n        field_options: row.field_options ? JSON.parse(row.field_options) : {},\n        field_order: row.field_order,\n        is_required: row.is_required === 1,\n        is_searchable: row.is_searchable === 1\n      }))\n    }\n  )\n}\n\n// Get collection by ID\nasync function getCollection(db: D1Database, collectionId: string) {\n  const cache = getCacheService(CACHE_CONFIGS.collection!)\n\n  return cache.getOrSet(\n    cache.generateKey('collection', collectionId),\n    async () => {\n      const stmt = db.prepare('SELECT * FROM collections WHERE id = ? AND is_active = 1')\n      const collection = await stmt.bind(collectionId).first() as any\n\n      if (!collection) return null\n\n      return {\n        id: collection.id,\n        name: collection.name,\n        display_name: collection.display_name,\n        description: collection.description,\n        schema: collection.schema ? JSON.parse(collection.schema) : {}\n      }\n    }\n  )\n}\n\n// Content list (main page)\nadminContentRoutes.get('/', async (c) => {\n  try {\n    const user = c.get('user')\n    const url = new URL(c.req.url)\n    const db = c.env.DB\n    \n    // Get query parameters\n    const page = parseInt(url.searchParams.get('page') || '1')\n    const limit = parseInt(url.searchParams.get('limit') || '20')\n    const modelName = url.searchParams.get('model') || 'all'\n    const status = url.searchParams.get('status') || 'all'\n    const search = url.searchParams.get('search') || ''\n    const offset = (page - 1) * limit\n    \n    // Get all collections for filter dropdown\n    const collectionsStmt = db.prepare('SELECT id, name, display_name FROM collections WHERE is_active = 1 ORDER BY display_name')\n    const { results: collectionsResults } = await collectionsStmt.all()\n    const models = (collectionsResults || []).map((row: any) => ({\n      name: row.name,\n      displayName: row.display_name\n    }))\n    \n    // Build where conditions\n    const conditions: string[] = []\n    const params: any[] = []\n\n    // Always filter out deleted content unless specifically requested\n    if (status !== 'deleted') {\n      conditions.push(\"c.status != 'deleted'\")\n    }\n\n    if (search) {\n      conditions.push('(c.title LIKE ? OR c.slug LIKE ?)')\n      params.push(`%${search}%`, `%${search}%`)\n    }\n\n    if (modelName !== 'all') {\n      conditions.push('col.name = ?')\n      params.push(modelName)\n    }\n\n    if (status !== 'all' && status !== 'deleted') {\n      conditions.push('c.status = ?')\n      params.push(status)\n    } else if (status === 'deleted') {\n      conditions.push(\"c.status = 'deleted'\")\n    }\n\n    const whereClause = conditions.length > 0 ? `WHERE ${conditions.join(' AND ')}` : ''\n    \n    // Get total count\n    const countStmt = db.prepare(`\n      SELECT COUNT(*) as count \n      FROM content c\n      JOIN collections col ON c.collection_id = col.id\n      ${whereClause}\n    `)\n    const countResult = await countStmt.bind(...params).first() as any\n    const totalItems = countResult?.count || 0\n    \n    // Get content items\n    const contentStmt = db.prepare(`\n      SELECT c.id, c.title, c.slug, c.status, c.created_at, c.updated_at,\n             col.name as collection_name, col.display_name as collection_display_name,\n             u.first_name, u.last_name, u.email as author_email\n      FROM content c\n      JOIN collections col ON c.collection_id = col.id\n      LEFT JOIN users u ON c.author_id = u.id\n      ${whereClause}\n      ORDER BY c.updated_at DESC\n      LIMIT ? OFFSET ?\n    `)\n    const { results } = await contentStmt.bind(...params, limit, offset).all()\n    \n    // Process content items\n    const contentItems = (results || []).map((row: any) => {\n      const statusConfig: Record<string, { class: string; text: string }> = {\n        draft: {\n          class: 'bg-zinc-50 dark:bg-zinc-500/10 text-zinc-700 dark:text-zinc-400 ring-1 ring-inset ring-zinc-600/20 dark:ring-zinc-500/20',\n          text: 'Draft'\n        },\n        review: {\n          class: 'bg-amber-50 dark:bg-amber-500/10 text-amber-700 dark:text-amber-400 ring-1 ring-inset ring-amber-600/20 dark:ring-amber-500/20',\n          text: 'Under Review'\n        },\n        scheduled: {\n          class: 'bg-blue-50 dark:bg-blue-500/10 text-blue-700 dark:text-blue-400 ring-1 ring-inset ring-blue-600/20 dark:ring-blue-500/20',\n          text: 'Scheduled'\n        },\n        published: {\n          class: 'bg-green-50 dark:bg-green-500/10 text-green-700 dark:text-green-400 ring-1 ring-inset ring-green-600/20 dark:ring-green-500/20',\n          text: 'Published'\n        },\n        archived: {\n          class: 'bg-purple-50 dark:bg-purple-500/10 text-purple-700 dark:text-purple-400 ring-1 ring-inset ring-purple-600/20 dark:ring-purple-500/20',\n          text: 'Archived'\n        },\n        deleted: {\n          class: 'bg-red-50 dark:bg-red-500/10 text-red-700 dark:text-red-400 ring-1 ring-inset ring-red-600/20 dark:ring-red-500/20',\n          text: 'Deleted'\n        }\n      }\n\n      const config = statusConfig[row.status as keyof typeof statusConfig] || statusConfig.draft\n      const statusBadge = `\n        <span class=\"inline-flex items-center rounded-md px-2 py-1 text-xs font-medium ${config?.class || ''}\">\n          ${config?.text || row.status}\n        </span>\n      `\n      \n      const authorName = row.first_name && row.last_name \n        ? `${row.first_name} ${row.last_name}`\n        : row.author_email || 'Unknown'\n      \n      const formattedDate = new Date(row.updated_at).toLocaleDateString()\n      \n      // Determine available workflow actions based on status\n      const availableActions: string[] = []\n      switch (row.status) {\n        case 'draft':\n          availableActions.push('submit_for_review', 'publish')\n          break\n        case 'review':\n          availableActions.push('approve', 'request_changes')\n          break\n        case 'published':\n          availableActions.push('unpublish', 'archive')\n          break\n        case 'scheduled':\n          availableActions.push('unschedule')\n          break\n      }\n      \n      return {\n        id: row.id,\n        title: row.title,\n        slug: row.slug,\n        modelName: row.collection_display_name,\n        statusBadge,\n        authorName,\n        formattedDate,\n        availableActions\n      }\n    })\n    \n    const pageData: ContentListPageData = {\n      modelName,\n      status,\n      page,\n      search,\n      models,\n      contentItems,\n      totalItems,\n      itemsPerPage: limit,\n      user: user ? {\n        name: user.email,\n        email: user.email,\n        role: user.role\n      } : undefined,\n      version: c.get('appVersion')\n    }\n\n    return c.html(renderContentListPage(pageData))\n  } catch (error) {\n    console.error('Error fetching content list:', error)\n    return c.html(`<p>Error loading content: ${error}</p>`)\n  }\n})\n\n// New content form\nadminContentRoutes.get('/new', async (c) => {\n  try {\n    const user = c.get('user')\n    const url = new URL(c.req.url)\n    const collectionId = url.searchParams.get('collection')\n    \n    if (!collectionId) {\n      // Show collection selection page\n      const db = c.env.DB\n      const collectionsStmt = db.prepare('SELECT id, name, display_name, description FROM collections WHERE is_active = 1 ORDER BY display_name')\n      const { results } = await collectionsStmt.all()\n      \n      const collections = (results || []).map((row: any) => ({\n        id: row.id,\n        name: row.name,\n        display_name: row.display_name,\n        description: row.description\n      }))\n      \n      // Render collection selection page\n      const selectionHTML = `\n        <!DOCTYPE html>\n        <html>\n        <head>\n          <title>Select Collection - SonicJS AI Admin</title>\n          <script src=\"https://cdn.tailwindcss.com\"></script>\n        </head>\n        <body class=\"bg-gray-900 text-white\">\n          <div class=\"min-h-screen flex items-center justify-center\">\n            <div class=\"max-w-2xl w-full mx-auto p-8\">\n              <h1 class=\"text-3xl font-bold mb-8 text-center\">Create New Content</h1>\n              <p class=\"text-gray-300 text-center mb-8\">Select a collection to create content in:</p>\n              \n              <div class=\"grid gap-4\">\n                ${collections.map(collection => `\n                  <a href=\"/admin/content/new?collection=${collection.id}\" \n                     class=\"block p-6 bg-gray-800 rounded-lg hover:bg-gray-700 transition-colors border border-gray-700\">\n                    <h3 class=\"text-xl font-semibold mb-2\">${collection.display_name}</h3>\n                    <p class=\"text-gray-400\">${collection.description || 'No description'}</p>\n                  </a>\n                `).join('')}\n              </div>\n              \n              <div class=\"mt-8 text-center\">\n                <a href=\"/admin/content\" class=\"text-blue-400 hover:text-blue-300\">← Back to Content List</a>\n              </div>\n            </div>\n          </div>\n        </body>\n        </html>\n      `\n      \n      return c.html(selectionHTML)\n    }\n    \n    const db = c.env.DB\n    const collection = await getCollection(db, collectionId)\n    \n    if (!collection) {\n      const formData: ContentFormData = {\n        collection: { id: '', name: '', display_name: 'Unknown', schema: {} },\n        fields: [],\n        error: 'Collection not found.',\n        user: user ? {\n          name: user.email,\n          email: user.email,\n          role: user.role\n        } : undefined\n      }\n      return c.html(renderContentFormPage(formData))\n    }\n    \n    const fields = await getCollectionFields(db, collectionId)\n    \n    // Check if workflow plugin is active\n    const workflowEnabled = await isPluginActive(db, 'workflow')\n    \n    const formData: ContentFormData = {\n      collection,\n      fields,\n      isEdit: false,\n      workflowEnabled,\n      user: user ? {\n        name: user.email,\n        email: user.email,\n        role: user.role\n      } : undefined\n    }\n    \n    return c.html(renderContentFormPage(formData))\n  } catch (error) {\n    console.error('Error loading new content form:', error)\n    const formData: ContentFormData = {\n      collection: { id: '', name: '', display_name: 'Unknown', schema: {} },\n      fields: [],\n      error: 'Failed to load content form.',\n      user: c.get('user') ? {\n        name: c.get('user')!.email,\n        email: c.get('user')!.email,\n        role: c.get('user')!.role\n      } : undefined\n    }\n    return c.html(renderContentFormPage(formData))\n  }\n})\n\n// Edit content form\nadminContentRoutes.get('/:id/edit', async (c) => {\n  try {\n    const id = c.req.param('id')\n    const user = c.get('user')\n    const db = c.env.DB\n    const url = new URL(c.req.url)\n\n    // Capture referrer parameters to preserve filters when returning to list\n    const referrerParams = url.searchParams.get('ref') || ''\n\n    // Get content with caching\n    const cache = getCacheService(CACHE_CONFIGS.content!)\n    const content = await cache.getOrSet(\n      cache.generateKey('content', id),\n      async () => {\n        const contentStmt = db.prepare(`\n          SELECT c.*, col.id as collection_id, col.name as collection_name,\n                 col.display_name as collection_display_name, col.description as collection_description,\n                 col.schema as collection_schema\n          FROM content c\n          JOIN collections col ON c.collection_id = col.id\n          WHERE c.id = ?\n        `)\n        return await contentStmt.bind(id).first() as any\n      }\n    )\n\n    if (!content) {\n      const formData: ContentFormData = {\n        collection: { id: '', name: '', display_name: 'Unknown', schema: {} },\n        fields: [],\n        error: 'Content not found.',\n        user: user ? {\n          name: user.email,\n          email: user.email,\n          role: user.role\n        } : undefined\n      }\n      return c.html(renderContentFormPage(formData))\n    }\n    \n    const collection = {\n      id: content.collection_id,\n      name: content.collection_name,\n      display_name: content.collection_display_name,\n      description: content.collection_description,\n      schema: content.collection_schema ? JSON.parse(content.collection_schema) : {}\n    }\n    \n    const fields = await getCollectionFields(db, content.collection_id)\n    const contentData = content.data ? JSON.parse(content.data) : {}\n\n    // Check if workflow plugin is active\n    const workflowEnabled = await isPluginActive(db, 'workflow')\n\n    const formData: ContentFormData = {\n      id: content.id,\n      title: content.title,\n      slug: content.slug,\n      data: contentData,\n      status: content.status,\n      scheduled_publish_at: content.scheduled_publish_at,\n      scheduled_unpublish_at: content.scheduled_unpublish_at,\n      review_status: content.review_status,\n      meta_title: content.meta_title,\n      meta_description: content.meta_description,\n      collection,\n      fields,\n      isEdit: true,\n      workflowEnabled,\n      referrerParams,\n      user: user ? {\n        name: user.email,\n        email: user.email,\n        role: user.role\n      } : undefined,\n      version: c.get('appVersion')\n    }\n\n    return c.html(renderContentFormPage(formData))\n  } catch (error) {\n    console.error('Error loading edit content form:', error)\n    const formData: ContentFormData = {\n      collection: { id: '', name: '', display_name: 'Unknown', schema: {} },\n      fields: [],\n      error: 'Failed to load content for editing.',\n      user: c.get('user') ? {\n        name: c.get('user')!.email,\n        email: c.get('user')!.email,\n        role: c.get('user')!.role\n      } : undefined\n    }\n    return c.html(renderContentFormPage(formData))\n  }\n})\n\n// Create content\nadminContentRoutes.post('/', async (c) => {\n  try {\n    const user = c.get('user')\n    const formData = await c.req.formData()\n    const collectionId = formData.get('collection_id') as string\n    const action = formData.get('action') as string\n    \n    if (!collectionId) {\n      return c.html(html`\n        <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n          Collection ID is required.\n        </div>\n      `)\n    }\n    \n    const db = c.env.DB\n    const collection = await getCollection(db, collectionId)\n    \n    if (!collection) {\n      return c.html(html`\n        <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n          Collection not found.\n        </div>\n      `)\n    }\n    \n    const fields = await getCollectionFields(db, collectionId)\n    \n    // Extract field data\n    const data: any = {}\n    const errors: Record<string, string[]> = {}\n    \n    for (const field of fields) {\n      const value = formData.get(field.field_name)\n\n      // Auto-generate GUID for guid field types\n      if (field.field_type === 'guid') {\n        const options = field.field_options || {}\n        if (options.autoGenerate) {\n          data[field.field_name] = crypto.randomUUID()\n          continue\n        }\n      }\n\n      // Validation\n      if (field.is_required && (!value || value.toString().trim() === '')) {\n        errors[field.field_name] = [`${field.field_label} is required`]\n        continue\n      }\n\n      // Type conversion and validation\n      switch (field.field_type) {\n        case 'number':\n          if (value && isNaN(Number(value))) {\n            errors[field.field_name] = [`${field.field_label} must be a valid number`]\n          } else {\n            data[field.field_name] = value ? Number(value) : null\n          }\n          break\n        case 'boolean':\n          data[field.field_name] = formData.get(`${field.field_name}_submitted`) ? (value === 'true') : false\n          break\n        case 'select':\n          if (field.field_options?.multiple) {\n            data[field.field_name] = formData.getAll(`${field.field_name}[]`)\n          } else {\n            data[field.field_name] = value\n          }\n          break\n        case 'guid':\n          // If guid field is not auto-generated, use provided value\n          data[field.field_name] = value || null\n          break\n        default:\n          data[field.field_name] = value\n      }\n    }\n    \n    // Check for validation errors\n    if (Object.keys(errors).length > 0) {\n      const formDataWithErrors: ContentFormData = {\n        collection,\n        fields,\n        data,\n        validationErrors: errors,\n        error: 'Please fix the validation errors below.',\n        user: user ? {\n          name: user.email,\n          email: user.email,\n          role: user.role\n        } : undefined\n      }\n      return c.html(renderContentFormPage(formDataWithErrors))\n    }\n    \n    // Generate slug if not provided\n    let slug = data.slug || data.title\n    if (slug) {\n      slug = slug.toLowerCase()\n        .replace(/[^a-z0-9\\s-]/g, '')\n        .replace(/\\s+/g, '-')\n        .replace(/-+/g, '-')\n        .trim('-')\n    }\n    \n    // Determine status\n    let status = formData.get('status') as string || 'draft'\n    if (action === 'save_and_publish') {\n      status = 'published'\n    }\n    \n    // Handle scheduling\n    const scheduledPublishAt = formData.get('scheduled_publish_at') as string\n    const scheduledUnpublishAt = formData.get('scheduled_unpublish_at') as string\n    \n    // Create content\n    const contentId = crypto.randomUUID()\n    const now = Date.now()\n    \n    const insertStmt = db.prepare(`\n      INSERT INTO content (\n        id, collection_id, slug, title, data, status, \n        scheduled_publish_at, scheduled_unpublish_at,\n        meta_title, meta_description, author_id, created_at, updated_at\n      )\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `)\n    \n    await insertStmt.bind(\n      contentId,\n      collectionId,\n      slug,\n      data.title || 'Untitled',\n      JSON.stringify(data),\n      status,\n      scheduledPublishAt ? new Date(scheduledPublishAt).getTime() : null,\n      scheduledUnpublishAt ? new Date(scheduledUnpublishAt).getTime() : null,\n      data.meta_title || null,\n      data.meta_description || null,\n      user?.userId || 'unknown',\n      now,\n      now\n    ).run()\n\n    // Invalidate collection content list cache\n    const cache = getCacheService(CACHE_CONFIGS.content!)\n    await cache.invalidate(`content:list:${collectionId}:*`)\n\n    // Create initial version\n    const versionStmt = db.prepare(`\n      INSERT INTO content_versions (id, content_id, version, data, author_id, created_at)\n      VALUES (?, ?, ?, ?, ?, ?)\n    `)\n    \n    await versionStmt.bind(\n      crypto.randomUUID(),\n      contentId,\n      1,\n      JSON.stringify(data),\n      user?.userId || 'unknown',\n      now\n    ).run()\n    \n    // Log workflow action\n    const workflowStmt = db.prepare(`\n      INSERT INTO workflow_history (id, content_id, action, from_status, to_status, user_id, created_at)\n      VALUES (?, ?, ?, ?, ?, ?, ?)\n    `)\n    \n    await workflowStmt.bind(\n      crypto.randomUUID(),\n      contentId,\n      'created',\n      'none',\n      status,\n      user?.userId || 'unknown',\n      now\n    ).run()\n    \n    // Handle different actions\n    const referrerParams = formData.get('referrer_params') as string\n    const redirectUrl = action === 'save_and_continue'\n      ? `/admin/content/${contentId}/edit?success=Content saved successfully!${referrerParams ? `&ref=${encodeURIComponent(referrerParams)}` : ''}`\n      : referrerParams\n        ? `/admin/content?${referrerParams}&success=Content created successfully!`\n        : `/admin/content?collection=${collectionId}&success=Content created successfully!`\n\n    // Check if this is an HTMX request\n    const isHTMX = c.req.header('HX-Request') === 'true'\n    \n    if (isHTMX) {\n      // For HTMX requests, use HX-Redirect header to trigger client-side redirect\n      return c.text('', 200, {\n        'HX-Redirect': redirectUrl\n      })\n    } else {\n      // For regular requests, use server-side redirect\n      return c.redirect(redirectUrl)\n    }\n    \n  } catch (error) {\n    console.error('Error creating content:', error)\n    return c.html(html`\n      <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n        Failed to create content. Please try again.\n      </div>\n    `)\n  }\n})\n\n// Update content\nadminContentRoutes.put('/:id', async (c) => {\n  try {\n    const id = c.req.param('id')\n    const user = c.get('user')\n    const formData = await c.req.formData()\n    const action = formData.get('action') as string\n    \n    const db = c.env.DB\n    \n    // Get existing content\n    const contentStmt = db.prepare('SELECT * FROM content WHERE id = ?')\n    const existingContent = await contentStmt.bind(id).first() as any\n    \n    if (!existingContent) {\n      return c.html(html`\n        <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n          Content not found.\n        </div>\n      `)\n    }\n    \n    const collection = await getCollection(db, existingContent.collection_id)\n    if (!collection) {\n      return c.html(html`\n        <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n          Collection not found.\n        </div>\n      `)\n    }\n    \n    const fields = await getCollectionFields(db, existingContent.collection_id)\n    \n    // Extract and validate field data (same as create)\n    const data: any = {}\n    const errors: Record<string, string[]> = {}\n    \n    for (const field of fields) {\n      const value = formData.get(field.field_name)\n      \n      if (field.is_required && (!value || value.toString().trim() === '')) {\n        errors[field.field_name] = [`${field.field_label} is required`]\n        continue\n      }\n      \n      switch (field.field_type) {\n        case 'number':\n          if (value && isNaN(Number(value))) {\n            errors[field.field_name] = [`${field.field_label} must be a valid number`]\n          } else {\n            data[field.field_name] = value ? Number(value) : null\n          }\n          break\n        case 'boolean':\n          data[field.field_name] = formData.get(`${field.field_name}_submitted`) ? (value === 'true') : false\n          break\n        case 'select':\n          if (field.field_options?.multiple) {\n            data[field.field_name] = formData.getAll(`${field.field_name}[]`)\n          } else {\n            data[field.field_name] = value\n          }\n          break\n        default:\n          data[field.field_name] = value\n      }\n    }\n    \n    if (Object.keys(errors).length > 0) {\n      const formDataWithErrors: ContentFormData = {\n        id,\n        collection,\n        fields,\n        data,\n        validationErrors: errors,\n        error: 'Please fix the validation errors below.',\n        isEdit: true,\n        user: user ? {\n          name: user.email,\n          email: user.email,\n          role: user.role\n        } : undefined\n      }\n      return c.html(renderContentFormPage(formDataWithErrors))\n    }\n    \n    // Update slug if title changed\n    let slug = data.slug || data.title\n    if (slug) {\n      slug = slug.toLowerCase()\n        .replace(/[^a-z0-9\\s-]/g, '')\n        .replace(/\\s+/g, '-')\n        .replace(/-+/g, '-')\n        .trim('-')\n    }\n    \n    // Determine status\n    let status = formData.get('status') as string || existingContent.status\n    if (action === 'save_and_publish') {\n      status = 'published'\n    }\n    \n    // Handle scheduling\n    const scheduledPublishAt = formData.get('scheduled_publish_at') as string\n    const scheduledUnpublishAt = formData.get('scheduled_unpublish_at') as string\n    \n    // Update content\n    const now = Date.now()\n    \n    const updateStmt = db.prepare(`\n      UPDATE content SET\n        slug = ?, title = ?, data = ?, status = ?,\n        scheduled_publish_at = ?, scheduled_unpublish_at = ?,\n        meta_title = ?, meta_description = ?, updated_at = ?\n      WHERE id = ?\n    `)\n    \n    await updateStmt.bind(\n      slug,\n      data.title || 'Untitled',\n      JSON.stringify(data),\n      status,\n      scheduledPublishAt ? new Date(scheduledPublishAt).getTime() : null,\n      scheduledUnpublishAt ? new Date(scheduledUnpublishAt).getTime() : null,\n      data.meta_title || null,\n      data.meta_description || null,\n      now,\n      id\n    ).run()\n\n    // Invalidate content cache\n    const cache = getCacheService(CACHE_CONFIGS.content!)\n    await cache.delete(cache.generateKey('content', id))\n    await cache.invalidate(`content:list:${existingContent.collection_id}:*`)\n\n    // Create new version if content changed\n    const existingData = JSON.parse(existingContent.data || '{}')\n    if (JSON.stringify(existingData) !== JSON.stringify(data)) {\n      // Get next version number\n      const versionCountStmt = db.prepare('SELECT MAX(version) as max_version FROM content_versions WHERE content_id = ?')\n      const versionResult = await versionCountStmt.bind(id).first() as any\n      const nextVersion = (versionResult?.max_version || 0) + 1\n      \n      const versionStmt = db.prepare(`\n        INSERT INTO content_versions (id, content_id, version, data, author_id, created_at)\n        VALUES (?, ?, ?, ?, ?, ?)\n      `)\n      \n      await versionStmt.bind(\n        crypto.randomUUID(),\n        id,\n        nextVersion,\n        JSON.stringify(data),\n        user?.userId || 'unknown',\n        now\n      ).run()\n    }\n    \n    // Log workflow action if status changed\n    if (status !== existingContent.status) {\n      const workflowStmt = db.prepare(`\n        INSERT INTO workflow_history (id, content_id, action, from_status, to_status, user_id, created_at)\n        VALUES (?, ?, ?, ?, ?, ?, ?)\n      `)\n      \n      await workflowStmt.bind(\n        crypto.randomUUID(),\n        id,\n        'status_changed',\n        existingContent.status,\n        status,\n        user?.userId || 'unknown',\n        now\n      ).run()\n    }\n    \n    // Handle different actions\n    const referrerParams = formData.get('referrer_params') as string\n    const redirectUrl = action === 'save_and_continue'\n      ? `/admin/content/${id}/edit?success=Content updated successfully!${referrerParams ? `&ref=${encodeURIComponent(referrerParams)}` : ''}`\n      : referrerParams\n        ? `/admin/content?${referrerParams}&success=Content updated successfully!`\n        : `/admin/content?collection=${existingContent.collection_id}&success=Content updated successfully!`\n\n    // Check if this is an HTMX request\n    const isHTMX = c.req.header('HX-Request') === 'true'\n    \n    if (isHTMX) {\n      // For HTMX requests, use HX-Redirect header to trigger client-side redirect\n      return c.text('', 200, {\n        'HX-Redirect': redirectUrl\n      })\n    } else {\n      // For regular requests, use server-side redirect\n      return c.redirect(redirectUrl)\n    }\n    \n  } catch (error) {\n    console.error('Error updating content:', error)\n    return c.html(html`\n      <div class=\"bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded\">\n        Failed to update content. Please try again.\n      </div>\n    `)\n  }\n})\n\n// Content preview\nadminContentRoutes.post('/preview', async (c) => {\n  try {\n    const formData = await c.req.formData()\n    const collectionId = formData.get('collection_id') as string\n    \n    const db = c.env.DB\n    const collection = await getCollection(db, collectionId)\n    \n    if (!collection) {\n      return c.html('<p>Collection not found</p>')\n    }\n    \n    const fields = await getCollectionFields(db, collectionId)\n    \n    // Extract field data for preview\n    const data: any = {}\n    for (const field of fields) {\n      const value = formData.get(field.field_name)\n      \n      switch (field.field_type) {\n        case 'number':\n          data[field.field_name] = value ? Number(value) : null\n          break\n        case 'boolean':\n          data[field.field_name] = value === 'true'\n          break\n        case 'select':\n          if (field.field_options?.multiple) {\n            data[field.field_name] = formData.getAll(`${field.field_name}[]`)\n          } else {\n            data[field.field_name] = value\n          }\n          break\n        default:\n          data[field.field_name] = value\n      }\n    }\n    \n    // Generate preview HTML\n    const previewHTML = `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Preview: ${data.title || 'Untitled'}</title>\n        <style>\n          body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }\n          h1 { color: #333; }\n          .meta { color: #666; font-size: 14px; margin-bottom: 20px; }\n          .content { line-height: 1.6; }\n        </style>\n      </head>\n      <body>\n        <h1>${data.title || 'Untitled'}</h1>\n        <div class=\"meta\">\n          <strong>Collection:</strong> ${collection.display_name}<br>\n          <strong>Status:</strong> ${formData.get('status') || 'draft'}<br>\n          ${data.meta_description ? `<strong>Description:</strong> ${data.meta_description}<br>` : ''}\n        </div>\n        <div class=\"content\">\n          ${data.content || '<p>No content provided.</p>'}\n        </div>\n        \n        <h3>All Fields:</h3>\n        <table border=\"1\" style=\"border-collapse: collapse; width: 100%;\">\n          <tr><th>Field</th><th>Value</th></tr>\n          ${fields.map(field => `\n            <tr>\n              <td><strong>${field.field_label}</strong></td>\n              <td>${data[field.field_name] || '<em>empty</em>'}</td>\n            </tr>\n          `).join('')}\n        </table>\n      </body>\n      </html>\n    `\n    \n    return c.html(previewHTML)\n  } catch (error) {\n    console.error('Error generating preview:', error)\n    return c.html('<p>Error generating preview</p>')\n  }\n})\n\n// Duplicate content\nadminContentRoutes.post('/duplicate', async (c) => {\n  try {\n    const user = c.get('user')\n    const formData = await c.req.formData()\n    const originalId = formData.get('id') as string\n    \n    if (!originalId) {\n      return c.json({ success: false, error: 'Content ID required' })\n    }\n    \n    const db = c.env.DB\n    \n    // Get original content\n    const contentStmt = db.prepare('SELECT * FROM content WHERE id = ?')\n    const original = await contentStmt.bind(originalId).first() as any\n    \n    if (!original) {\n      return c.json({ success: false, error: 'Content not found' })\n    }\n    \n    // Create duplicate\n    const newId = crypto.randomUUID()\n    const now = Date.now()\n    const originalData = JSON.parse(original.data || '{}')\n    \n    // Modify title to indicate it's a copy\n    originalData.title = `${originalData.title || 'Untitled'} (Copy)`\n    \n    const insertStmt = db.prepare(`\n      INSERT INTO content (\n        id, collection_id, slug, title, data, status, \n        author_id, created_at, updated_at\n      )\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)\n    `)\n    \n    await insertStmt.bind(\n      newId,\n      original.collection_id,\n      `${original.slug}-copy-${Date.now()}`,\n      originalData.title,\n      JSON.stringify(originalData),\n      'draft', // Always start as draft\n      user?.userId || 'unknown',\n      now,\n      now\n    ).run()\n    \n    return c.json({ success: true, id: newId })\n  } catch (error) {\n    console.error('Error duplicating content:', error)\n    return c.json({ success: false, error: 'Failed to duplicate content' })\n  }\n})\n\n// Get bulk actions modal\nadminContentRoutes.get('/bulk-actions', async (c) => {\n  const bulkActionsModal = `\n    <div class=\"fixed inset-0 bg-zinc-950/50 dark:bg-zinc-950/80 backdrop-blur-sm z-50 flex items-center justify-center p-4\" onclick=\"this.remove()\">\n      <div class=\"bg-white dark:bg-zinc-900 rounded-xl shadow-xl ring-1 ring-zinc-950/5 dark:ring-white/10 p-6 max-w-md w-full\" onclick=\"event.stopPropagation()\">\n        <div class=\"flex items-center justify-between mb-4\">\n          <h3 class=\"text-lg font-semibold text-zinc-950 dark:text-white\">Bulk Actions</h3>\n          <button onclick=\"this.closest('.fixed').remove()\" class=\"text-zinc-500 hover:text-zinc-700 dark:text-zinc-400 dark:hover:text-zinc-200\">\n            <svg class=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M6 18L18 6M6 6l12 12\"/>\n            </svg>\n          </button>\n        </div>\n        <p class=\"text-sm text-zinc-600 dark:text-zinc-400 mb-4\">\n          Select items from the table below to perform bulk actions.\n        </p>\n        <div class=\"space-y-2\">\n          <button\n            onclick=\"performBulkAction('publish')\"\n            class=\"w-full inline-flex items-center justify-center gap-x-2 px-4 py-2.5 bg-lime-600 dark:bg-lime-500 text-white rounded-lg hover:bg-lime-700 dark:hover:bg-lime-600 transition-colors\"\n          >\n            <svg class=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"/>\n            </svg>\n            Publish Selected\n          </button>\n          <button\n            onclick=\"performBulkAction('draft')\"\n            class=\"w-full inline-flex items-center justify-center gap-x-2 px-4 py-2.5 bg-zinc-600 dark:bg-zinc-700 text-white rounded-lg hover:bg-zinc-700 dark:hover:bg-zinc-800 transition-colors\"\n          >\n            <svg class=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15.232 5.232l3.536 3.536m-2.036-5.036a2.5 2.5 0 113.536 3.536L6.5 21.036H3v-3.572L16.732 3.732z\"/>\n            </svg>\n            Move to Draft\n          </button>\n          <button\n            onclick=\"performBulkAction('delete')\"\n            class=\"w-full inline-flex items-center justify-center gap-x-2 px-4 py-2.5 bg-red-600 dark:bg-red-500 text-white rounded-lg hover:bg-red-700 dark:hover:bg-red-600 transition-colors\"\n          >\n            <svg class=\"h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16\"/>\n            </svg>\n            Delete Selected\n          </button>\n        </div>\n      </div>\n    </div>\n    <script>\n      function performBulkAction(action) {\n        const selectedIds = Array.from(document.querySelectorAll('input[type=\"checkbox\"].row-checkbox:checked'))\n          .map(cb => cb.value)\n          .filter(id => id)\n\n        if (selectedIds.length === 0) {\n          alert('Please select at least one item')\n          return\n        }\n\n        const actionText = action === 'publish' ? 'publish' : action === 'draft' ? 'move to draft' : 'delete'\n        const confirmed = confirm(\\`Are you sure you want to \\${actionText} \\${selectedIds.length} item(s)?\\`)\n\n        if (!confirmed) return\n\n        fetch('/admin/content/bulk-action', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify({\n            action: action,\n            ids: selectedIds\n          })\n        })\n        .then(res => res.json())\n        .then(data => {\n          if (data.success) {\n            document.querySelector('#bulk-actions-modal .fixed').remove()\n            location.reload()\n          } else {\n            alert('Error: ' + (data.error || 'Unknown error'))\n          }\n        })\n        .catch(err => {\n          console.error('Bulk action error:', err)\n          alert('Failed to perform bulk action')\n        })\n      }\n    </script>\n  `\n\n  return c.html(bulkActionsModal)\n})\n\n// Perform bulk action\nadminContentRoutes.post('/bulk-action', async (c) => {\n  try {\n    const user = c.get('user')\n    const body = await c.req.json()\n    const { action, ids } = body\n\n    if (!action || !ids || ids.length === 0) {\n      return c.json({ success: false, error: 'Action and IDs required' })\n    }\n\n    const db = c.env.DB\n    const now = Date.now()\n\n    if (action === 'delete') {\n      // Soft delete by setting status to 'deleted'\n      const placeholders = ids.map(() => '?').join(',')\n      const stmt = db.prepare(`\n        UPDATE content\n        SET status = 'deleted', updated_at = ?\n        WHERE id IN (${placeholders})\n      `)\n      await stmt.bind(now, ...ids).run()\n    } else if (action === 'publish' || action === 'draft') {\n      // Update status\n      const placeholders = ids.map(() => '?').join(',')\n      const publishedAt = action === 'publish' ? now : null\n      const stmt = db.prepare(`\n        UPDATE content\n        SET status = ?, published_at = ?, updated_at = ?\n        WHERE id IN (${placeholders})\n      `)\n      await stmt.bind(action, publishedAt, now, ...ids).run()\n    } else {\n      return c.json({ success: false, error: 'Invalid action' })\n    }\n\n    // Invalidate cache for all affected content items\n    const cache = getCacheService(CACHE_CONFIGS.content!)\n    for (const contentId of ids) {\n      await cache.delete(cache.generateKey('content', contentId))\n    }\n    // Also invalidate list caches (they contain content from potentially multiple collections)\n    await cache.invalidate('content:list:*')\n\n    return c.json({ success: true, count: ids.length })\n  } catch (error) {\n    console.error('Bulk action error:', error)\n    return c.json({ success: false, error: 'Failed to perform bulk action' })\n  }\n})\n\n// Delete content\nadminContentRoutes.delete('/:id', async (c) => {\n  try {\n    const id = c.req.param('id')\n    const db = c.env.DB\n    const user = c.get('user')\n\n    // Check if content exists\n    const contentStmt = db.prepare('SELECT id, title FROM content WHERE id = ?')\n    const content = await contentStmt.bind(id).first() as any\n\n    if (!content) {\n      return c.json({ success: false, error: 'Content not found' }, 404)\n    }\n\n    // Soft delete by setting status to 'deleted'\n    const now = Date.now()\n    const deleteStmt = db.prepare(`\n      UPDATE content\n      SET status = 'deleted', updated_at = ?\n      WHERE id = ?\n    `)\n    await deleteStmt.bind(now, id).run()\n\n    // Invalidate cache\n    const cache = getCacheService(CACHE_CONFIGS.content!)\n    await cache.delete(cache.generateKey('content', id))\n    await cache.invalidate('content:list:*')\n\n    // Return success - let HTMX reload the page\n    return c.html(`\n      <div id=\"content-list\" hx-get=\"/admin/content?model=${c.req.query('model') || 'post'}\" hx-trigger=\"load\" hx-swap=\"outerHTML\">\n        <div class=\"flex items-center justify-center p-8\">\n          <div class=\"text-center\">\n            <svg class=\"mx-auto h-12 w-12 text-lime-500 dark:text-lime-400\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 13l4 4L19 7\"/>\n            </svg>\n            <p class=\"mt-2 text-sm text-zinc-600 dark:text-zinc-400\">Content deleted successfully. Refreshing...</p>\n          </div>\n        </div>\n      </div>\n    `)\n  } catch (error) {\n    console.error('Delete content error:', error)\n    return c.json({ success: false, error: 'Failed to delete content' }, 500)\n  }\n})\n\n// Get version history\nadminContentRoutes.get('/:id/versions', async (c) => {\n  try {\n    const id = c.req.param('id')\n    const db = c.env.DB\n    \n    // Get current content\n    const contentStmt = db.prepare('SELECT * FROM content WHERE id = ?')\n    const content = await contentStmt.bind(id).first() as any\n    \n    if (!content) {\n      return c.html('<p>Content not found</p>')\n    }\n    \n    // Get all versions with author info\n    const versionsStmt = db.prepare(`\n      SELECT cv.*, u.first_name, u.last_name, u.email\n      FROM content_versions cv\n      LEFT JOIN users u ON cv.author_id = u.id\n      WHERE cv.content_id = ?\n      ORDER BY cv.version DESC\n    `)\n    const { results } = await versionsStmt.bind(id).all()\n    \n    const versions: ContentVersion[] = (results || []).map((row: any) => ({\n      id: row.id,\n      version: row.version,\n      data: JSON.parse(row.data || '{}'),\n      author_id: row.author_id,\n      author_name: row.first_name && row.last_name ? `${row.first_name} ${row.last_name}` : row.email,\n      created_at: row.created_at,\n      is_current: false // Will be set below\n    }))\n    \n    // Mark the latest version as current\n    if (versions.length > 0) {\n      versions[0]!.is_current = true\n    }\n    \n    const data: VersionHistoryData = {\n      contentId: id,\n      versions,\n      currentVersion: versions.length > 0 ? versions[0]!.version : 1\n    }\n    \n    return c.html(renderVersionHistory(data))\n  } catch (error) {\n    console.error('Error loading version history:', error)\n    return c.html('<p>Error loading version history</p>')\n  }\n})\n\n// Restore version\nadminContentRoutes.post('/:id/restore/:version', async (c) => {\n  try {\n    const id = c.req.param('id')\n    const version = parseInt(c.req.param('version'))\n    const user = c.get('user')\n    const db = c.env.DB\n    \n    // Get the specific version\n    const versionStmt = db.prepare(`\n      SELECT * FROM content_versions \n      WHERE content_id = ? AND version = ?\n    `)\n    const versionData = await versionStmt.bind(id, version).first() as any\n    \n    if (!versionData) {\n      return c.json({ success: false, error: 'Version not found' })\n    }\n    \n    // Get current content\n    const contentStmt = db.prepare('SELECT * FROM content WHERE id = ?')\n    const currentContent = await contentStmt.bind(id).first() as any\n    \n    if (!currentContent) {\n      return c.json({ success: false, error: 'Content not found' })\n    }\n    \n    const restoredData = JSON.parse(versionData.data)\n    const now = Date.now()\n    \n    // Update content with restored data\n    const updateStmt = db.prepare(`\n      UPDATE content SET\n        title = ?, data = ?, updated_at = ?\n      WHERE id = ?\n    `)\n    \n    await updateStmt.bind(\n      restoredData.title || 'Untitled',\n      versionData.data,\n      now,\n      id\n    ).run()\n    \n    // Create new version for the restoration\n    const nextVersionStmt = db.prepare('SELECT MAX(version) as max_version FROM content_versions WHERE content_id = ?')\n    const nextVersionResult = await nextVersionStmt.bind(id).first() as any\n    const nextVersion = (nextVersionResult?.max_version || 0) + 1\n    \n    const newVersionStmt = db.prepare(`\n      INSERT INTO content_versions (id, content_id, version, data, author_id, created_at)\n      VALUES (?, ?, ?, ?, ?, ?)\n    `)\n    \n    await newVersionStmt.bind(\n      crypto.randomUUID(),\n      id,\n      nextVersion,\n      versionData.data,\n      user?.userId || 'unknown',\n      now\n    ).run()\n    \n    // Log workflow action\n    const workflowStmt = db.prepare(`\n      INSERT INTO workflow_history (id, content_id, action, from_status, to_status, user_id, comment, created_at)\n      VALUES (?, ?, ?, ?, ?, ?, ?, ?)\n    `)\n    \n    await workflowStmt.bind(\n      crypto.randomUUID(),\n      id,\n      'version_restored',\n      currentContent.status,\n      currentContent.status,\n      user?.userId || 'unknown',\n      `Restored to version ${version}`,\n      now\n    ).run()\n    \n    return c.json({ success: true })\n  } catch (error) {\n    console.error('Error restoring version:', error)\n    return c.json({ success: false, error: 'Failed to restore version' })\n  }\n})\n\n// Preview specific version\nadminContentRoutes.get('/:id/version/:version/preview', async (c) => {\n  try {\n    const id = c.req.param('id')\n    const version = parseInt(c.req.param('version'))\n    const db = c.env.DB\n    \n    // Get the specific version\n    const versionStmt = db.prepare(`\n      SELECT cv.*, c.collection_id, col.display_name as collection_name\n      FROM content_versions cv\n      JOIN content c ON cv.content_id = c.id\n      JOIN collections col ON c.collection_id = col.id\n      WHERE cv.content_id = ? AND cv.version = ?\n    `)\n    const versionData = await versionStmt.bind(id, version).first() as any\n    \n    if (!versionData) {\n      return c.html('<p>Version not found</p>')\n    }\n    \n    const data = JSON.parse(versionData.data || '{}')\n    \n    // Generate preview HTML\n    const previewHTML = `\n      <!DOCTYPE html>\n      <html lang=\"en\">\n      <head>\n        <meta charset=\"UTF-8\">\n        <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0\">\n        <title>Version ${version} Preview: ${data.title || 'Untitled'}</title>\n        <style>\n          body { font-family: Arial, sans-serif; max-width: 800px; margin: 0 auto; padding: 20px; }\n          h1 { color: #333; }\n          .meta { color: #666; font-size: 14px; margin-bottom: 20px; padding: 10px; background: #f5f5f5; border-radius: 5px; }\n          .content { line-height: 1.6; }\n          .version-badge { background: #007cba; color: white; padding: 5px 10px; border-radius: 15px; font-size: 12px; }\n        </style>\n      </head>\n      <body>\n        <div class=\"meta\">\n          <span class=\"version-badge\">Version ${version}</span>\n          <strong>Collection:</strong> ${versionData.collection_name}<br>\n          <strong>Created:</strong> ${new Date(versionData.created_at).toLocaleString()}<br>\n          <em>This is a historical version preview</em>\n        </div>\n        \n        <h1>${data.title || 'Untitled'}</h1>\n        \n        <div class=\"content\">\n          ${data.content || '<p>No content provided.</p>'}\n        </div>\n        \n        ${data.excerpt ? `<h3>Excerpt:</h3><p>${data.excerpt}</p>` : ''}\n        \n        <h3>All Field Data:</h3>\n        <pre style=\"background: #f5f5f5; padding: 15px; border-radius: 5px; overflow-x: auto;\">\n${JSON.stringify(data, null, 2)}\n        </pre>\n      </body>\n      </html>\n    `\n    \n    return c.html(previewHTML)\n  } catch (error) {\n    console.error('Error generating version preview:', error)\n    return c.html('<p>Error generating preview</p>')\n  }\n})\nexport default adminContentRoutes\n","/**\n * Routes Module Exports\n *\n * Routes are being migrated incrementally from the monolith.\n * Each route is refactored to remove monolith-specific dependencies.\n */\n\n// API routes\nexport { default as apiRoutes } from './api'\nexport { default as apiContentCrudRoutes } from './api-content-crud'\nexport { default as apiMediaRoutes } from './api-media'\nexport { default as apiSystemRoutes } from './api-system'\nexport { default as adminApiRoutes } from './admin-api'\n\n// Auth routes\nexport { default as authRoutes } from './auth'\n\n// Admin UI routes\nexport { default as adminContentRoutes } from './admin-content'\n\nexport const ROUTES_INFO = {\n  message: 'Routes migration in progress',\n  available: [\n    'apiRoutes',\n    'apiContentCrudRoutes',\n    'apiMediaRoutes',\n    'apiSystemRoutes',\n    'adminApiRoutes',\n    'authRoutes',\n    'adminContentRoutes'\n  ],\n  status: 'Routes are being added incrementally',\n  reference: 'https://github.com/sonicjs/sonicjs'\n} as const\n"]}