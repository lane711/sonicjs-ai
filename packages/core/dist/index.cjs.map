{"version":3,"sources":["../src/plugins/core-plugins/database-tools-plugin/services/database-service.ts","../src/templates/pages/admin-database-table.template.ts","../src/plugins/core-plugins/database-tools-plugin/admin-routes.ts","../src/app.ts","../src/db/index.ts","../src/index.ts"],"names":["init_admin_layout_catalyst_template","escapeHtml","renderAdminLayoutCatalyst","router","Hono","requireAuth","getCoreVersion","metricsMiddleware","bootstrapMiddleware","api_default","api_media_default","api_system_default","admin_api_default","adminCollectionsRoutes","adminSettingsRoutes","admin_content_default","adminMediaRoutes","adminPluginRoutes","adminLogsRoutes","userRoutes","auth_default","d1","drizzle","schema_exports","package_default"],"mappings":"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","file":"index.cjs","sourcesContent":["import { D1Database } from '@cloudflare/workers-types'\n\nexport interface TruncateResult {\n  success: boolean\n  message: string\n  tablesCleared: string[]\n  adminUserPreserved: boolean\n  errors?: string[]\n}\n\nexport interface DatabaseStats {\n  tables: Array<{\n    name: string\n    rowCount: number\n  }>\n  totalRows: number\n}\n\nexport interface TableData {\n  tableName: string\n  columns: string[]\n  rows: any[]\n  totalRows: number\n}\n\nexport class DatabaseToolsService {\n  constructor(private db: D1Database) {}\n\n  /**\n   * Get database statistics\n   */\n  async getDatabaseStats(): Promise<DatabaseStats> {\n    const tables = await this.getTables()\n    const stats: DatabaseStats = {\n      tables: [],\n      totalRows: 0\n    }\n\n    for (const tableName of tables) {\n      try {\n        const result = await this.db.prepare(`SELECT COUNT(*) as count FROM ${tableName}`).first()\n        const rowCount = (result?.count as number) || 0\n        \n        stats.tables.push({\n          name: tableName,\n          rowCount\n        })\n        stats.totalRows += rowCount\n      } catch (error) {\n        // Skip tables that can't be counted (might be views or system tables)\n        console.warn(`Could not count rows in table ${tableName}:`, error)\n      }\n    }\n\n    return stats\n  }\n\n  /**\n   * Get all tables in the database\n   */\n  private async getTables(): Promise<string[]> {\n    const result = await this.db.prepare(`\n      SELECT name FROM sqlite_master \n      WHERE type='table' \n      AND name NOT LIKE 'sqlite_%'\n      ORDER BY name\n    `).all()\n\n    return result.results?.map((row: any) => row.name) || []\n  }\n\n  /**\n   * Truncate all data except admin user\n   */\n  async truncateAllData(adminEmail: string): Promise<TruncateResult> {\n    const errors: string[] = []\n    const tablesCleared: string[] = []\n    let adminUserPreserved = false\n\n    try {\n      // First, preserve the admin user data\n      const adminUser = await this.db.prepare(\n        'SELECT * FROM users WHERE email = ? AND role = ?'\n      ).bind(adminEmail, 'admin').first()\n\n      if (!adminUser) {\n        return {\n          success: false,\n          message: 'Admin user not found. Operation cancelled for safety.',\n          tablesCleared: [],\n          adminUserPreserved: false,\n          errors: ['Admin user not found']\n        }\n      }\n\n      // Define tables to truncate (excluding system tables)\n      const tablesToTruncate = [\n        'content',\n        'content_versions', \n        'content_workflow_status',\n        'collections',\n        'media',\n        'sessions',\n        'notifications',\n        'api_tokens',\n        'workflow_history',\n        'scheduled_content',\n        'faqs',\n        'faq_categories',\n        'plugins',\n        'plugin_settings',\n        'email_templates',\n        'email_themes'\n      ]\n\n      // Check which tables exist\n      const existingTables = await this.getTables()\n      const tablesToClear = tablesToTruncate.filter(table => \n        existingTables.includes(table)\n      )\n\n      // Clear all data except users table\n      for (const tableName of tablesToClear) {\n        try {\n          await this.db.prepare(`DELETE FROM ${tableName}`).run()\n          tablesCleared.push(tableName)\n        } catch (error) {\n          errors.push(`Failed to clear table ${tableName}: ${error}`)\n          console.error(`Error clearing table ${tableName}:`, error)\n        }\n      }\n\n      // Clear users table but preserve admin\n      try {\n        await this.db.prepare('DELETE FROM users WHERE email != ? OR role != ?')\n          .bind(adminEmail, 'admin').run()\n        \n        // Verify admin user still exists\n        const verifyAdmin = await this.db.prepare(\n          'SELECT id FROM users WHERE email = ? AND role = ?'\n        ).bind(adminEmail, 'admin').first()\n\n        adminUserPreserved = !!verifyAdmin\n        tablesCleared.push('users (non-admin)')\n      } catch (error) {\n        errors.push(`Failed to clear non-admin users: ${error}`)\n        console.error('Error clearing non-admin users:', error)\n      }\n\n      // Reset auto-increment counters if supported\n      try {\n        await this.db.prepare('DELETE FROM sqlite_sequence').run()\n      } catch (error) {\n        // sqlite_sequence might not exist, ignore\n      }\n\n      const message = errors.length > 0 \n        ? `Truncation completed with ${errors.length} errors. ${tablesCleared.length} tables cleared.`\n        : `Successfully truncated database. ${tablesCleared.length} tables cleared.`\n\n      return {\n        success: errors.length === 0,\n        message,\n        tablesCleared,\n        adminUserPreserved,\n        errors: errors.length > 0 ? errors : undefined\n      }\n\n    } catch (error) {\n      return {\n        success: false,\n        message: `Database truncation failed: ${error}`,\n        tablesCleared,\n        adminUserPreserved,\n        errors: [String(error)]\n      }\n    }\n  }\n\n  /**\n   * Create a backup of current data (simplified version)\n   */\n  async createBackup(): Promise<{ success: boolean; message: string; backupId?: string }> {\n    try {\n      const backupId = `backup_${Date.now()}`\n      const stats = await this.getDatabaseStats()\n      \n      // In a real implementation, this would export data to a file or cloud storage\n      // For now, we'll just log the stats and return success\n      console.log(`Backup ${backupId} created with ${stats.totalRows} total rows`)\n      \n      return {\n        success: true,\n        message: `Backup created successfully (${stats.totalRows} rows)`,\n        backupId\n      }\n    } catch (error) {\n      return {\n        success: false,\n        message: `Backup failed: ${error}`\n      }\n    }\n  }\n\n  /**\n   * Get table data with optional pagination and sorting\n   */\n  async getTableData(\n    tableName: string,\n    limit: number = 100,\n    offset: number = 0,\n    sortColumn?: string,\n    sortDirection: 'asc' | 'desc' = 'asc'\n  ): Promise<TableData> {\n    try {\n      // Validate table name to prevent SQL injection\n      const tables = await this.getTables()\n      if (!tables.includes(tableName)) {\n        throw new Error(`Table ${tableName} not found`)\n      }\n\n      // Get column names\n      const pragmaResult = await this.db.prepare(`PRAGMA table_info(${tableName})`).all()\n      const columns = pragmaResult.results?.map((col: any) => col.name) || []\n\n      // Validate sort column if provided\n      if (sortColumn && !columns.includes(sortColumn)) {\n        sortColumn = undefined\n      }\n\n      // Get total row count\n      const countResult = await this.db.prepare(`SELECT COUNT(*) as count FROM ${tableName}`).first()\n      const totalRows = (countResult?.count as number) || 0\n\n      // Build query with optional sorting\n      let query = `SELECT * FROM ${tableName}`\n      if (sortColumn) {\n        query += ` ORDER BY ${sortColumn} ${sortDirection.toUpperCase()}`\n      }\n      query += ` LIMIT ${limit} OFFSET ${offset}`\n\n      // Get paginated data\n      const dataResult = await this.db.prepare(query).all()\n\n      return {\n        tableName,\n        columns,\n        rows: dataResult.results || [],\n        totalRows\n      }\n    } catch (error) {\n      throw new Error(`Failed to fetch table data: ${error}`)\n    }\n  }\n\n  /**\n   * Validate database integrity\n   */\n  async validateDatabase(): Promise<{ valid: boolean; issues: string[] }> {\n    const issues: string[] = []\n\n    try {\n      // Check critical tables exist\n      const requiredTables = ['users', 'content', 'collections']\n      const existingTables = await this.getTables()\n\n      for (const table of requiredTables) {\n        if (!existingTables.includes(table)) {\n          issues.push(`Critical table missing: ${table}`)\n        }\n      }\n\n      // Check admin user exists\n      const adminCount = await this.db.prepare(\n        'SELECT COUNT(*) as count FROM users WHERE role = ?'\n      ).bind('admin').first()\n\n      if ((adminCount?.count as number) === 0) {\n        issues.push('No admin users found')\n      }\n\n      // Run SQLite integrity check\n      try {\n        const integrityResult = await this.db.prepare('PRAGMA integrity_check').first()\n        if (integrityResult && (integrityResult as any).integrity_check !== 'ok') {\n          issues.push(`Database integrity check failed: ${(integrityResult as any).integrity_check}`)\n        }\n      } catch (error) {\n        issues.push(`Could not run integrity check: ${error}`)\n      }\n\n    } catch (error) {\n      issues.push(`Validation error: ${error}`)\n    }\n\n    return {\n      valid: issues.length === 0,\n      issues\n    }\n  }\n}","import { renderAdminLayoutCatalyst, AdminLayoutCatalystData } from '../layouts/admin-layout-catalyst.template'\n\nexport interface DatabaseTablePageData {\n  user?: {\n    name: string\n    email: string\n    role: string\n  }\n  tableName: string\n  columns: string[]\n  rows: any[]\n  totalRows: number\n  currentPage: number\n  pageSize: number\n  sortColumn?: string\n  sortDirection?: 'asc' | 'desc'\n}\n\nexport function renderDatabaseTablePage(data: DatabaseTablePageData): string {\n  const totalPages = Math.ceil(data.totalRows / data.pageSize)\n  const startRow = (data.currentPage - 1) * data.pageSize + 1\n  const endRow = Math.min(data.currentPage * data.pageSize, data.totalRows)\n\n  const pageContent = `\n    <div class=\"space-y-6\">\n      <!-- Header -->\n      <div class=\"flex flex-col sm:flex-row sm:items-center sm:justify-between\">\n        <div>\n          <div class=\"flex items-center space-x-3\">\n            <a\n              href=\"/admin/settings/database-tools\"\n              class=\"inline-flex items-center text-sm/6 text-zinc-500 dark:text-zinc-400 hover:text-zinc-700 dark:hover:text-zinc-300\"\n            >\n              <svg class=\"w-5 h-5 mr-1\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M15 19l-7-7 7-7\"/>\n              </svg>\n              Back to Database Tools\n            </a>\n          </div>\n          <h1 class=\"mt-2 text-2xl/8 font-semibold text-zinc-950 dark:text-white sm:text-xl/8\">Table: ${data.tableName}</h1>\n          <p class=\"mt-2 text-sm/6 text-zinc-500 dark:text-zinc-400\">\n            Showing ${startRow.toLocaleString()} - ${endRow.toLocaleString()} of ${data.totalRows.toLocaleString()} rows\n          </p>\n        </div>\n        <div class=\"mt-4 sm:mt-0 flex items-center space-x-3\">\n          <button\n            onclick=\"refreshTableData()\"\n            class=\"inline-flex items-center justify-center rounded-lg bg-white dark:bg-zinc-800 px-3.5 py-2.5 text-sm font-semibold text-zinc-950 dark:text-white ring-1 ring-inset ring-zinc-950/10 dark:ring-white/10 hover:bg-zinc-50 dark:hover:bg-zinc-700 transition-colors shadow-sm\"\n          >\n            <svg class=\"-ml-0.5 mr-1.5 h-5 w-5\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n              <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M4 4v5h.582m15.356 2A8.001 8.001 0 004.582 9m0 0H9m11 11v-5h-.581m0 0a8.003 8.003 0 01-15.357-2m15.357 2H15\"/>\n            </svg>\n            Refresh\n          </button>\n        </div>\n      </div>\n\n      <!-- Table Card -->\n      <div class=\"rounded-xl bg-white dark:bg-zinc-900 shadow-sm ring-1 ring-zinc-950/5 dark:ring-white/10 overflow-hidden\">\n        <!-- Table -->\n        <div class=\"overflow-x-auto\">\n          <table class=\"min-w-full divide-y divide-zinc-950/10 dark:divide-white/10\">\n            <thead class=\"bg-zinc-50 dark:bg-white/5\">\n              <tr>\n                ${data.columns.map(col => `\n                  <th\n                    scope=\"col\"\n                    class=\"px-4 py-3.5 text-left text-xs font-semibold text-zinc-950 dark:text-white uppercase tracking-wider cursor-pointer hover:bg-zinc-100 dark:hover:bg-white/10 transition-colors\"\n                    onclick=\"sortTable('${col}')\"\n                  >\n                    <div class=\"flex items-center space-x-1\">\n                      <span>${col}</span>\n                      ${data.sortColumn === col ? `\n                        <svg class=\"w-4 h-4 ${data.sortDirection === 'asc' ? '' : 'rotate-180'}\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M5 15l7-7 7 7\"/>\n                        </svg>\n                      ` : `\n                        <svg class=\"w-4 h-4 text-zinc-400 dark:text-zinc-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                          <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M7 16V4m0 0L3 8m4-4l4 4m6 0v12m0 0l4-4m-4 4l-4-4\"/>\n                        </svg>\n                      `}\n                    </div>\n                  </th>\n                `).join('')}\n              </tr>\n            </thead>\n            <tbody class=\"divide-y divide-zinc-950/5 dark:divide-white/5\">\n              ${data.rows.length > 0\n                ? data.rows.map((row, idx) => `\n                  <tr class=\"${idx % 2 === 0 ? 'bg-white dark:bg-zinc-900' : 'bg-zinc-50 dark:bg-zinc-900/50'}\">\n                    ${data.columns.map(col => `\n                      <td class=\"px-4 py-3 text-sm text-zinc-700 dark:text-zinc-300 whitespace-nowrap max-w-xs overflow-hidden text-ellipsis\" title=\"${escapeHtml(String(row[col] ?? ''))}\">\n                        ${formatCellValue(row[col])}\n                      </td>\n                    `).join('')}\n                  </tr>\n                `).join('')\n                : `\n                  <tr>\n                    <td colspan=\"${data.columns.length}\" class=\"px-4 py-12 text-center text-sm text-zinc-500 dark:text-zinc-400\">\n                      <svg class=\"w-12 h-12 mx-auto mb-4 text-zinc-400 dark:text-zinc-500\" fill=\"none\" stroke=\"currentColor\" viewBox=\"0 0 24 24\">\n                        <path stroke-linecap=\"round\" stroke-linejoin=\"round\" stroke-width=\"2\" d=\"M20 13V6a2 2 0 00-2-2H6a2 2 0 00-2 2v7m16 0v5a2 2 0 01-2 2H6a2 2 0 01-2-2v-5m16 0h-2.586a1 1 0 00-.707.293l-2.414 2.414a1 1 0 01-.707.293h-3.172a1 1 0 01-.707-.293l-2.414-2.414A1 1 0 006.586 13H4\"/>\n                      </svg>\n                      <p>No data in this table</p>\n                    </td>\n                  </tr>\n                `\n              }\n            </tbody>\n          </table>\n        </div>\n\n        <!-- Pagination -->\n        ${totalPages > 1 ? `\n          <div class=\"flex items-center justify-between border-t border-zinc-950/10 dark:border-white/10 bg-zinc-50 dark:bg-zinc-900/50 px-4 py-3 sm:px-6\">\n            <div class=\"flex flex-1 justify-between sm:hidden\">\n              <button\n                onclick=\"goToPage(${data.currentPage - 1})\"\n                ${data.currentPage === 1 ? 'disabled' : ''}\n                class=\"relative inline-flex items-center rounded-lg px-4 py-2 text-sm font-semibold text-zinc-950 dark:text-white ring-1 ring-inset ring-zinc-950/10 dark:ring-white/10 hover:bg-zinc-100 dark:hover:bg-zinc-800 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                Previous\n              </button>\n              <button\n                onclick=\"goToPage(${data.currentPage + 1})\"\n                ${data.currentPage === totalPages ? 'disabled' : ''}\n                class=\"relative ml-3 inline-flex items-center rounded-lg px-4 py-2 text-sm font-semibold text-zinc-950 dark:text-white ring-1 ring-inset ring-zinc-950/10 dark:ring-white/10 hover:bg-zinc-100 dark:hover:bg-zinc-800 disabled:opacity-50 disabled:cursor-not-allowed\"\n              >\n                Next\n              </button>\n            </div>\n            <div class=\"hidden sm:flex sm:flex-1 sm:items-center sm:justify-between\">\n              <div>\n                <p class=\"text-sm text-zinc-700 dark:text-zinc-300\">\n                  Page <span class=\"font-medium\">${data.currentPage}</span> of <span class=\"font-medium\">${totalPages}</span>\n                </p>\n              </div>\n              <div>\n                <nav class=\"isolate inline-flex -space-x-px rounded-lg shadow-sm\" aria-label=\"Pagination\">\n                  <button\n                    onclick=\"goToPage(${data.currentPage - 1})\"\n                    ${data.currentPage === 1 ? 'disabled' : ''}\n                    class=\"relative inline-flex items-center rounded-l-lg px-2 py-2 text-zinc-400 ring-1 ring-inset ring-zinc-300 dark:ring-zinc-700 hover:bg-zinc-50 dark:hover:bg-zinc-800 focus:z-20 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    <span class=\"sr-only\">Previous</span>\n                    <svg class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fill-rule=\"evenodd\" d=\"M12.79 5.23a.75.75 0 01-.02 1.06L8.832 10l3.938 3.71a.75.75 0 11-1.04 1.08l-4.5-4.25a.75.75 0 010-1.08l4.5-4.25a.75.75 0 011.06.02z\" clip-rule=\"evenodd\" />\n                    </svg>\n                  </button>\n\n                  ${generatePageNumbers(data.currentPage, totalPages)}\n\n                  <button\n                    onclick=\"goToPage(${data.currentPage + 1})\"\n                    ${data.currentPage === totalPages ? 'disabled' : ''}\n                    class=\"relative inline-flex items-center rounded-r-lg px-2 py-2 text-zinc-400 ring-1 ring-inset ring-zinc-300 dark:ring-zinc-700 hover:bg-zinc-50 dark:hover:bg-zinc-800 focus:z-20 disabled:opacity-50 disabled:cursor-not-allowed\"\n                  >\n                    <span class=\"sr-only\">Next</span>\n                    <svg class=\"h-5 w-5\" viewBox=\"0 0 20 20\" fill=\"currentColor\">\n                      <path fill-rule=\"evenodd\" d=\"M7.21 14.77a.75.75 0 01.02-1.06L11.168 10 7.23 6.29a.75.75 0 111.04-1.08l4.5 4.25a.75.75 0 010 1.08l-4.5 4.25a.75.75 0 01-1.06-.02z\" clip-rule=\"evenodd\" />\n                    </svg>\n                  </button>\n                </nav>\n              </div>\n            </div>\n          </div>\n        ` : ''}\n      </div>\n    </div>\n\n    <script>\n      const currentTableName = '${data.tableName}';\n      let currentPage = ${data.currentPage};\n      let currentSort = '${data.sortColumn || ''}';\n      let currentSortDir = '${data.sortDirection || 'asc'}';\n\n      function goToPage(page) {\n        if (page < 1 || page > ${totalPages}) return;\n        const params = new URLSearchParams();\n        params.set('page', page);\n        if (currentSort) {\n          params.set('sort', currentSort);\n          params.set('dir', currentSortDir);\n        }\n        window.location.href = \\`/admin/database-tools/tables/\\${currentTableName}?\\${params}\\`;\n      }\n\n      function sortTable(column) {\n        let newDir = 'asc';\n        if (currentSort === column && currentSortDir === 'asc') {\n          newDir = 'desc';\n        }\n\n        const params = new URLSearchParams();\n        params.set('page', '1');\n        params.set('sort', column);\n        params.set('dir', newDir);\n        window.location.href = \\`/admin/database-tools/tables/\\${currentTableName}?\\${params}\\`;\n      }\n\n      function refreshTableData() {\n        window.location.reload();\n      }\n\n      function formatCellValue(value) {\n        if (value === null || value === undefined) {\n          return '<span class=\"text-zinc-400 dark:text-zinc-500 italic\">null</span>';\n        }\n        if (typeof value === 'boolean') {\n          return \\`<span class=\"px-2 py-0.5 rounded text-xs font-medium \\${value ? 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400' : 'bg-zinc-100 text-zinc-800 dark:bg-zinc-800 dark:text-zinc-400'}\">\\${value}</span>\\`;\n        }\n        if (typeof value === 'object') {\n          return '<span class=\"text-xs font-mono text-zinc-600 dark:text-zinc-400\">' + JSON.stringify(value).substring(0, 50) + (JSON.stringify(value).length > 50 ? '...' : '') + '</span>';\n        }\n        const str = String(value);\n        if (str.length > 100) {\n          return escapeHtml(str.substring(0, 100)) + '...';\n        }\n        return escapeHtml(str);\n      }\n\n      function escapeHtml(text) {\n        const map = {\n          '&': '&amp;',\n          '<': '&lt;',\n          '>': '&gt;',\n          '\"': '&quot;',\n          \"'\": '&#039;'\n        };\n        return String(text).replace(/[&<>\"']/g, m => map[m]);\n      }\n    </script>\n  `\n\n  const layoutData: AdminLayoutCatalystData = {\n    title: `Table: ${data.tableName}`,\n    pageTitle: `Database: ${data.tableName}`,\n    currentPath: `/admin/database-tools/tables/${data.tableName}`,\n    user: data.user,\n    content: pageContent\n  }\n\n  return renderAdminLayoutCatalyst(layoutData)\n}\n\nfunction generatePageNumbers(currentPage: number, totalPages: number): string {\n  const pages: number[] = []\n  const maxVisible = 7\n\n  if (totalPages <= maxVisible) {\n    for (let i = 1; i <= totalPages; i++) {\n      pages.push(i)\n    }\n  } else {\n    if (currentPage <= 4) {\n      for (let i = 1; i <= 5; i++) pages.push(i)\n      pages.push(-1) // ellipsis\n      pages.push(totalPages)\n    } else if (currentPage >= totalPages - 3) {\n      pages.push(1)\n      pages.push(-1) // ellipsis\n      for (let i = totalPages - 4; i <= totalPages; i++) pages.push(i)\n    } else {\n      pages.push(1)\n      pages.push(-1) // ellipsis\n      for (let i = currentPage - 1; i <= currentPage + 1; i++) pages.push(i)\n      pages.push(-1) // ellipsis\n      pages.push(totalPages)\n    }\n  }\n\n  return pages.map(page => {\n    if (page === -1) {\n      return `\n        <span class=\"relative inline-flex items-center px-4 py-2 text-sm font-semibold text-zinc-700 dark:text-zinc-300 ring-1 ring-inset ring-zinc-300 dark:ring-zinc-700\">\n          ...\n        </span>\n      `\n    }\n\n    const isActive = page === currentPage\n    return `\n      <button\n        onclick=\"goToPage(${page})\"\n        class=\"relative inline-flex items-center px-4 py-2 text-sm font-semibold ${\n          isActive\n            ? 'z-10 bg-indigo-600 text-white focus-visible:outline focus-visible:outline-2 focus-visible:outline-offset-2 focus-visible:outline-indigo-600'\n            : 'text-zinc-900 dark:text-zinc-100 ring-1 ring-inset ring-zinc-300 dark:ring-zinc-700 hover:bg-zinc-50 dark:hover:bg-zinc-800'\n        }\"\n      >\n        ${page}\n      </button>\n    `\n  }).join('')\n}\n\nfunction escapeHtml(text: string): string {\n  const map: Record<string, string> = {\n    '&': '&amp;',\n    '<': '&lt;',\n    '>': '&gt;',\n    '\"': '&quot;',\n    \"'\": '&#039;'\n  }\n  return String(text).replace(/[&<>\"']/g, m => map[m] || m)\n}\n\nfunction formatCellValue(value: any): string {\n  if (value === null || value === undefined) {\n    return '<span class=\"text-zinc-400 dark:text-zinc-500 italic\">null</span>'\n  }\n  if (typeof value === 'boolean') {\n    return `<span class=\"px-2 py-0.5 rounded text-xs font-medium ${value ? 'bg-green-100 text-green-800 dark:bg-green-900/30 dark:text-green-400' : 'bg-zinc-100 text-zinc-800 dark:bg-zinc-800 dark:text-zinc-400'}\">${value}</span>`\n  }\n  if (typeof value === 'object') {\n    return '<span class=\"text-xs font-mono text-zinc-600 dark:text-zinc-400\">' + JSON.stringify(value).substring(0, 50) + (JSON.stringify(value).length > 50 ? '...' : '') + '</span>'\n  }\n  const str = String(value)\n  if (str.length > 100) {\n    return escapeHtml(str.substring(0, 100)) + '...'\n  }\n  return escapeHtml(str)\n}\n","import { Hono } from 'hono'\nimport { DatabaseToolsService } from './services/database-service'\nimport { renderDatabaseTablePage, DatabaseTablePageData } from '../../../templates/pages/admin-database-table.template'\nimport { requireAuth } from '../../../middleware'\n\ntype Bindings = {\n  DB: D1Database\n}\n\ntype Variables = {\n  user?: {\n    userId: string\n    email: string\n    role: string\n  }\n}\n\nexport function createDatabaseToolsAdminRoutes() {\n  const router = new Hono<{ Bindings: Bindings; Variables: Variables }>()\n\n  // Apply authentication middleware\n  router.use('*', requireAuth())\n\n  // Get database statistics\n  router.get('/api/stats', async (c) => {\n    try {\n      const user = c.get('user')\n      \n      if (!user || user.role !== 'admin') {\n        return c.json({ \n          success: false, \n          error: 'Unauthorized. Admin access required.' \n        }, 403)\n      }\n\n      const db = c.env.DB\n      const service = new DatabaseToolsService(db)\n      const stats = await service.getDatabaseStats()\n\n      return c.json({\n        success: true,\n        data: stats\n      })\n    } catch (error) {\n      console.error('Error fetching database stats:', error)\n      return c.json({ \n        success: false, \n        error: 'Failed to fetch database statistics' \n      }, 500)\n    }\n  })\n\n  // Truncate all data except admin user\n  router.post('/api/truncate', async (c) => {\n    try {\n      const user = c.get('user')\n      \n      if (!user || user.role !== 'admin') {\n        return c.json({ \n          success: false, \n          error: 'Unauthorized. Admin access required.' \n        }, 403)\n      }\n\n      const body = await c.req.json()\n      const { confirmText } = body\n\n      // Require confirmation text for safety\n      if (confirmText !== 'TRUNCATE ALL DATA') {\n        return c.json({\n          success: false,\n          error: 'Invalid confirmation text. Operation cancelled.'\n        }, 400)\n      }\n\n      const db = c.env.DB\n      const service = new DatabaseToolsService(db)\n      const result = await service.truncateAllData(user.email)\n\n      return c.json({\n        success: result.success,\n        message: result.message,\n        data: {\n          tablesCleared: result.tablesCleared,\n          adminUserPreserved: result.adminUserPreserved,\n          errors: result.errors\n        }\n      })\n    } catch (error) {\n      console.error('Error truncating database:', error)\n      return c.json({ \n        success: false, \n        error: 'Failed to truncate database' \n      }, 500)\n    }\n  })\n\n  // Create backup\n  router.post('/api/backup', async (c) => {\n    try {\n      const user = c.get('user')\n      \n      if (!user || user.role !== 'admin') {\n        return c.json({ \n          success: false, \n          error: 'Unauthorized. Admin access required.' \n        }, 403)\n      }\n\n      const db = c.env.DB\n      const service = new DatabaseToolsService(db)\n      const result = await service.createBackup()\n\n      return c.json({\n        success: result.success,\n        message: result.message,\n        data: {\n          backupId: result.backupId\n        }\n      })\n    } catch (error) {\n      console.error('Error creating backup:', error)\n      return c.json({ \n        success: false, \n        error: 'Failed to create backup' \n      }, 500)\n    }\n  })\n\n  // Validate database\n  router.get('/api/validate', async (c) => {\n    try {\n      const user = c.get('user')\n\n      if (!user || user.role !== 'admin') {\n        return c.json({\n          success: false,\n          error: 'Unauthorized. Admin access required.'\n        }, 403)\n      }\n\n      const db = c.env.DB\n      const service = new DatabaseToolsService(db)\n      const validation = await service.validateDatabase()\n\n      return c.json({\n        success: true,\n        data: validation\n      })\n    } catch (error) {\n      console.error('Error validating database:', error)\n      return c.json({\n        success: false,\n        error: 'Failed to validate database'\n      }, 500)\n    }\n  })\n\n  // Get table data (API endpoint)\n  router.get('/api/tables/:tableName', async (c) => {\n    try {\n      const user = c.get('user')\n\n      if (!user || user.role !== 'admin') {\n        return c.json({\n          success: false,\n          error: 'Unauthorized. Admin access required.'\n        }, 403)\n      }\n\n      const tableName = c.req.param('tableName')\n      const limit = parseInt(c.req.query('limit') || '100')\n      const offset = parseInt(c.req.query('offset') || '0')\n      const sortColumn = c.req.query('sort')\n      const sortDirection = (c.req.query('dir') || 'asc') as 'asc' | 'desc'\n\n      const db = c.env.DB\n      const service = new DatabaseToolsService(db)\n      const tableData = await service.getTableData(tableName, limit, offset, sortColumn, sortDirection)\n\n      return c.json({\n        success: true,\n        data: tableData\n      })\n    } catch (error) {\n      console.error('Error fetching table data:', error)\n      return c.json({\n        success: false,\n        error: `Failed to fetch table data: ${error}`\n      }, 500)\n    }\n  })\n\n  // View table data page\n  router.get('/tables/:tableName', async (c) => {\n    try {\n      const user = c.get('user')\n\n      if (!user || user.role !== 'admin') {\n        return c.redirect('/admin/login')\n      }\n\n      const tableName = c.req.param('tableName')\n      const page = parseInt(c.req.query('page') || '1')\n      const pageSize = parseInt(c.req.query('pageSize') || '50')\n      const sortColumn = c.req.query('sort')\n      const sortDirection = (c.req.query('dir') || 'asc') as 'asc' | 'desc'\n\n      const offset = (page - 1) * pageSize\n\n      const db = c.env.DB\n      const service = new DatabaseToolsService(db)\n      const tableData = await service.getTableData(tableName, pageSize, offset, sortColumn, sortDirection)\n\n      const pageData: DatabaseTablePageData = {\n        user: {\n          name: user.email.split('@')[0] || 'Unknown',\n          email: user.email,\n          role: user.role\n        },\n        tableName: tableData.tableName,\n        columns: tableData.columns,\n        rows: tableData.rows,\n        totalRows: tableData.totalRows,\n        currentPage: page,\n        pageSize: pageSize,\n        sortColumn: sortColumn,\n        sortDirection: sortDirection\n      }\n\n      return c.html(renderDatabaseTablePage(pageData))\n    } catch (error) {\n      console.error('Error rendering table page:', error)\n      return c.text(`Error: ${error}`, 500)\n    }\n  })\n\n  return router\n}","/**\n * Main Application Factory\n *\n * Creates a configured SonicJS application with all core functionality\n */\n\nimport { Hono } from 'hono'\nimport type { Context } from 'hono'\nimport type { D1Database, KVNamespace, R2Bucket } from '@cloudflare/workers-types'\nimport {\n  apiRoutes,\n  apiMediaRoutes,\n  apiSystemRoutes,\n  adminApiRoutes,\n  authRoutes,\n  adminContentRoutes,\n  adminUsersRoutes,\n  adminMediaRoutes,\n  adminPluginRoutes,\n  adminLogsRoutes,\n  adminDashboardRoutes,\n  adminCollectionsRoutes,\n  adminSettingsRoutes\n} from './routes'\nimport { getCoreVersion } from './utils/version'\nimport { bootstrapMiddleware } from './middleware/bootstrap'\nimport { metricsMiddleware } from './middleware/metrics'\nimport { createDatabaseToolsAdminRoutes } from './plugins/core-plugins/database-tools-plugin/admin-routes'\n\n// ============================================================================\n// Type Definitions\n// ============================================================================\n\nexport interface Bindings {\n  DB: D1Database\n  CACHE_KV: KVNamespace\n  MEDIA_BUCKET: R2Bucket\n  ASSETS: Fetcher\n  EMAIL_QUEUE?: Queue\n  SENDGRID_API_KEY?: string\n  DEFAULT_FROM_EMAIL?: string\n  IMAGES_ACCOUNT_ID?: string\n  IMAGES_API_TOKEN?: string\n  ENVIRONMENT?: string\n  BUCKET_NAME?: string\n}\n\nexport interface Variables {\n  user?: {\n    userId: string\n    email: string\n    role: string\n    exp: number\n    iat: number\n  }\n  requestId?: string\n  startTime?: number\n  appVersion?: string\n}\n\nexport interface SonicJSConfig {\n  // Collections configuration\n  collections?: {\n    directory?: string\n    autoSync?: boolean\n  }\n\n  // Plugins configuration\n  plugins?: {\n    directory?: string\n    autoLoad?: boolean\n  }\n\n  // Custom routes\n  routes?: Array<{\n    path: string\n    handler: Hono\n  }>\n\n  // Custom middleware\n  middleware?: {\n    beforeAuth?: Array<(c: Context, next: () => Promise<void>) => Promise<void>>\n    afterAuth?: Array<(c: Context, next: () => Promise<void>) => Promise<void>>\n  }\n\n  // App metadata\n  version?: string\n  name?: string\n}\n\nexport type SonicJSApp = Hono<{ Bindings: Bindings; Variables: Variables }>\n\n// ============================================================================\n// Application Factory\n// ============================================================================\n\n/**\n * Create a SonicJS application with core functionality\n *\n * @param config - Application configuration\n * @returns Configured Hono application\n *\n * @example\n * ```typescript\n * import { createSonicJSApp } from '@sonicjs/core'\n *\n * const app = createSonicJSApp({\n *   collections: {\n *     directory: './src/collections',\n *     autoSync: true\n *   },\n *   plugins: {\n *     directory: './src/plugins',\n *     autoLoad: true\n *   }\n * })\n *\n * export default app\n * ```\n */\nexport function createSonicJSApp(config: SonicJSConfig = {}): SonicJSApp {\n  const app = new Hono<{ Bindings: Bindings; Variables: Variables }>()\n\n  // Set app metadata\n  const appVersion = config.version || getCoreVersion()\n  const appName = config.name || 'SonicJS AI'\n\n  // App version middleware\n  app.use('*', async (c, next) => {\n    c.set('appVersion', appVersion)\n    await next()\n  })\n\n  // Metrics middleware - track all requests for real-time analytics\n  app.use('*', metricsMiddleware())\n\n  // Bootstrap middleware - runs migrations, syncs collections, and initializes plugins\n  app.use('*', bootstrapMiddleware())\n\n  // Custom middleware - before auth\n  if (config.middleware?.beforeAuth) {\n    for (const middleware of config.middleware.beforeAuth) {\n      app.use('*', middleware)\n    }\n  }\n\n  // Logging middleware\n  app.use('*', async (_c, next) => {\n    // Logging logic here\n    await next()\n  })\n\n  // Security middleware\n  app.use('*', async (_c, next) => {\n    // Security headers, CORS, etc.\n    await next()\n  })\n\n  // Custom middleware - after auth\n  if (config.middleware?.afterAuth) {\n    for (const middleware of config.middleware.afterAuth) {\n      app.use('*', middleware)\n    }\n  }\n\n  // Core routes\n  // Routes are being imported incrementally from routes/*\n  // Each route is tested and migrated one-by-one\n  app.route('/api', apiRoutes)\n  app.route('/api/media', apiMediaRoutes)\n  app.route('/api/system', apiSystemRoutes)\n  app.route('/admin/api', adminApiRoutes)\n  app.route('/admin/dashboard', adminDashboardRoutes)\n  app.route('/admin/collections', adminCollectionsRoutes)\n  app.route('/admin/settings', adminSettingsRoutes)\n  app.route('/admin/database-tools', createDatabaseToolsAdminRoutes())\n  app.route('/admin/content', adminContentRoutes)\n  app.route('/admin/media', adminMediaRoutes)\n  app.route('/admin/plugins', adminPluginRoutes)\n  app.route('/admin/logs', adminLogsRoutes)\n  app.route('/admin', adminUsersRoutes)\n  app.route('/auth', authRoutes)\n\n  // Serve files from R2 storage (public file access)\n  app.get('/files/*', async (c) => {\n    try {\n      // Extract the path from the URL pathname (everything after /files/)\n      const url = new URL(c.req.url)\n      const pathname = url.pathname\n\n      // Remove the /files/ prefix to get the R2 object key\n      const objectKey = pathname.replace(/^\\/files\\//, '')\n\n      if (!objectKey) {\n        return c.notFound()\n      }\n\n      // Get file from R2\n      const object = await c.env.MEDIA_BUCKET.get(objectKey)\n\n      if (!object) {\n        return c.notFound()\n      }\n\n      // Set appropriate headers\n      const headers = new Headers()\n      object.httpMetadata?.contentType && headers.set('Content-Type', object.httpMetadata.contentType)\n      object.httpMetadata?.contentDisposition && headers.set('Content-Disposition', object.httpMetadata.contentDisposition)\n      headers.set('Cache-Control', 'public, max-age=31536000') // 1 year cache\n      headers.set('Access-Control-Allow-Origin', '*') // Allow CORS for media files\n      headers.set('Access-Control-Allow-Methods', 'GET, HEAD, OPTIONS')\n      headers.set('Access-Control-Allow-Headers', 'Content-Type')\n\n      return new Response(object.body as any, {\n        headers\n      })\n    } catch (error) {\n      console.error('Error serving file:', error)\n      return c.notFound()\n    }\n  })\n\n  // Custom routes - User-defined routes\n  if (config.routes) {\n    for (const route of config.routes) {\n      app.route(route.path, route.handler)\n    }\n  }\n\n  // Root redirect to login\n  app.get('/', (c) => {\n    return c.redirect('/auth/login')\n  })\n\n  // Health check\n  app.get('/health', (c) => {\n    return c.json({\n      name: appName,\n      version: appVersion,\n      status: 'running',\n      timestamp: new Date().toISOString()\n    })\n  })\n\n  // 404 handler\n  app.notFound((c) => {\n    return c.json({ error: 'Not Found', status: 404 }, 404)\n  })\n\n  // Error handler\n  app.onError((err, c) => {\n    console.error(err)\n    return c.json({ error: 'Internal Server Error', status: 500 }, 500)\n  })\n\n  return app\n}\n\n/**\n * Setup core middleware (backward compatibility)\n *\n * @param _app - Hono application\n * @deprecated Use createSonicJSApp() instead\n */\nexport function setupCoreMiddleware(_app: SonicJSApp): void {\n  console.warn('setupCoreMiddleware is deprecated. Use createSonicJSApp() instead.')\n  // Backward compatibility implementation\n}\n\n/**\n * Setup core routes (backward compatibility)\n *\n * @param _app - Hono application\n * @deprecated Use createSonicJSApp() instead\n */\nexport function setupCoreRoutes(_app: SonicJSApp): void {\n  console.warn('setupCoreRoutes is deprecated. Use createSonicJSApp() instead.')\n  // Backward compatibility implementation\n}\n","import { drizzle } from 'drizzle-orm/d1';\nimport * as schema from './schema';\n\nexport function createDb(d1: D1Database) {\n  return drizzle(d1, { schema });\n}\n\nexport * from './schema';","/**\n * @sonicjs/core - Main Entry Point\n *\n * Core framework for SonicJS headless CMS\n * Built for Cloudflare's edge platform with TypeScript\n *\n * Phase 2 Migration Status:\n * - Week 1: Types, Utils, Database (COMPLETED ✓)\n * - Week 2: Services, Middleware, Plugins (COMPLETED ✓)\n * - Week 3: Routes, Templates (COMPLETED ✓)\n * - Week 4: Integration & Testing (COMPLETED ✓)\n *\n * Test Coverage:\n * - Utilities: 48 tests (sanitize, query-filter, metrics)\n * - Middleware: 51 tests (auth, logging, security, performance)\n * - Total: 99 tests passing\n */\n\n// ============================================================================\n// Main Application API (Phase 2 Week 1)\n// ============================================================================\n\nexport { createSonicJSApp, setupCoreMiddleware, setupCoreRoutes } from './app'\nexport type { SonicJSConfig, SonicJSApp, Bindings, Variables } from './app'\n\n// ============================================================================\n// Placeholders - To be populated in Phase 2\n// ============================================================================\n\n// Services - Week 2 (COMPLETED)\nexport {\n  // Collection Management\n  loadCollectionConfigs,\n  loadCollectionConfig,\n  getAvailableCollectionNames,\n  validateCollectionConfig,\n  syncCollections,\n  syncCollection,\n  isCollectionManaged,\n  getManagedCollections,\n  cleanupRemovedCollections,\n  fullCollectionSync,\n  // Database Migrations\n  MigrationService,\n  // Logging\n  Logger,\n  getLogger,\n  initLogger,\n  // Plugin Services - Class implementations\n  PluginService as PluginServiceClass,\n  PluginBootstrapService,\n} from './services'\n\nexport type { Migration, MigrationStatus, LogLevel, LogCategory, LogEntry, LogFilter, CorePlugin } from './services'\n\n// Middleware - Week 2 (COMPLETED)\nexport {\n  // Authentication\n  AuthManager,\n  requireAuth,\n  requireRole,\n  optionalAuth,\n  // Logging\n  loggingMiddleware,\n  detailedLoggingMiddleware,\n  securityLoggingMiddleware,\n  performanceLoggingMiddleware,\n  // Performance\n  cacheHeaders,\n  compressionMiddleware,\n  securityHeaders,\n  // Permissions\n  PermissionManager,\n  requirePermission,\n  requireAnyPermission,\n  logActivity,\n  // Plugin middleware\n  requireActivePlugin,\n  requireActivePlugins,\n  getActivePlugins,\n  isPluginActive,\n  // Bootstrap\n  bootstrapMiddleware,\n} from './middleware'\n\nexport type { Permission, UserPermissions } from './middleware'\n\n// Plugins - Week 2 (COMPLETED)\nexport {\n  // Hook System - Class implementations\n  HookSystemImpl,\n  ScopedHookSystem as ScopedHookSystemClass,\n  HookUtils,\n  // Plugin Registry\n  PluginRegistryImpl,\n  // Plugin Manager - Class implementation\n  PluginManager as PluginManagerClass,\n  // Plugin Validator - Class implementation\n  PluginValidator as PluginValidatorClass,\n} from './plugins'\n\n// Routes - Week 3 (COMPLETED)\nexport {\n  ROUTES_INFO,\n  apiRoutes,\n  apiContentCrudRoutes,\n  apiMediaRoutes,\n  apiSystemRoutes,\n  adminApiRoutes,\n  authRoutes,\n  adminContentRoutes,\n  adminUsersRoutes,\n  adminMediaRoutes,\n  adminLogsRoutes,\n  adminPluginRoutes,\n  adminDesignRoutes,\n  adminCheckboxRoutes,\n  adminFAQRoutes,\n  adminTestimonialsRoutes,\n  adminCodeExamplesRoutes,\n  adminDashboardRoutes,\n  adminCollectionsRoutes,\n  adminSettingsRoutes,\n} from './routes'\n\n// Templates - Week 3 (COMPLETED)\nexport {\n  // Form templates\n  renderForm,\n  renderFormField,\n  // Table templates\n  renderTable,\n  // Pagination templates\n  renderPagination,\n  // Alert templates\n  renderAlert,\n  // Confirmation dialog templates\n  renderConfirmationDialog,\n  getConfirmationDialogScript,\n  // Filter bar templates\n  renderFilterBar,\n} from './templates'\n\nexport type {\n  FormField,\n  FormData,\n  TableColumn,\n  TableData,\n  PaginationData,\n  AlertData,\n  ConfirmationDialogOptions,\n  FilterBarData,\n  Filter,\n  FilterOption,\n} from './templates'\n\n// Types - Week 1 (COMPLETED)\nexport type {\n  // Collection types\n  FieldType,\n  FieldConfig,\n  CollectionSchema,\n  CollectionConfig,\n  CollectionConfigModule,\n  CollectionSyncResult,\n  // Plugin types\n  Plugin,\n  PluginContext,\n  PluginConfig,\n  PluginRoutes,\n  PluginMiddleware,\n  PluginModel,\n  PluginService,\n  PluginAdminPage,\n  PluginComponent,\n  PluginMenuItem,\n  PluginHook,\n  HookHandler,\n  HookContext,\n  HookSystem,\n  ScopedHookSystem,\n  PluginRegistry,\n  PluginManager,\n  PluginStatus,\n  AuthService,\n  ContentService,\n  MediaService,\n  PluginLogger,\n  PluginBuilderOptions,\n  PluginValidator,\n  PluginValidationResult,\n  HookName,\n  // Plugin manifest\n  PluginManifest,\n} from './types'\n\nexport { HOOKS } from './types'\n\n// Utils - Week 1 (COMPLETED)\nexport {\n  // Sanitization\n  escapeHtml,\n  sanitizeInput,\n  sanitizeObject,\n  // Template rendering\n  TemplateRenderer,\n  templateRenderer,\n  renderTemplate,\n  // Query filtering\n  QueryFilterBuilder,\n  buildQuery,\n  // Metrics\n  metricsTracker,\n  // Version\n  SONICJS_VERSION,\n  getCoreVersion,\n} from './utils'\n\nexport type {\n  FilterOperator,\n  FilterCondition,\n  FilterGroup,\n  QueryFilter,\n  QueryResult,\n} from './utils'\n\n// Database - Week 1 (COMPLETED)\nexport {\n  createDb,\n  // Schema exports\n  users,\n  collections,\n  content,\n  contentVersions,\n  media,\n  apiTokens,\n  workflowHistory,\n  plugins,\n  pluginHooks,\n  pluginRoutes,\n  pluginAssets,\n  pluginActivityLog,\n  systemLogs,\n  logConfig,\n  // Zod validation schemas\n  insertUserSchema,\n  selectUserSchema,\n  insertCollectionSchema,\n  selectCollectionSchema,\n  insertContentSchema,\n  selectContentSchema,\n  insertMediaSchema,\n  selectMediaSchema,\n  insertWorkflowHistorySchema,\n  selectWorkflowHistorySchema,\n  insertPluginSchema,\n  selectPluginSchema,\n  insertPluginHookSchema,\n  selectPluginHookSchema,\n  insertPluginRouteSchema,\n  selectPluginRouteSchema,\n  insertPluginAssetSchema,\n  selectPluginAssetSchema,\n  insertPluginActivityLogSchema,\n  selectPluginActivityLogSchema,\n  insertSystemLogSchema,\n  selectSystemLogSchema,\n  insertLogConfigSchema,\n  selectLogConfigSchema,\n} from './db'\n\nexport type {\n  User,\n  NewUser,\n  Collection,\n  NewCollection,\n  Content,\n  NewContent,\n  Media,\n  NewMedia,\n  WorkflowHistory,\n  NewWorkflowHistory,\n  Plugin as DbPlugin,\n  NewPlugin,\n  PluginHook as DbPluginHook,\n  NewPluginHook,\n  PluginRoute,\n  NewPluginRoute,\n  PluginAsset,\n  NewPluginAsset,\n  PluginActivityLog,\n  NewPluginActivityLog,\n  SystemLog,\n  NewSystemLog,\n  LogConfig,\n  NewLogConfig,\n} from './db'\n\n// Plugins - Week 2\n// export { PluginBuilder, HookSystem } from './plugins/sdk'\n\n// ============================================================================\n// Version\n// ============================================================================\n\n// Import version from package.json\nimport packageJson from '../package.json'\nexport const VERSION = packageJson.version\n\n// ============================================================================\n// Phase 2 Migration Notes\n// ============================================================================\n\n/**\n * This is a work-in-progress package being extracted from the main SonicJS codebase.\n *\n * Current Phase: 2 (Core Module Migration)\n * Current Week: 1 (Types, Utils, Database)\n *\n * Expected completion: 4 weeks from 2025-01-17\n *\n * DO NOT USE IN PRODUCTION - Alpha release for development only\n */\n"]}